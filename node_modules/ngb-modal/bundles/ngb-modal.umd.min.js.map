{"version":3,"sources":["ng://ngb-modal/lib/modal.service.ts","ng://ngb-modal/lib/modal.component.ts","ng://ngb-modal/lib/modal-footer.component.ts","ng://ngb-modal/lib/modal-content.component.ts","ng://ngb-modal/lib/modal-header.component.ts","ng://ngb-modal/lib/modal.module.ts"],"names":["ModalManager","componentFactoryResolver","this","size","modalClass","hideCloseButton","centered","backdrop","animation","keyboard","closeOnOutsideClick","backdropClass","Object","defineProperty","prototype","globalConfig","config","assign","setDefaults","setRootViewContainerRef","ref","modalHost","open","modalInstance","settings","init","componentFactory","resolveComponentFactory","remove","componentRef_1","createComponent","instance","closeFactory","onClose","onOpen","setTimeout","close","_self","Injectable","args","providedIn","ComponentFactoryResolver","ModalComponent","modalManager","EventEmitter","ngOnInit","inputSettings","title","observers","defaults","createBackDrop","_this","isOpened","document","body","appendChild","backdropElement","classList","add","window","modalRoot","nativeElement","focus","emit","removeChild","className","replace","preventClosing","event","stopPropagation","createElement","Component","selector","template","styles","Input","Output","ViewChild","ModalFooterComponent","ModalContentComponent","ModalHeaderComponent","ModalModule","NgModule","imports","CommonModule","declarations","exports"],"mappings":"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","sourcesContent":["import { Injectable, ViewChild, ComponentFactoryResolver, ComponentRef, ViewContainerRef } from '@angular/core';\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ModalManager {\n\n  private modalHost: ViewContainerRef;\n\n  private globalConfig : ModalConfig = {\n    size: \"md\",\n    modalClass: '',\n    hideCloseButton : false,\n    centered: false,\n    backdrop: true,\n    animation : true,\n    keyboard: true,\n    closeOnOutsideClick: true,\n    backdropClass: \"modal-backdrop\" \n  };\n\n  constructor(private componentFactoryResolver: ComponentFactoryResolver) { }\n\n  set defaults(config: ModalConfig) {\n    this.globalConfig = Object.assign(this.globalConfig, config);\n  }\n\n  setDefaults(config: ModalConfig){\n    this.globalConfig = Object.assign(this.globalConfig, config);    \n  }\n\n  get defaults() : ModalConfig {\n    return this.globalConfig;\n  }\n\n  setRootViewContainerRef(ref){\n    this.modalHost = ref;\n  }\n\n  open(modalInstance, settings?){\n    let config = settings || {};\n    if(typeof modalInstance === \"object\"){\n      modalInstance.init(config);\n      modalInstance.open();\n      return modalInstance;\n    }else if(typeof modalInstance === \"function\"){\n      let componentFactory = this.componentFactoryResolver.resolveComponentFactory(modalInstance);\n      this.modalHost.remove();\n      let componentRef = this.modalHost.createComponent(componentFactory);\n      componentRef.instance['ModalComponent'].init(config);\n      componentRef.instance['close'] = this.closeFactory();\n      componentRef.instance['onClose'] = componentRef.instance['ModalComponent'].onClose;\n      componentRef.instance['onOpen'] = componentRef.instance['ModalComponent'].onOpen;\n      setTimeout(() => componentRef.instance['ModalComponent'].open());\n     return componentRef.instance;\n    } \n  }\n\n  close(modalInstance){\n    modalInstance.close();\n  }\n\n  closeFactory(){\n    var _self = this;\n    return function() {\n      this['ModalComponent'].close();\n      _self.modalHost.remove();\n    }\n  }\n\n}\n\nexport interface ModalConfig {\n    title?: string,\n    size?: string | \"md\",\n    modalClass?: string | '',\n    hideCloseButton?: boolean | false,\n    centered?: boolean | false,\n    backdrop?: boolean | 'static' | true,\n    animation?: boolean | true,\n    keyboard?: boolean | true,\n    closeOnOutsideClick?: boolean | true,\n    backdropClass?: string | \"modal-backdrop\"\n}\n","import { Component, OnInit, Input, Output, OnDestroy, OnChanges, EventEmitter, ElementRef, ViewChild } from '@angular/core';\nimport { ModalManager } from './modal.service';\n\ndeclare var document: any;\n\n@Component({\n  selector: 'modal',\n  template: `<div class=\"modal\" tabindex=\"-1\" role=\"dialog\" #modalRoot (keydown.esc)=\"settings?.keyboard ? close() : 0\" [ngStyle]=\"{ display: isOpened ? 'block' : 'none' }\" [ngClass]=\"{'fade': settings?.animation}\" (click)=\"settings?.backdrop !== 'static' && settings?.closeOnOutsideClick ? close() : 0\">\n    <div [class]=\"'modal-dialog modal-'+ settings?.size + ' ' + settings?.modalClass\" (click)=\"preventClosing($event)\" [ngClass]=\"{'modal-dialog-centered': settings?.centered}\">\n        <div class=\"modal-content\" tabindex=\"0\" *ngIf=\"isOpened\">\n            <div class=\"modal-header\">\n                <h4 class=\"modal-title\" *ngIf=\"settings?.title\">{{ settings?.title }}</h4>\n                <ng-content select=\"modal-header\"></ng-content>\n                <button *ngIf=\"!settings?.hideCloseButton\" type=\"button\" class=\"close\" [attr.aria-label]=\"settings?.cancelButtonLabel || 'Close'\" (click)=\"close()\"><span aria-hidden=\"true\">&times;</span></button>\n            </div>\n            <div class=\"modal-body\">\n                <ng-content select=\"modal-content\"></ng-content>\n            </div>\n            <div class=\"modal-footer\">\n                <ng-content select=\"modal-footer\"></ng-content>\n            </div>\n        </div>\n    </div>\n</div>`,\n  styles:[`.modal-dialog-centered {\n    display: -ms-flexbox;\n    display: flex;\n    -ms-flex-align: center;\n    align-items: center;\n    min-height: calc(100% - (0.5rem * 2));\n  }\n  @media (min-width: 576px) {\n    .modal-dialog-centered {\n      min-height: calc(100% - (1.75rem * 2));\n    }\n  }`]\n})\nexport class ModalComponent implements OnInit {\n\n  //title of modal\n  @Input() title;\n\n  //size of modal. sm,lg,md\n  @Input() size;\n\n  //modalClass added to modal dialog\n  @Input() modalClass;\n\n  //hide close button\n  @Input() hideCloseButton;\n\n  //if modal is vertically centered\n  @Input() centered\n\n  //if backdrop is applied on modal\n  @Input() backdrop\n\n  //if true, animation is added to modal dialog\n  @Input() animation;\n\n  //listen to keyboard events\n  @Input() keyboard;\n\n  //close on outside click\n  @Input() closeOnOutsideClick;\n\n  //custom backdrop class\n  @Input() backdropClass;\n\n  @Output() public onOpen = new EventEmitter(false);\n  @Output() public onClose = new EventEmitter(false);\n \n\n  @ViewChild(\"modalRoot\") public modalRoot: ElementRef;\n   \n  public isOpened = false;\n  private inputSettings;\n  public settings;\n  private backdropElement: HTMLElement;\n\n  constructor(private modalManager : ModalManager) {\n  }\n\n  ngOnInit(){\n    this.inputSettings = {\n      title: this.title,\n      size: this.size || \"md\",\n      modalClass: this.modalClass || '',\n      hideCloseButton : this.hideCloseButton || false,\n      centered: this.centered || false,\n      backdrop: this.backdrop || true,\n      animation : this.animation || true,\n      keyboard: this.keyboard || true,\n      closeOnOutsideClick: this.closeOnOutsideClick || true,\n      backdropClass: this.backdropClass || \"modal-backdrop\"\n    }\n  }\n\n  init(config) {\n    this.onOpen.observers = [];\n    this.onClose.observers = [];\n    this.settings = Object.assign({}, this.modalManager.defaults, this.inputSettings, config);\n    this.createBackDrop();\n  }\n\n\n  open() {\n    if (this.isOpened)\n      return;\n    \n    document.body.appendChild(this.backdropElement);\n    document.body.classList.add(\"modal-open\");\n    this.isOpened = true;\n    window.setTimeout(() => {\n      this.modalRoot.nativeElement.classList.add('show');\n      this.modalRoot.nativeElement.focus();\n      this.onOpen.emit();\n    }, 100);\n  }\n\n  close() {\n    if (!this.isOpened)\n      return;\n\n    this.modalRoot.nativeElement.classList.remove('show');\n    document.body.removeChild(this.backdropElement);\n    document.body.className = document.body.className.replace(/modal-open\\b/, \"\");\n    window.setTimeout(() => {\n      this.isOpened = false;\n      this.onClose.emit();\n    }, 100);\n  }\n\n  public preventClosing(event: MouseEvent) {\n    event.stopPropagation();\n  }\n\n  private createBackDrop() {\n    this.backdropElement = document.createElement(\"div\");\n    this.backdropElement.classList.add(\"fade\");\n    this.backdropElement.classList.add(\"show\");\n    if (this.settings && this.settings.backdrop && this.settings.backdrop == true) {\n      this.backdropElement.classList.add(this.settings.backdropClass);\n    }\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'modal-footer',\n  template:`<ng-content></ng-content>`\n})\nexport class ModalFooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'modal-content',\n  template: `<ng-content></ng-content>`\n})\nexport class ModalContentComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'modal-header',\n  template:`<ng-content></ng-content>`\n})\n\nexport class ModalHeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { ModalComponent } from './modal.component';\nimport { ModalFooterComponent } from \"./modal-footer.component\";\nimport { ModalContentComponent } from \"./modal-content.component\";\nimport { ModalHeaderComponent } from \"./modal-header.component\";\n\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [ModalComponent, ModalFooterComponent, ModalContentComponent, ModalHeaderComponent],\n  exports: [ModalComponent, ModalFooterComponent, ModalContentComponent, ModalHeaderComponent]\n})\nexport class ModalModule {\n }\n"]}