{"version":3,"file":"dropdowntree.component.d.ts","sources":["dropdowntree.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, ViewContainerRef, Renderer2, Injector } from '@angular/core';\nimport { IComponentBase } from '@syncfusion/ej2-angular-base';\nimport { DropDownTree } from '@syncfusion/ej2-dropdowns';\nexport declare const inputs: string[];\nexport declare const outputs: string[];\nexport declare const twoWays: string[];\n/**\n*The DropDownTree component contains a list of predefined values from which you can choose a single or multiple values.\n*```html\n*<ejs-dropdowntree></ejs-dropdowntree>\n*```\n*/\nexport declare class DropDownTreeComponent extends DropDownTree implements IComponentBase {\n    private ngEle;\n    private srenderer;\n    private viewContainerRef;\n    private injector;\n    formCompContext: any;\n    formContext: any;\n    tagObjects: any;\n    valueChange: any;\n    /**\n     * Specifies the template that renders a customized footer container at the bottom of the pop-up list.\n     * By default, the footerTemplate will be null and there will be no footer container for the pop-up list.\n     * @default null\n     */\n    footerTemplate: any;\n    /**\n     * Specifies the template that renders a customized header container at the top of the pop-up list.\n     * By default, the headerTemplate will be null and there will be no header container for the pop-up list.\n     * @default null\n     */\n    headerTemplate: any;\n    /**\n     * Specifies a template to render customized content for all the items.\n     * If the **itemTemplate** property is set, the template content overrides the displayed item text.\n     * The property accepts [template string](https://ej2.syncfusion.com/documentation/common/template-engine/)\n     * or HTML element ID holding the content.\n     * @default null\n     */\n    itemTemplate: any;\n    noRecordsTemplate: any;\n    actionFailureTemplate: any;\n    private skipFromEvent;\n    constructor(ngEle: ElementRef, srenderer: Renderer2, viewContainerRef: ViewContainerRef, injector: Injector);\n    registerOnChange(registerFunction: (_: any) => void): void;\n    registerOnTouched(registerFunction: () => void): void;\n    writeValue(value: any): void;\n    setDisabledState(disabled: boolean): void;\n    ngOnInit(): void;\n    ngAfterViewInit(): void;\n    ngOnDestroy(): void;\n    ngAfterContentChecked(): void;\n    registerEvents: (eventList: string[]) => void;\n    addTwoWay: (propList: string[]) => void;\n}\n"]}