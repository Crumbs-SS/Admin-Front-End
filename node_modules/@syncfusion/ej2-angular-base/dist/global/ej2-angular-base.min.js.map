{"version":3,"file":"ej2-angular-base.min.js","sources":["../../src/util.js","../../src/template.js","../../src/complex-array-base.js","../../src/component-base.js","../../src/form-base.js"],"sourcesContent":["import { EventEmitter } from '@angular/core';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Angular Utility Module\n */\n/* tslint:disable */\nexport function applyMixins(derivedClass, baseClass) {\n    baseClass.forEach(function (baseClass) {\n        Object.getOwnPropertyNames(baseClass.prototype).forEach(function (name) {\n            if (!derivedClass.prototype.hasOwnProperty(name) || baseClass.isFormBase) {\n                derivedClass.prototype[name] = baseClass.prototype[name];\n            }\n        });\n    });\n}\n/* tslint:disable */\nexport function ComponentMixins(baseClass) {\n    return function (derivedClass) {\n        applyMixins(derivedClass, baseClass);\n    };\n}\n/**\n * @private\n */\nexport function registerEvents(eventList, obj, direct) {\n    var ngEventsEmitter = {};\n    if (eventList && eventList.length) {\n        for (var _i = 0, eventList_1 = eventList; _i < eventList_1.length; _i++) {\n            var event_1 = eventList_1[_i];\n            if (direct === true) {\n                obj.propCollection[event_1] = new EventEmitter(false);\n                obj[event_1] = obj.propCollection[event_1];\n            }\n            else {\n                ngEventsEmitter[event_1] = new EventEmitter(false);\n            }\n        }\n        if (direct !== true) {\n            obj.setProperties(ngEventsEmitter, true);\n        }\n    }\n}\n/**\n * @private\n */\nexport function clearTemplate(_this, templateNames, index) {\n    var regTemplates = Object.keys(_this.registeredTemplate);\n    if (regTemplates.length) {\n        /* istanbul ignore next */\n        var regProperties = templateNames && templateNames.filter(function (val) {\n            return (/\\./g.test(val) ? false : true);\n        });\n        for (var _i = 0, _a = (regProperties && regProperties || regTemplates); _i < _a.length; _i++) {\n            var registeredTemplate = _a[_i];\n            /* istanbul ignore next */\n            if (index && index.length) {\n                for (var e = 0; e < index.length; e++) {\n                    for (var m = 0; m < _this.registeredTemplate.template.length; m++) {\n                        var value = _this.registeredTemplate.template[m].rootNodes[0];\n                        if (value === index[e]) {\n                            var rt = _this.registeredTemplate[registeredTemplate];\n                            rt[m].destroy();\n                        }\n                    }\n                }\n            }\n            else {\n                if (_this.registeredTemplate[registeredTemplate]) {\n                    for (var _b = 0, _c = _this.registeredTemplate[registeredTemplate]; _b < _c.length; _b++) {\n                        var rt = _c[_b];\n                        if (!rt.destroyed) {\n                            if (rt._view) {\n                                var pNode = rt._view.renderer.parentNode(rt.rootNodes[0]);\n                                if (!isNullOrUndefined(pNode)) {\n                                    for (var m = 0; m < rt.rootNodes.length; m++) {\n                                        pNode.appendChild(rt.rootNodes[m]);\n                                    }\n                                }\n                            }\n                            rt.destroy();\n                        }\n                    }\n                }\n            }\n            delete _this.registeredTemplate[registeredTemplate];\n        }\n    }\n    var _loop_1 = function (tagObject) {\n        if (tagObject.instance) {\n            /* istanbul ignore next */\n            tagObject.instance.clearTemplate((templateNames && templateNames.filter(function (val) {\n                return (new RegExp(tagObject.name).test(val) ? true : false);\n            })));\n        }\n    };\n    for (var _d = 0, _e = _this.tagObjects; _d < _e.length; _d++) {\n        var tagObject = _e[_d];\n        _loop_1(tagObject);\n    }\n}\n/**\n * To set value for the nameSpace in desired object.\n * @param {string} nameSpace - String value to the get the inner object\n * @param {any} value - Value that you need to set.\n * @param {any} obj - Object to get the inner object value.\n * @return {void}\n * @private\n */\nexport function setValue(nameSpace, value, object) {\n    var keys = nameSpace.replace(/\\[/g, '.').replace(/\\]/g, '').split('.');\n    /* istanbul ignore next */\n    var fromObj = object || {};\n    for (var i = 0; i < keys.length; i++) {\n        var key = keys[i];\n        if (i + 1 === keys.length) {\n            fromObj[key] = value === undefined ? {} : value;\n        }\n        else if (fromObj[key] === undefined) {\n            fromObj[key] = {};\n        }\n        fromObj = fromObj[key];\n    }\n    return fromObj;\n}\n","import { setTemplateEngine, getTemplateEngine } from '@syncfusion/ej2-base';\nimport { setValue, getValue } from '@syncfusion/ej2-base';\nvar stringCompiler = getTemplateEngine();\n/**\n * Angular Template Compiler\n */\nexport function compile(templateEle, helper) {\n    if (typeof templateEle === 'string') {\n        return stringCompiler(templateEle, helper);\n    }\n    else {\n        var contRef_1 = templateEle.elementRef.nativeElement._viewContainerRef;\n        var pName_1 = templateEle.elementRef.nativeElement.propName;\n        //tslint:disable-next-line        \n        return function (data, component, propName) {\n            var context = { $implicit: data };\n            /* istanbul ignore next */\n            var conRef = contRef_1 ? contRef_1 : component.viewContainerRef;\n            var viewRef = conRef.createEmbeddedView(templateEle, context);\n            viewRef.markForCheck();\n            /* istanbul ignore next */\n            var viewCollection = (component && component.registeredTemplate) ?\n                component.registeredTemplate : getValue('currentInstance.registeredTemplate', conRef);\n            propName = (propName && component.registeredTemplate) ? propName : pName_1;\n            if (typeof viewCollection[propName] === 'undefined') {\n                viewCollection[propName] = [];\n            }\n            viewCollection[propName].push(viewRef);\n            return viewRef.rootNodes;\n        };\n    }\n}\n/**\n * Property decorator for angular.\n */\nexport function Template(defaultValue) {\n    return function (target, key) {\n        var propertyDescriptor = {\n            set: setter(key),\n            get: getter(key, defaultValue),\n            enumerable: true,\n            configurable: true\n        };\n        Object.defineProperty(target, key, propertyDescriptor);\n    };\n}\nfunction setter(key) {\n    return function (val) {\n        if (val === undefined) {\n            return;\n        }\n        setValue(key + 'Ref', val, this);\n        if (typeof val !== 'string') {\n            val.elementRef.nativeElement._viewContainerRef = this.viewContainerRef;\n            val.elementRef.nativeElement.propName = key;\n        }\n        else {\n            if (this.saveChanges) {\n                this.saveChanges(key, val, undefined);\n                this.dataBind();\n            }\n        }\n    };\n}\nfunction getter(key, defaultValue) {\n    return function () {\n        /* istanbul ignore next */\n        return getValue(key + 'Ref', this) || defaultValue;\n    };\n}\n//tslint:disable-next-line\nsetTemplateEngine({ compile: compile });\n","import { getValue, setValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { clearTemplate, registerEvents } from './util';\nvar refRegex = /Ref$/;\nvar ComplexBase = /** @class */ (function () {\n    function ComplexBase() {\n        this.hasChanges = false;\n        this.propCollection = {};\n        this.dataSource = {};\n        this.tags = [];\n        this.tagObjects = [];\n    }\n    ComplexBase.prototype.ngOnInit = function () {\n        this.registeredTemplate = {};\n        for (var _i = 0, _a = this.tags; _i < _a.length; _i++) {\n            var tag = _a[_i];\n            var objInstance = getValue('child' + tag.substring(0, 1).toUpperCase() + tag.substring(1), this);\n            if (objInstance) {\n                this.tagObjects.push({ instance: objInstance, name: tag });\n            }\n        }\n        var templateProperties = Object.keys(this);\n        templateProperties = templateProperties.filter(function (val) {\n            return /Ref$/i.test(val);\n        });\n        for (var _b = 0, templateProperties_1 = templateProperties; _b < templateProperties_1.length; _b++) {\n            var tempName = templateProperties_1[_b];\n            var propName = tempName.replace('Ref', '');\n            setValue(propName.replace('_', '.'), getValue(propName, this), this.propCollection);\n        }\n        // Angular 9 compatibility to overcome ngOnchange not get triggered issue\n        // To Update properties to \"this.propCollection\"\n        var propList = Object.keys(this);\n        /* istanbul ignore next */\n        if (this.directivePropList) {\n            for (var k = 0; k < this.directivePropList.length; k++) {\n                var dirPropName = this.directivePropList[k];\n                if (propList.indexOf(dirPropName) !== -1) {\n                    setValue(dirPropName, getValue(dirPropName, this), this.propCollection);\n                }\n            }\n            this.hasChanges = true;\n        }\n        this.isInitChanges = true;\n    };\n    ComplexBase.prototype.registerEvents = function (eventList) {\n        registerEvents(eventList, this, true);\n    };\n    ComplexBase.prototype.ngOnChanges = function (changes) {\n        for (var _i = 0, _a = Object.keys(changes); _i < _a.length; _i++) {\n            var propName = _a[_i];\n            var changedVal = changes[propName];\n            this.propCollection[propName] = changedVal.currentValue;\n        }\n        this.isUpdated = false;\n        this.hasChanges = true;\n    };\n    /* istanbul ignore next */\n    ComplexBase.prototype.clearTemplate = function (templateNames) {\n        clearTemplate(this, templateNames);\n    };\n    ComplexBase.prototype.getProperties = function () {\n        /* istanbul ignore next */\n        for (var _i = 0, _a = this.tagObjects; _i < _a.length; _i++) {\n            var tagObject = _a[_i];\n            this.propCollection[tagObject.name] = tagObject.instance.getProperties();\n        }\n        return this.propCollection;\n    };\n    ComplexBase.prototype.isChanged = function () {\n        var result = this.hasChanges;\n        if (!isNullOrUndefined(this.propCollection[this.property])) {\n            var tempProps = this.propCollection[this.property];\n            var props = Object.keys(tempProps[0]);\n            for (var d = 0; d < props.length; d++) {\n                if (!isNullOrUndefined(this.propCollection[props[d]])) {\n                    var val = getValue(props[d], this);\n                    var propVal = this.propCollection[this.property][0][props[d]];\n                    if (!isNullOrUndefined(val) && this.propCollection[props[d]] !== val\n                        && propVal !== val) {\n                        setValue(props[d], val, this.propCollection[this.property][0]);\n                        setValue(props[d], val, this.propCollection);\n                        this.hasChanges = true;\n                        this.isUpdated = false;\n                    }\n                }\n            }\n        }\n        /* istanbul ignore next */\n        for (var _i = 0, _a = this.tagObjects; _i < _a.length; _i++) {\n            var item = _a[_i];\n            result = result || item.instance.hasChanges;\n        }\n        return result || this.hasChanges;\n    };\n    ComplexBase.prototype.ngAfterContentChecked = function () {\n        this.hasChanges = this.isChanged();\n        if (this.isInitChanges || this.hasChanges) {\n            var templateProperties = Object.keys(this);\n            templateProperties = templateProperties.filter(function (val) {\n                return refRegex.test(val);\n            });\n            for (var _i = 0, templateProperties_2 = templateProperties; _i < templateProperties_2.length; _i++) {\n                var tempName = templateProperties_2[_i];\n                var propName = tempName.replace('Ref', '');\n                setValue(propName.replace('_', '.'), getValue(propName, this), this.propCollection);\n            }\n        }\n    };\n    ComplexBase.prototype.ngAfterViewChecked = function () {\n        /* istanbul ignore next */\n        if (this.isUpdated) {\n            this.hasChanges = false;\n        }\n    };\n    ComplexBase.prototype.ngAfterViewInit = function () {\n        /* istanbul ignore next */\n        this.isInitChanges = false;\n    };\n    ComplexBase.prototype.ngOnDestroy = function () {\n        /* istanbul ignore next */\n        this.directivePropList = [];\n    };\n    return ComplexBase;\n}());\nexport { ComplexBase };\nvar ArrayBase = /** @class */ (function () {\n    function ArrayBase(propertyName) {\n        this.list = [];\n        this.hasChanges = false;\n        this.propertyName = propertyName;\n    }\n    ArrayBase.prototype.ngOnInit = function () {\n        this.isInitChanges = true;\n    };\n    ArrayBase.prototype.ngAfterContentInit = function () {\n        var _this = this;\n        var index = 0;\n        /* istanbul ignore next */\n        this.list = this.children.map(function (child) {\n            child.dirIndex = index++;\n            child.property = _this.propertyName;\n            return child;\n        });\n        this.hasChanges = true;\n    };\n    ArrayBase.prototype.getProperties = function () {\n        var onlyProp = [];\n        for (var _i = 0, _a = this.list; _i < _a.length; _i++) {\n            var item = _a[_i];\n            onlyProp.push(item.getProperties());\n        }\n        return onlyProp;\n    };\n    ArrayBase.prototype.isChanged = function () {\n        var _this = this;\n        var result = false;\n        var index = 0;\n        var isSourceChanged = false;\n        // tslint:disable-next-line\n        var childrenDataSource = this.children.map(function (child) {\n            return child;\n        });\n        /* istanbul ignore next */\n        if (this.list.length === this.children.length) {\n            for (var i = 0; i < this.list.length; i++) {\n                if (this.list[i].propCollection.dataSource) {\n                    if (this.list[i].dataSource && this.list[i].propCollection.dataSource !== this.list[i].dataSource) {\n                        this.list[i].propCollection.dataSource = this.list[i].dataSource;\n                        this.list[i].hasChanges = true;\n                    }\n                    isSourceChanged = (JSON.stringify(this.list[i].propCollection.dataSource) !==\n                        JSON.stringify(childrenDataSource[i].propCollection.dataSource));\n                }\n            }\n        }\n        this.hasNewChildren = (this.list.length !== this.children.length || isSourceChanged) ? true : null;\n        if (this.hasNewChildren) {\n            this.list = this.children.map(function (child) {\n                child.dirIndex = index++;\n                child.property = _this.propertyName;\n                return child;\n            });\n        }\n        /* istanbul ignore end */\n        for (var _i = 0, _a = this.list; _i < _a.length; _i++) {\n            var item = _a[_i];\n            result = result || item.hasChanges;\n        }\n        return !!this.list.length && result;\n    };\n    ArrayBase.prototype.clearTemplate = function (templateNames) {\n        var _this = this;\n        /* istanbul ignore next */\n        for (var _i = 0, _a = this.list; _i < _a.length; _i++) {\n            var item = _a[_i];\n            item.clearTemplate(templateNames && templateNames.map(function (val) {\n                return new RegExp(_this.propertyName).test(val) ? val.replace(_this.propertyName + '.', '') : val;\n            }));\n        }\n    };\n    ArrayBase.prototype.ngAfterContentChecked = function () {\n        this.hasChanges = this.isChanged();\n        for (var i = 0; i < this.list.length; i++) {\n            this.list[i].isUpdated = true;\n        }\n    };\n    ArrayBase.prototype.ngAfterViewInit = function () {\n        this.isInitChanges = false;\n    };\n    ArrayBase.prototype.ngOnDestroy = function () {\n        this.list = [];\n    };\n    return ArrayBase;\n}());\nexport { ArrayBase };\n","/**\n * Angular Component Base Module\n */\nimport { getValue, isUndefined, setValue, isNullOrUndefined, attributes, createElement } from '@syncfusion/ej2-base';\nimport { EventEmitter } from '@angular/core';\nimport { clearTemplate, registerEvents } from './util';\nvar SVG_REG = /^svg|^path|^g/;\nvar ComponentBase = /** @class */ (function () {\n    function ComponentBase() {\n        this.isProtectedOnChange = true;\n        this.isFormInit = true;\n    }\n    ComponentBase.prototype.saveChanges = function (key, newValue, oldValue) {\n        if (this.isProtectedOnChange) {\n            return;\n        }\n        this.oldProperties[key] = oldValue;\n        this.changedProperties[key] = newValue;\n        this.finalUpdate();\n        // tslint:disable-next-line:no-any\n        var changeTime = setTimeout(this.dataBind.bind(this));\n        var clearUpdate = function () {\n            clearTimeout(changeTime);\n        };\n        this.finalUpdate = clearUpdate;\n    };\n    ;\n    // tslint:disable-next-line:no-any\n    ComponentBase.prototype.ngOnInit = function (isTempRef) {\n        // tslint:disable-next-line:no-any\n        var tempOnThis = isTempRef || this;\n        tempOnThis.registeredTemplate = {};\n        tempOnThis.ngBoundedEvents = {};\n        tempOnThis.isAngular = true;\n        tempOnThis.isFormInit = true;\n        /* istanbul ignore next */\n        if (isTempRef) {\n            this.tags = isTempRef.tags;\n        }\n        tempOnThis.tags = this.tags || [];\n        tempOnThis.complexTemplate = this.complexTemplate || [];\n        tempOnThis.tagObjects = [];\n        tempOnThis.ngAttr = this.getAngularAttr(tempOnThis.element);\n        /* istanbul ignore next */\n        tempOnThis.createElement = function (tagName, prop) {\n            //tslint:disable-next-line\n            var ele = tempOnThis.srenderer ? tempOnThis.srenderer.createElement(tagName) : createElement(tagName);\n            if (typeof (prop) === 'undefined') {\n                return ele;\n            }\n            ele.innerHTML = (prop.innerHTML ? prop.innerHTML : '');\n            if (prop.className !== undefined) {\n                ele.className = prop.className;\n            }\n            if (prop.id !== undefined) {\n                ele.id = prop.id;\n            }\n            if (prop.styles !== undefined) {\n                ele.setAttribute('style', prop.styles);\n            }\n            if (tempOnThis.ngAttr !== undefined) {\n                ele.setAttribute(tempOnThis.ngAttr, '');\n            }\n            if (prop.attrs !== undefined) {\n                attributes(ele, prop.attrs);\n            }\n            return ele;\n        };\n        for (var _i = 0, _a = tempOnThis.tags; _i < _a.length; _i++) {\n            var tag = _a[_i];\n            var tagObject = {\n                instance: getValue('child' + tag.substring(0, 1).toUpperCase() + tag.substring(1), tempOnThis),\n                name: tag\n            };\n            tempOnThis.tagObjects.push(tagObject);\n        }\n        var complexTemplates = Object.keys(tempOnThis);\n        complexTemplates = complexTemplates.filter(function (val) {\n            return /Ref$/i.test(val) && /\\_/i.test(val);\n        });\n        for (var _b = 0, complexTemplates_1 = complexTemplates; _b < complexTemplates_1.length; _b++) {\n            var tempName = complexTemplates_1[_b];\n            var propName = tempName.replace('Ref', '');\n            var val = {};\n            setValue(propName.replace('_', '.'), getValue(propName, tempOnThis), val);\n            tempOnThis.setProperties(val, true);\n        }\n    };\n    ComponentBase.prototype.getAngularAttr = function (ele) {\n        var attributes = ele.attributes;\n        var length = attributes.length;\n        var ngAr;\n        for (var i = 0; i < length; i++) {\n            /* istanbul ignore next */\n            if (/_ngcontent/g.test(attributes[i].name)) {\n                ngAr = attributes[i].name;\n            }\n        }\n        return ngAr;\n    };\n    ;\n    // tslint:disable-next-line:no-any\n    ComponentBase.prototype.ngAfterViewInit = function (isTempRef) {\n        // tslint:disable-next-line:no-any\n        var tempAfterViewThis = isTempRef || this;\n        var regExp = /ejs-tab|ejs-accordion/g;\n        /* istanbul ignore next */\n        if (regExp.test(tempAfterViewThis.ngEle.nativeElement.outerHTML)) {\n            tempAfterViewThis.ngEle.nativeElement.style.visibility = 'hidden';\n        }\n        /**\n         * Root level template properties are not getting rendered,\n         * Due to ngonchanges not get triggered.\n         * so that we have set template value for root level template properties,\n         * for example: refer below syntax\n         * ```html\n         * <ejs-grid>\n         * <e-column></e-column>\n         * <ng-template #editSettingsTemplate></ng-template>\n         * </ejs-grid>\n         * ```\n         */\n        var templateProperties = Object.keys(tempAfterViewThis);\n        templateProperties = templateProperties.filter(function (val) {\n            return /Ref$/i.test(val);\n        });\n        for (var _i = 0, templateProperties_1 = templateProperties; _i < templateProperties_1.length; _i++) {\n            var tempName = templateProperties_1[_i];\n            var propName = tempName.replace('Ref', '');\n            setValue(propName.replace('_', '.'), getValue(propName + 'Ref', tempAfterViewThis), tempAfterViewThis);\n        }\n        // Used setTimeout for template binding\n        // Refer Link: https://github.com/angular/angular/issues/6005\n        setTimeout(function () {\n            /* istanbul ignore else  */\n            if (typeof window !== 'undefined') {\n                tempAfterViewThis.appendTo(tempAfterViewThis.element);\n                tempAfterViewThis.ngEle.nativeElement.style.visibility = '';\n            }\n        });\n    };\n    // tslint:disable-next-line:no-any\n    ComponentBase.prototype.ngOnDestroy = function (isTempRef) {\n        // tslint:disable-next-line:no-any\n        var tempOnDestroyThis = isTempRef || this;\n        /* istanbul ignore else  */\n        setTimeout(function () {\n            if (typeof window !== 'undefined' && tempOnDestroyThis.element.classList.contains('e-control')) {\n                tempOnDestroyThis.destroy();\n                tempOnDestroyThis.clearTemplate(null);\n                // removing bounded events and tagobjects from component after destroy\n                tempOnDestroyThis.ngBoundedEvents = {};\n                tempOnDestroyThis.tagObjects = {};\n                tempOnDestroyThis.ngEle = null;\n            }\n        });\n    };\n    //tslint:disable-next-line\n    ComponentBase.prototype.clearTemplate = function (templateNames, index) {\n        clearTemplate(this, templateNames, index);\n    };\n    ;\n    // tslint:disable-next-line:no-any\n    ComponentBase.prototype.ngAfterContentChecked = function (isTempRef) {\n        // tslint:disable-next-line:no-any\n        var tempAfterContentThis = isTempRef || this;\n        for (var _i = 0, _a = tempAfterContentThis.tagObjects; _i < _a.length; _i++) {\n            var tagObject = _a[_i];\n            if (!isUndefined(tagObject.instance) &&\n                (tagObject.instance.isInitChanges || tagObject.instance.hasChanges || tagObject.instance.hasNewChildren)) {\n                if (tagObject.instance.isInitChanges) {\n                    var propObj = {};\n                    // For angular 9 compatibility\n                    // Not able to get complex directive properties reference ni Onint hook\n                    // So we have constructed property here and used\n                    var complexDirProps = void 0;\n                    var list = getValue('instance.list', tagObject);\n                    if (list && list.length) {\n                        complexDirProps = list[0].directivePropList;\n                    }\n                    var skip = true;\n                    if (tempAfterContentThis.getModuleName && tempAfterContentThis.getModuleName() === 'gantt') {\n                        skip = false;\n                    }\n                    if (complexDirProps && skip && complexDirProps.indexOf(tagObject.instance.propertyName) === -1) {\n                        var compDirPropList = Object.keys(tagObject.instance.list[0].propCollection);\n                        for (var h = 0; h < tagObject.instance.list.length; h++) {\n                            tagObject.instance.list[h].propCollection[tagObject.instance.propertyName] = [];\n                            var obj = {};\n                            for (var k = 0; k < compDirPropList.length; k++) {\n                                var complexPropName = compDirPropList[k];\n                                obj[complexPropName] = tagObject.instance.list[h].propCollection[complexPropName];\n                            }\n                            for (var i = 0; i < tagObject.instance.list[h].tags.length; i++) {\n                                var tag = tagObject.instance.list[h].tags[i];\n                                var childObj = getValue('child' + tag.substring(0, 1).toUpperCase() + tag.substring(1), tagObject.instance.list[h]);\n                                if (childObj) {\n                                    var innerchildObj = tagObject.instance.list[h]['child' + tag.substring(0, 1).toUpperCase() + tag.substring(1)];\n                                    if (innerchildObj) {\n                                        for (var j = 0; j < innerchildObj.list.length; j++) {\n                                            var innerTag = innerchildObj.list[0].tags[0];\n                                            if (innerTag) {\n                                                var innerchildTag = getValue('child' + innerTag.substring(0, 1).toUpperCase() + innerTag.substring(1), innerchildObj.list[j]);\n                                                if (innerchildTag) {\n                                                    innerchildObj.list[j].tagObjects.push({ instance: innerchildTag, name: innerTag });\n                                                }\n                                            }\n                                        }\n                                    }\n                                    tagObject.instance.list[h].tagObjects.push({ instance: childObj, name: tag });\n                                }\n                            }\n                            tagObject.instance.list[h].propCollection[tagObject.instance.propertyName].push(obj);\n                        }\n                    }\n                    // End angular 9 compatibility\n                    propObj[tagObject.name] = tagObject.instance.getProperties();\n                    tempAfterContentThis.setProperties(propObj, tagObject.instance.isInitChanges);\n                }\n                else {\n                    /* istanbul ignore next */\n                    if ((tempAfterContentThis[tagObject.name].length !== tagObject.instance.list.length) || (tempAfterContentThis.getModuleName() === 'diagram')) {\n                        tempAfterContentThis[tagObject.name] = tagObject.instance.list;\n                    }\n                    for (var _b = 0, _c = tagObject.instance.list; _b < _c.length; _b++) {\n                        var list = _c[_b];\n                        var curIndex = tagObject.instance.list.indexOf(list);\n                        var curChild = getValue(tagObject.name, tempAfterContentThis)[curIndex];\n                        var complexTemplates = Object.keys(curChild);\n                        complexTemplates = complexTemplates.filter(function (val) {\n                            return /Ref$/i.test(val);\n                        });\n                        if (Object.keys(curChild.properties).length !== 0 && /chart/.test(tempAfterContentThis.getModuleName())) {\n                            for (var _d = 0, complexTemplates_2 = complexTemplates; _d < complexTemplates_2.length; _d++) {\n                                var complexPropName = complexTemplates_2[_d];\n                                complexPropName = complexPropName.replace(/Ref/, '');\n                                curChild.properties[complexPropName] = !curChild.properties[complexPropName] ?\n                                    curChild.propCollection[complexPropName] : curChild.properties[complexPropName];\n                            }\n                        }\n                        if (!isUndefined(curChild) && !isUndefined(curChild.setProperties)) {\n                            if (/diagram|DashboardLayout/.test(tempAfterContentThis.getModuleName())) {\n                                curChild.setProperties(list.getProperties(), true);\n                            }\n                            else {\n                                curChild.setProperties(list.getProperties());\n                            }\n                        }\n                        list.isUpdated = true;\n                    }\n                }\n            }\n        }\n    };\n    ComponentBase.prototype.registerEvents = function (eventList) {\n        registerEvents(eventList, this);\n    };\n    ComponentBase.prototype.twoWaySetter = function (newVal, prop) {\n        var oldVal = getValue(prop, this.properties);\n        if (oldVal === newVal) {\n            return;\n        }\n        this.saveChanges(prop, newVal, oldVal);\n        setValue(prop, (isNullOrUndefined(newVal) ? null : newVal), this.properties);\n        getValue(prop + 'Change', this).emit(newVal);\n    };\n    ComponentBase.prototype.addTwoWay = function (propList) {\n        var _this = this;\n        var _loop_1 = function (prop) {\n            getValue(prop, this_1);\n            Object.defineProperty(this_1, prop, {\n                get: function () {\n                    return getValue(prop, _this.properties);\n                },\n                set: function (newVal) { return _this.twoWaySetter(newVal, prop); }\n            });\n            setValue(prop + 'Change', new EventEmitter(), this_1);\n        };\n        var this_1 = this;\n        for (var _i = 0, propList_1 = propList; _i < propList_1.length; _i++) {\n            var prop = propList_1[_i];\n            _loop_1(prop);\n        }\n    };\n    ComponentBase.prototype.addEventListener = function (eventName, handler) {\n        var eventObj = getValue(eventName, this);\n        if (!isUndefined(eventObj)) {\n            if (!this.ngBoundedEvents[eventName]) {\n                this.ngBoundedEvents[eventName] = new Map();\n            }\n            this.ngBoundedEvents[eventName].set(handler, eventObj.subscribe(handler));\n        }\n    };\n    ComponentBase.prototype.removeEventListener = function (eventName, handler) {\n        var eventObj = getValue(eventName, this);\n        if (!isUndefined(eventObj)) {\n            this.ngBoundedEvents[eventName].get(handler).unsubscribe();\n        }\n    };\n    ComponentBase.prototype.trigger = function (eventName, eventArgs, success) {\n        var eventObj = getValue(eventName, this);\n        var prevDetection = this.isProtectedOnChange;\n        this.isProtectedOnChange = false;\n        if (eventArgs) {\n            eventArgs.name = eventName;\n        }\n        if (!isUndefined(eventObj)) {\n            eventObj.next(eventArgs);\n        }\n        var localEventObj = getValue('local' + eventName.charAt(0).toUpperCase() + eventName.slice(1), this);\n        if (!isUndefined(localEventObj)) {\n            localEventObj.call(this, eventArgs);\n        }\n        this.isProtectedOnChange = prevDetection;\n        /* istanbul ignore else  */\n        if (success) {\n            this.preventChange = this.isPreventChange;\n            success.call(this, eventArgs);\n        }\n        this.isPreventChange = false;\n    };\n    return ComponentBase;\n}());\nexport { ComponentBase };\n","import { getValue, setValue, isNullOrUndefined, isObject } from '@syncfusion/ej2-base';\n/**\n * Angular Form Base Module\n */\nvar FormBase = /** @class */ (function () {\n    function FormBase() {\n    }\n    FormBase.prototype.propagateChange = function (_) { return; };\n    FormBase.prototype.propagateTouch = function () { return; };\n    FormBase.prototype.localChange = function (e) {\n        //tslint:disable-next-line\n        var value = (e.checked === undefined ? e.value : e.checked);\n        this.objCheck = isObject(value);\n        if (this.isUpdated === true) {\n            this.angularValue = this.oldValue;\n        }\n        if (this.objCheck === true) {\n            this.duplicateValue = JSON.stringify(value);\n            this.duplicateAngularValue = JSON.stringify(this.angularValue);\n            if (this.duplicateValue !== this.duplicateAngularValue && this.propagateChange !== undefined && value !== undefined) {\n                // Update angular from our control\n                this.propagateChange(value);\n                this.angularValue = value;\n            }\n        }\n        else {\n            if (value !== this.angularValue && this.propagateChange !== undefined && value !== undefined) {\n                // While reset form using reset() method ng-dirty not get updated, so while value is empty just update angularValue only\n                if (value !== '' && value !== null) {\n                    // Update angular from our control\n                    this.propagateChange(value);\n                    this.angularValue = value;\n                }\n                else {\n                    //tslint:disable-next-line\n                    var optionalValue = value;\n                    this.propagateChange(optionalValue);\n                    this.angularValue = value;\n                }\n            }\n        }\n    };\n    FormBase.prototype.registerOnChange = function (registerFunction) {\n        this.propagateChange = registerFunction;\n    };\n    FormBase.prototype.registerOnTouched = function (registerFunction) {\n        this.propagateTouch = registerFunction;\n    };\n    FormBase.prototype.twoWaySetter = function (newVal, prop) {\n        var oldVal = this.oldValue || getValue(prop, this.properties);\n        var ele = this.inputElement || this.element;\n        if (ele && oldVal === newVal &&\n            (ele.value === undefined || ele.value === '')) {\n            return;\n        }\n        this.saveChanges(prop, newVal, oldVal);\n        setValue(prop, (isNullOrUndefined(newVal) ? null : newVal), this.properties);\n        getValue(prop + 'Change', this).emit(newVal);\n    };\n    // tslint:disable-next-line:no-any\n    FormBase.prototype.ngAfterViewInit = function (isTempRef) {\n        // tslint:disable-next-line:no-any\n        var tempFormAfterViewThis = isTempRef || this;\n        // Used setTimeout for template binding\n        // Refer Link: https://github.com/angular/angular/issues/6005\n        // Removed setTimeout, Because we have called markForCheck() method in Angular Template Compiler\n        // setTimeout(() => {\n        /* istanbul ignore else */\n        if (typeof window !== 'undefined') {\n            tempFormAfterViewThis.appendTo(tempFormAfterViewThis.element);\n            var ele = tempFormAfterViewThis.inputElement || tempFormAfterViewThis.element;\n            ele.addEventListener('focus', tempFormAfterViewThis.ngOnFocus.bind(tempFormAfterViewThis));\n            ele.addEventListener('blur', tempFormAfterViewThis.ngOnBlur.bind(tempFormAfterViewThis));\n        }\n        this.isFormInit = false;\n        // });\n    };\n    FormBase.prototype.setDisabledState = function (disabled) {\n        this.enabled = !disabled;\n        this.disabled = disabled;\n    };\n    FormBase.prototype.writeValue = function (value) {\n        var regExp = /ejs-radiobutton/g;\n        //update control value from angular\n        if (this.checked === undefined) {\n            this.value = value;\n        }\n        else {\n            // To resolve boolean type formControl value is not working for radio button control.\n            /* istanbul ignore next */\n            if (this.ngEle) {\n                if (typeof value === 'boolean') {\n                    if (regExp.test(this.ngEle.nativeElement.outerHTML)) {\n                        this.checked = value === this.value;\n                    }\n                    else {\n                        this.checked = value;\n                    }\n                }\n                else {\n                    this.checked = value === this.value;\n                }\n            }\n        }\n        this.angularValue = value;\n        this.isUpdated = true;\n        // When binding Html textbox value to syncfusion textbox, change event triggered dynamically.\n        // To prevent change event, trigger change in component side based on `preventChange` value\n        this.preventChange = this.isFormInit ? false : true;\n        if (value === null) {\n            return;\n        }\n    };\n    FormBase.prototype.ngOnFocus = function (e) {\n        /* istanbul ignore else */\n        if (this.skipFromEvent !== true) {\n            this.focus.emit(e);\n        }\n    };\n    FormBase.prototype.ngOnBlur = function (e) {\n        this.propagateTouch();\n        /* istanbul ignore else */\n        if (this.skipFromEvent !== true) {\n            this.blur.emit(e);\n        }\n    };\n    FormBase.isFormBase = true;\n    return FormBase;\n}());\nexport { FormBase };\n"],"names":["applyMixins","derivedClass","baseClass","forEach","Object","getOwnPropertyNames","prototype","name","hasOwnProperty","isFormBase","ComponentMixins","registerEvents","eventList","obj","direct","ngEventsEmitter","length","_i","eventList_1","event_1","propCollection","EventEmitter","setProperties","clearTemplate","_this","templateNames","index","regTemplates","keys","registeredTemplate","regProperties","filter","val","test","_a","e","m","template","rootNodes","rt","destroy","_b","_c","destroyed","_view","pNode","renderer","parentNode","isNullOrUndefined","appendChild","_d","_e","tagObjects","tagObject","instance","RegExp","setValue","nameSpace","value","object","replace","split","fromObj","i","key","undefined","compile","templateEle","helper","stringCompiler","contRef_1","elementRef","nativeElement","_viewContainerRef","pName_1","propName","data","component","context","$implicit","conRef","viewContainerRef","viewRef","createEmbeddedView","markForCheck","viewCollection","getValue","push","Template","defaultValue","target","propertyDescriptor","set","setter","get","getter","enumerable","configurable","defineProperty","this","saveChanges","dataBind","refRegex","ComplexBase","hasChanges","dataSource","tags","ngOnInit","tag","objInstance","substring","toUpperCase","templateProperties","templateProperties_1","propList","directivePropList","k","dirPropName","indexOf","isInitChanges","ngOnChanges","changes","changedVal","currentValue","isUpdated","getProperties","isChanged","result","property","tempProps","props","d","propVal","item","ngAfterContentChecked","templateProperties_2","ngAfterViewChecked","ngAfterViewInit","ngOnDestroy","ArrayBase","propertyName","list","ngAfterContentInit","children","map","child","dirIndex","onlyProp","isSourceChanged","childrenDataSource","JSON","stringify","hasNewChildren","ComponentBase","isProtectedOnChange","isFormInit","newValue","oldValue","oldProperties","changedProperties","finalUpdate","changeTime","setTimeout","bind","clearUpdate","clearTimeout","isTempRef","tempOnThis","ngBoundedEvents","isAngular","complexTemplate","ngAttr","getAngularAttr","element","createElement","tagName","prop","ele","srenderer","innerHTML","className","id","styles","setAttribute","attrs","attributes","complexTemplates","complexTemplates_1","ngAr","tempAfterViewThis","ngEle","outerHTML","style","visibility","window","appendTo","tempOnDestroyThis","classList","contains","tempAfterContentThis","isUndefined","propObj","complexDirProps","skip","getModuleName","compDirPropList","h","complexPropName","childObj","innerchildObj","j","innerTag","innerchildTag","curIndex","curChild","properties","complexTemplates_2","twoWaySetter","newVal","oldVal","emit","addTwoWay","this_1","propList_1","addEventListener","eventName","handler","eventObj","Map","subscribe","removeEventListener","unsubscribe","trigger","eventArgs","success","prevDetection","next","localEventObj","charAt","slice","call","preventChange","isPreventChange","FormBase","propagateChange","_","propagateTouch","localChange","checked","objCheck","isObject","angularValue","duplicateValue","duplicateAngularValue","optionalValue","registerOnChange","registerFunction","registerOnTouched","inputElement","tempFormAfterViewThis","ngOnFocus","ngOnBlur","setDisabledState","disabled","enabled","writeValue","regExp","skipFromEvent","focus","blur","getTemplateEngine","setTemplateEngine"],"mappings":"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"}