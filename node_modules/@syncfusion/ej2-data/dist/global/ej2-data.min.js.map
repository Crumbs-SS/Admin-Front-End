{"version":3,"file":"ej2-data.min.js","sources":["../../src/query.js","../../src/util.js","../../src/adaptors.js","../../src/manager.js"],"sourcesContent":["import { DataUtil } from './util';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Query class is used to build query which is used by the DataManager to communicate with datasource.\n */\nvar Query = /** @class */ (function () {\n    /**\n     * Constructor for Query class.\n     * @param  {string|string[]} from?\n     * @hidden\n     */\n    function Query(from) {\n        /** @hidden */\n        this.subQuery = null;\n        /** @hidden */\n        this.isChild = false;\n        /** @hidden */\n        this.distincts = [];\n        this.queries = [];\n        this.key = '';\n        this.fKey = '';\n        if (typeof from === 'string') {\n            this.fromTable = from;\n        }\n        else if (from && from instanceof Array) {\n            this.lookups = from;\n        }\n        this.expands = [];\n        this.sortedColumns = [];\n        this.groupedColumns = [];\n        this.subQuery = null;\n        this.isChild = false;\n        this.params = [];\n        this.lazyLoad = [];\n        return this;\n    }\n    /**\n     * Sets the primary key.\n     * @param  {string} field - Defines the column field.\n     */\n    Query.prototype.setKey = function (field) {\n        this.key = field;\n        return this;\n    };\n    /**\n     * Sets default DataManager to execute query.\n     * @param  {DataManager} dataManager - Defines the DataManager.\n     */\n    Query.prototype.using = function (dataManager) {\n        this.dataManager = dataManager;\n        return this;\n    };\n    /**\n     * Executes query with the given DataManager.\n     * @param  {DataManager} dataManager - Defines the DataManager.\n     * @param  {Function} done - Defines the success callback.\n     * @param  {Function} fail - Defines the failure callback.\n     * @param  {Function} always - Defines the callback which will be invoked on either success or failure.\n     *\n     * <pre>\n     * let dataManager: DataManager = new DataManager([{ ID: '10' }, { ID: '2' }, { ID: '1' }, { ID: '20' }]);\n     * let query: Query = new Query();\n     * query.sortBy('ID', (x: string, y: string): number => { return parseInt(x, 10) - parseInt(y, 10) });\n     * let promise: Promise< Object > = query.execute(dataManager);\n     * promise.then((e: { result: Object }) => { });\n     * </pre>\n     */\n    Query.prototype.execute = function (dataManager, done, fail, always) {\n        dataManager = dataManager || this.dataManager;\n        if (dataManager) {\n            return dataManager.executeQuery(this, done, fail, always);\n        }\n        return DataUtil.throwError('Query - execute() : dataManager needs to be is set using \"using\" function or should be passed as argument');\n    };\n    /**\n     * Executes query with the local datasource.\n     * @param  {DataManager} dataManager - Defines the DataManager.\n     */\n    Query.prototype.executeLocal = function (dataManager) {\n        dataManager = dataManager || this.dataManager;\n        if (dataManager) {\n            return dataManager.executeLocal(this);\n        }\n        return DataUtil.throwError('Query - executeLocal() : dataManager needs to be is set using \"using\" function or should be passed as argument');\n    };\n    /**\n     * Creates deep copy of the Query object.\n     */\n    Query.prototype.clone = function () {\n        var cloned = new Query();\n        cloned.queries = this.queries.slice(0);\n        cloned.key = this.key;\n        cloned.isChild = this.isChild;\n        cloned.dataManager = this.dataManager;\n        cloned.fromTable = this.fromTable;\n        cloned.params = this.params.slice(0);\n        cloned.expands = this.expands.slice(0);\n        cloned.sortedColumns = this.sortedColumns.slice(0);\n        cloned.groupedColumns = this.groupedColumns.slice(0);\n        cloned.subQuerySelector = this.subQuerySelector;\n        cloned.subQuery = this.subQuery;\n        cloned.fKey = this.fKey;\n        cloned.isCountRequired = this.isCountRequired;\n        cloned.distincts = this.distincts.slice(0);\n        cloned.lazyLoad = this.lazyLoad.slice(0);\n        return cloned;\n    };\n    /**\n     * Specifies the name of table to retrieve data in query execution.\n     * @param  {string} tableName - Defines the table name.\n     */\n    Query.prototype.from = function (tableName) {\n        this.fromTable = tableName;\n        return this;\n    };\n    /**\n     * Adds additional parameter which will be sent along with the request which will be generated while DataManager execute.\n     * @param  {string} key - Defines the key of additional parameter.\n     * @param  {Function|string} value - Defines the value for the key.\n     */\n    Query.prototype.addParams = function (key, value) {\n        if (typeof value === 'function') {\n            this.params.push({ key: key, fn: value });\n        }\n        else {\n            this.params.push({ key: key, value: value });\n        }\n        return this;\n    };\n    /**\n     * @hidden\n     */\n    Query.prototype.distinct = function (fields) {\n        if (typeof fields === 'string') {\n            this.distincts = [].slice.call([fields], 0);\n        }\n        else {\n            this.distincts = fields.slice(0);\n        }\n        return this;\n    };\n    /**\n     * Expands the related table.\n     * @param  {string|Object[]} tables\n     */\n    Query.prototype.expand = function (tables) {\n        if (typeof tables === 'string') {\n            this.expands = [].slice.call([tables], 0);\n        }\n        else {\n            this.expands = tables.slice(0);\n        }\n        return this;\n    };\n    /**\n     * Filter data with given filter criteria.\n     * @param  {string|Predicate} fieldName - Defines the column field or Predicate.\n     * @param  {string} operator - Defines the operator how to filter data.\n     * @param  {string|number|boolean} value - Defines the values to match with data.\n     * @param  {boolean} ignoreCase - If ignore case set to false, then filter data with exact match or else\n     * filter data with case insensitive.\n     */\n    Query.prototype.where = function (fieldName, operator, value, ignoreCase, ignoreAccent) {\n        operator = operator ? (operator).toLowerCase() : null;\n        var predicate = null;\n        if (typeof fieldName === 'string') {\n            predicate = new Predicate(fieldName, operator, value, ignoreCase, ignoreAccent);\n        }\n        else if (fieldName instanceof Predicate) {\n            predicate = fieldName;\n        }\n        this.queries.push({\n            fn: 'onWhere',\n            e: predicate\n        });\n        return this;\n    };\n    /**\n     * Search data with given search criteria.\n     * @param  {string|number|boolean} searchKey - Defines the search key.\n     * @param  {string|string[]} fieldNames - Defines the collection of column fields.\n     * @param  {string} operator - Defines the operator how to search data.\n     * @param  {boolean} ignoreCase - If ignore case set to false, then filter data with exact match or else\n     * filter data with case insensitive.\n     */\n    Query.prototype.search = function (searchKey, fieldNames, operator, ignoreCase, ignoreAccent) {\n        if (typeof fieldNames === 'string') {\n            fieldNames = [fieldNames];\n        }\n        if (!operator || operator === 'none') {\n            operator = 'contains';\n        }\n        var comparer = DataUtil.fnOperators[operator];\n        this.queries.push({\n            fn: 'onSearch',\n            e: {\n                fieldNames: fieldNames,\n                operator: operator,\n                searchKey: searchKey,\n                ignoreCase: ignoreCase,\n                ignoreAccent: ignoreAccent,\n                comparer: comparer\n            }\n        });\n        return this;\n    };\n    /**\n     * Sort the data with given sort criteria.\n     * By default, sort direction is ascending.\n     * @param  {string|string[]} fieldName - Defines the single or collection of column fields.\n     * @param  {string|Function} comparer - Defines the sort direction or custom sort comparer function.\n     */\n    Query.prototype.sortBy = function (fieldName, comparer, isFromGroup) {\n        return this.sortByForeignKey(fieldName, comparer, isFromGroup);\n    };\n    /**\n     * Sort the data with given sort criteria.\n     * By default, sort direction is ascending.\n     * @param  {string|string[]} fieldName - Defines the single or collection of column fields.\n     * @param  {string|Function} comparer - Defines the sort direction or custom sort comparer function.\n     * @param  {string} direction - Defines the sort direction .\n     */\n    Query.prototype.sortByForeignKey = function (fieldName, comparer, isFromGroup, direction) {\n        var order = !isNullOrUndefined(direction) ? direction : 'ascending';\n        var sorts;\n        var temp;\n        if (typeof fieldName === 'string' && DataUtil.endsWith(fieldName.toLowerCase(), ' desc')) {\n            fieldName = fieldName.replace(/ desc$/i, '');\n            comparer = 'descending';\n        }\n        if (!comparer || typeof comparer === 'string') {\n            order = comparer ? comparer.toLowerCase() : 'ascending';\n            comparer = DataUtil.fnSort(comparer);\n        }\n        if (isFromGroup) {\n            sorts = Query.filterQueries(this.queries, 'onSortBy');\n            for (var i = 0; i < sorts.length; i++) {\n                temp = sorts[i].e.fieldName;\n                if (typeof temp === 'string') {\n                    if (temp === fieldName) {\n                        return this;\n                    }\n                }\n                else if (temp instanceof Array) {\n                    for (var j = 0; j < temp.length; j++) {\n                        if (temp[j] === fieldName || fieldName.toLowerCase() === temp[j] + ' desc') {\n                            return this;\n                        }\n                    }\n                }\n            }\n        }\n        this.queries.push({\n            fn: 'onSortBy',\n            e: {\n                fieldName: fieldName,\n                comparer: comparer,\n                direction: order\n            }\n        });\n        return this;\n    };\n    /**\n     * Sorts data in descending order.\n     * @param  {string} fieldName - Defines the column field.\n     */\n    Query.prototype.sortByDesc = function (fieldName) {\n        return this.sortBy(fieldName, 'descending');\n    };\n    /**\n     * Groups data with the given field name.\n     * @param  {string} fieldName - Defines the column field.\n     */\n    Query.prototype.group = function (fieldName, fn, format) {\n        this.sortBy(fieldName, null, true);\n        this.queries.push({\n            fn: 'onGroup',\n            e: {\n                fieldName: fieldName,\n                comparer: fn ? fn : null,\n                format: format ? format : null\n            }\n        });\n        return this;\n    };\n    /**\n     * Gets data based on the given page index and size.\n     * @param  {number} pageIndex - Defines the current page index.\n     * @param  {number} pageSize - Defines the no of records per page.\n     */\n    Query.prototype.page = function (pageIndex, pageSize) {\n        this.queries.push({\n            fn: 'onPage',\n            e: {\n                pageIndex: pageIndex,\n                pageSize: pageSize\n            }\n        });\n        return this;\n    };\n    /**\n     * Gets data based on the given start and end index.\n     * @param  {number} start - Defines the start index of the datasource.\n     * @param  {number} end - Defines the end index of the datasource.\n     */\n    Query.prototype.range = function (start, end) {\n        this.queries.push({\n            fn: 'onRange',\n            e: {\n                start: start,\n                end: end\n            }\n        });\n        return this;\n    };\n    /**\n     * Gets data from the top of the data source based on given number of records count.\n     * @param  {number} nos - Defines the no of records to retrieve from datasource.\n     */\n    Query.prototype.take = function (nos) {\n        this.queries.push({\n            fn: 'onTake',\n            e: {\n                nos: nos\n            }\n        });\n        return this;\n    };\n    /**\n     * Skips data with given number of records count from the top of the data source.\n     * @param  {number} nos - Defines the no of records skip in the datasource.\n     */\n    Query.prototype.skip = function (nos) {\n        this.queries.push({\n            fn: 'onSkip',\n            e: { nos: nos }\n        });\n        return this;\n    };\n    /**\n     * Selects specified columns from the data source.\n     * @param  {string|string[]} fieldNames - Defines the collection of column fields.\n     */\n    Query.prototype.select = function (fieldNames) {\n        if (typeof fieldNames === 'string') {\n            fieldNames = [].slice.call([fieldNames], 0);\n        }\n        this.queries.push({\n            fn: 'onSelect',\n            e: { fieldNames: fieldNames }\n        });\n        return this;\n    };\n    /**\n     * Gets the records in hierarchical relationship from two tables. It requires the foreign key to relate two tables.\n     * @param  {Query} query - Defines the query to relate two tables.\n     * @param  {Function} selectorFn - Defines the custom function to select records.\n     */\n    Query.prototype.hierarchy = function (query, selectorFn) {\n        this.subQuerySelector = selectorFn;\n        this.subQuery = query;\n        return this;\n    };\n    /**\n     * Sets the foreign key which is used to get data from the related table.\n     * @param  {string} key - Defines the foreign key.\n     */\n    Query.prototype.foreignKey = function (key) {\n        this.fKey = key;\n        return this;\n    };\n    /**\n     * It is used to get total number of records in the DataManager execution result.\n     */\n    Query.prototype.requiresCount = function () {\n        this.isCountRequired = true;\n        return this;\n    };\n    //type - sum, avg, min, max\n    /**\n     * Aggregate the data with given type and field name.\n     * @param  {string} type - Defines the aggregate type.\n     * @param  {string} field - Defines the column field to aggregate.\n     */\n    Query.prototype.aggregate = function (type, field) {\n        this.queries.push({\n            fn: 'onAggregates',\n            e: { field: field, type: type }\n        });\n        return this;\n    };\n    /**\n     * Pass array of filterColumn query for performing filter operation.\n     * @param  {QueryOptions[]} queries\n     * @param  {string} name\n     * @hidden\n     */\n    Query.filterQueries = function (queries, name) {\n        return queries.filter(function (q) {\n            return q.fn === name;\n        });\n    };\n    /**\n     * To get the list of queries which is already filtered in current data source.\n     * @param  {Object[]} queries\n     * @param  {string[]} singles\n     * @hidden\n     */\n    Query.filterQueryLists = function (queries, singles) {\n        var filtered = queries.filter(function (q) {\n            return singles.indexOf(q.fn) !== -1;\n        });\n        var res = {};\n        for (var i = 0; i < filtered.length; i++) {\n            if (!res[filtered[i].fn]) {\n                res[filtered[i].fn] = filtered[i].e;\n            }\n        }\n        return res;\n    };\n    return Query;\n}());\nexport { Query };\n/**\n * Predicate class is used to generate complex filter criteria.\n * This will be used by DataManager to perform multiple filtering operation.\n */\nvar Predicate = /** @class */ (function () {\n    /**\n     * Constructor for Predicate class.\n     * @param  {string|Predicate} field\n     * @param  {string} operator\n     * @param  {string|number|boolean|Predicate|Predicate[]} value\n     * @param  {boolean=false} ignoreCase\n     * @hidden\n     */\n    function Predicate(field, operator, value, ignoreCase, ignoreAccent) {\n        if (ignoreCase === void 0) { ignoreCase = false; }\n        /** @hidden */\n        this.ignoreAccent = false;\n        /** @hidden */\n        this.isComplex = false;\n        if (typeof field === 'string') {\n            this.field = field;\n            this.operator = operator.toLowerCase();\n            this.value = value;\n            this.ignoreCase = ignoreCase;\n            this.ignoreAccent = ignoreAccent;\n            this.isComplex = false;\n            this.comparer = DataUtil.fnOperators.processOperator(this.operator);\n        }\n        else if (field instanceof Predicate && value instanceof Predicate || value instanceof Array) {\n            this.isComplex = true;\n            this.condition = operator.toLowerCase();\n            this.predicates = [field];\n            if (value instanceof Array) {\n                [].push.apply(this.predicates, value);\n            }\n            else {\n                this.predicates.push(value);\n            }\n        }\n        return this;\n    }\n    /**\n     * Adds n-number of new predicates on existing predicate with “and” condition.\n     * @param  {Object[]} args - Defines the collection of predicates.\n     */\n    Predicate.and = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return Predicate.combinePredicates([].slice.call(args, 0), 'and');\n    };\n    /**\n     * Adds new predicate on existing predicate with “and” condition.\n     * @param  {string} field - Defines the column field.\n     * @param  {string} operator - Defines the operator how to filter data.\n     * @param  {string} value - Defines the values to match with data.\n     * @param  {boolean} ignoreCase? - If ignore case set to false, then filter data with exact match or else\n     * filter data with case insensitive.\n     */\n    Predicate.prototype.and = function (field, operator, value, ignoreCase, ignoreAccent) {\n        return Predicate.combine(this, field, operator, value, 'and', ignoreCase, ignoreAccent);\n    };\n    /**\n     * Adds n-number of new predicates on existing predicate with “or” condition.\n     * @param  {Object[]} args - Defines the collection of predicates.\n     */\n    Predicate.or = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return Predicate.combinePredicates([].slice.call(args, 0), 'or');\n    };\n    /**\n     * Adds new predicate on existing predicate with “or” condition.\n     * @param  {string} field - Defines the column field.\n     * @param  {string} operator - Defines the operator how to filter data.\n     * @param  {string} value - Defines the values to match with data.\n     * @param  {boolean} ignoreCase? - If ignore case set to false, then filter data with exact match or else\n     * filter data with case insensitive.\n     */\n    Predicate.prototype.or = function (field, operator, value, ignoreCase, ignoreAccent) {\n        return Predicate.combine(this, field, operator, value, 'or', ignoreCase, ignoreAccent);\n    };\n    /**\n     * Converts plain JavaScript object to Predicate object.\n     * @param  {Predicate[]|Predicate} json - Defines single or collection of Predicate.\n     */\n    Predicate.fromJson = function (json) {\n        if (json instanceof Array) {\n            var res = [];\n            for (var i = 0, len = json.length; i < len; i++) {\n                res.push(this.fromJSONData(json[i]));\n            }\n            return res;\n        }\n        var pred = json;\n        return this.fromJSONData(pred);\n    };\n    /**\n     * Validate the record based on the predicates.\n     * @param  {Object} record - Defines the datasource record.\n     */\n    Predicate.prototype.validate = function (record) {\n        var predicate = this.predicates ? this.predicates : [];\n        var isAnd;\n        var ret;\n        if (!this.isComplex && this.comparer) {\n            return this.comparer.call(this, DataUtil.getObject(this.field, record), this.value, this.ignoreCase, this.ignoreAccent);\n        }\n        isAnd = this.condition === 'and';\n        for (var i = 0; i < predicate.length; i++) {\n            ret = predicate[i].validate(record);\n            if (isAnd) {\n                if (!ret) {\n                    return false;\n                }\n            }\n            else {\n                if (ret) {\n                    return true;\n                }\n            }\n        }\n        return isAnd;\n    };\n    /**\n     * Converts predicates to plain JavaScript.\n     * This method is uses Json stringify when serializing Predicate object.\n     */\n    Predicate.prototype.toJson = function () {\n        var predicates;\n        var p;\n        if (this.isComplex) {\n            predicates = [];\n            p = this.predicates;\n            for (var i = 0; i < p.length; i++) {\n                predicates.push(p[i].toJson());\n            }\n        }\n        return {\n            isComplex: this.isComplex,\n            field: this.field,\n            operator: this.operator,\n            value: this.value,\n            ignoreCase: this.ignoreCase,\n            ignoreAccent: this.ignoreAccent,\n            condition: this.condition,\n            predicates: predicates\n        };\n    };\n    Predicate.combinePredicates = function (predicates, operator) {\n        if (predicates.length === 1) {\n            if (!(predicates[0] instanceof Array)) {\n                return predicates[0];\n            }\n            predicates = predicates[0];\n        }\n        return new Predicate(predicates[0], operator, predicates.slice(1));\n    };\n    Predicate.combine = function (pred, field, operator, value, condition, ignoreCase, ignoreAccent) {\n        if (field instanceof Predicate) {\n            return Predicate[condition](pred, field);\n        }\n        if (typeof field === 'string') {\n            return Predicate[condition](pred, new Predicate(field, operator, value, ignoreCase, ignoreAccent));\n        }\n        return DataUtil.throwError('Predicate - ' + condition + ' : invalid arguments');\n    };\n    Predicate.fromJSONData = function (json) {\n        var preds = json.predicates || [];\n        var len = preds.length;\n        var predicates = [];\n        var result;\n        for (var i = 0; i < len; i++) {\n            predicates.push(this.fromJSONData(preds[i]));\n        }\n        if (!json.isComplex) {\n            result = new Predicate(json.field, json.operator, json.value, json.ignoreCase, json.ignoreAccent);\n        }\n        else {\n            result = new Predicate(predicates[0], json.condition, predicates.slice(1));\n        }\n        return result;\n    };\n    return Predicate;\n}());\nexport { Predicate };\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from './manager';\nimport { Query } from './query';\nvar consts = { GroupGuid: '{271bbba0-1ee7}' };\n/**\n * Data manager common utility methods.\n * @hidden\n */\nvar DataUtil = /** @class */ (function () {\n    function DataUtil() {\n    }\n    /**\n     * Returns the value by invoking the provided parameter function.\n     * If the paramater is not of type function then it will be returned as it is.\n     * @param  {Function|string|string[]|number} value\n     * @param  {Object} inst?\n     * @hidden\n     */\n    DataUtil.getValue = function (value, inst) {\n        if (typeof value === 'function') {\n            return value.call(inst || {});\n        }\n        return value;\n    };\n    /**\n     * Returns true if the input string ends with given string.\n     * @param  {string} input\n     * @param  {string} substr\n     */\n    DataUtil.endsWith = function (input, substr) {\n        return input.slice && input.slice(-substr.length) === substr;\n    };\n    /**\n     * Returns true if the input string starts with given string.\n     * @param  {string} str\n     * @param  {string} startstr\n     */\n    DataUtil.startsWith = function (input, start) {\n        return input.slice(0, start.length) === start;\n    };\n    /**\n     * To return the sorting function based on the string.\n     * @param  {string} order\n     * @hidden\n     */\n    DataUtil.fnSort = function (order) {\n        order = order ? DataUtil.toLowerCase(order) : 'ascending';\n        if (order === 'ascending') {\n            return this.fnAscending;\n        }\n        return this.fnDescending;\n    };\n    /**\n     * Comparer function which is used to sort the data in ascending order.\n     * @param  {string|number} x\n     * @param  {string|number} y\n     * @returns number\n     */\n    DataUtil.fnAscending = function (x, y) {\n        if (isNullOrUndefined(x) && isNullOrUndefined(y)) {\n            return -1;\n        }\n        if (y === null || y === undefined) {\n            return -1;\n        }\n        if (typeof x === 'string') {\n            return x.localeCompare(y);\n        }\n        if (x === null || x === undefined) {\n            return 1;\n        }\n        return x - y;\n    };\n    /**\n     * Comparer function which is used to sort the data in descending order.\n     * @param  {string|number} x\n     * @param  {string|number} y\n     * @returns number\n     */\n    DataUtil.fnDescending = function (x, y) {\n        if (isNullOrUndefined(x) && isNullOrUndefined(y)) {\n            return -1;\n        }\n        if (y === null || y === undefined) {\n            return 1;\n        }\n        if (typeof x === 'string') {\n            return x.localeCompare(y) * -1;\n        }\n        if (x === null || x === undefined) {\n            return -1;\n        }\n        return y - x;\n    };\n    DataUtil.extractFields = function (obj, fields) {\n        var newObj = {};\n        for (var i = 0; i < fields.length; i++) {\n            newObj = this.setValue(fields[i], this.getObject(fields[i], obj), newObj);\n        }\n        return newObj;\n    };\n    /**\n     * Select objects by given fields from jsonArray.\n     * @param  {Object[]} jsonArray\n     * @param  {string[]} fields\n     */\n    DataUtil.select = function (jsonArray, fields) {\n        var newData = [];\n        for (var i = 0; i < jsonArray.length; i++) {\n            newData.push(this.extractFields(jsonArray[i], fields));\n        }\n        return newData;\n    };\n    /**\n     * Group the input data based on the field name.\n     * It also performs aggregation of the grouped records based on the aggregates paramater.\n     * @param  {Object[]} jsonArray\n     * @param  {string} field?\n     * @param  {Object[]} agg?\n     * @param  {number} level?\n     * @param  {Object[]} groupDs?\n     */\n    DataUtil.group = function (jsonArray, field, aggregates, level, groupDs, format, isLazyLoad) {\n        level = level || 1;\n        var jsonData = jsonArray;\n        var guid = 'GroupGuid';\n        if (jsonData.GroupGuid === consts[guid]) {\n            var _loop_1 = function (j) {\n                if (!isNullOrUndefined(groupDs)) {\n                    var indx = -1;\n                    var temp = groupDs.filter(function (e) { return e.key === jsonData[j].key; });\n                    indx = groupDs.indexOf(temp[0]);\n                    jsonData[j].items = this_1.group(jsonData[j].items, field, aggregates, jsonData.level + 1, groupDs[indx].items, format, isLazyLoad);\n                    jsonData[j].count = groupDs[indx].count;\n                }\n                else {\n                    jsonData[j].items = this_1.group(jsonData[j].items, field, aggregates, jsonData.level + 1, null, format, isLazyLoad);\n                    jsonData[j].count = jsonData[j].items.length;\n                }\n            };\n            var this_1 = this;\n            for (var j = 0; j < jsonData.length; j++) {\n                _loop_1(j);\n            }\n            jsonData.childLevels += 1;\n            return jsonData;\n        }\n        var grouped = {};\n        var groupedArray = [];\n        groupedArray.GroupGuid = consts[guid];\n        groupedArray.level = level;\n        groupedArray.childLevels = 0;\n        groupedArray.records = jsonData;\n        var _loop_2 = function (i) {\n            var val = this_2.getVal(jsonData, i, field);\n            if (!isNullOrUndefined(format)) {\n                val = format(val, field);\n            }\n            if (!grouped[val]) {\n                grouped[val] = {\n                    key: val,\n                    count: 0,\n                    items: [],\n                    aggregates: {},\n                    field: field\n                };\n                groupedArray.push(grouped[val]);\n                if (!isNullOrUndefined(groupDs)) {\n                    var tempObj = groupDs.filter(function (e) { return e.key === grouped[val].key; });\n                    grouped[val].count = tempObj[0].count;\n                }\n            }\n            grouped[val].count = !isNullOrUndefined(groupDs) ? grouped[val].count : grouped[val].count += 1;\n            if (!isLazyLoad || (isLazyLoad && aggregates.length)) {\n                grouped[val].items.push(jsonData[i]);\n            }\n        };\n        var this_2 = this;\n        for (var i = 0; i < jsonData.length; i++) {\n            _loop_2(i);\n        }\n        if (aggregates && aggregates.length) {\n            var _loop_3 = function (i) {\n                var res = {};\n                var fn = void 0;\n                var aggs = aggregates;\n                for (var j = 0; j < aggregates.length; j++) {\n                    fn = DataUtil.aggregates[aggregates[j].type];\n                    if (!isNullOrUndefined(groupDs)) {\n                        var temp = groupDs.filter(function (e) { return e.key === groupedArray[i].key; });\n                        if (fn) {\n                            res[aggs[j].field + ' - ' + aggs[j].type] = fn(temp[0].items, aggs[j].field);\n                        }\n                    }\n                    else {\n                        if (fn) {\n                            res[aggs[j].field + ' - ' + aggs[j].type] = fn(groupedArray[i].items, aggs[j].field);\n                        }\n                    }\n                }\n                groupedArray[i].aggregates = res;\n            };\n            for (var i = 0; i < groupedArray.length; i++) {\n                _loop_3(i);\n            }\n        }\n        if (isLazyLoad && groupedArray.length && aggregates.length) {\n            for (var i = 0; i < groupedArray.length; i++) {\n                groupedArray[i].items = [];\n            }\n        }\n        return jsonData.length && groupedArray || jsonData;\n    };\n    /**\n     * It is used to categorize the multiple items based on a specific field in jsonArray.\n     * The hierarchical queries are commonly required when you use foreign key binding.\n     * @param  {string} fKey\n     * @param  {string} from\n     * @param  {Object[]} source\n     * @param  {Group} lookup?\n     * @param  {string} pKey?\n     * @hidden\n     */\n    DataUtil.buildHierarchy = function (fKey, from, source, lookup, pKey) {\n        var i;\n        var grp = {};\n        var temp;\n        if (lookup.result) {\n            lookup = lookup.result;\n        }\n        if (lookup.GroupGuid) {\n            this.throwError('DataManager: Do not have support Grouping in hierarchy');\n        }\n        for (i = 0; i < lookup.length; i++) {\n            var fKeyData = this.getObject(fKey, lookup[i]);\n            temp = grp[fKeyData] || (grp[fKeyData] = []);\n            temp.push(lookup[i]);\n        }\n        for (i = 0; i < source.length; i++) {\n            var fKeyData = this.getObject(pKey || fKey, source[i]);\n            source[i][from] = grp[fKeyData];\n        }\n    };\n    /**\n     * The method used to get the field names which started with specified characters.\n     * @param  {Object} obj\n     * @param  {string[]} fields?\n     * @param  {string} prefix?\n     * @hidden\n     */\n    DataUtil.getFieldList = function (obj, fields, prefix) {\n        if (prefix === undefined) {\n            prefix = '';\n        }\n        if (fields === undefined || fields === null) {\n            return this.getFieldList(obj, [], prefix);\n        }\n        var copyObj = obj;\n        var keys = Object.keys(obj);\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var prop = keys_1[_i];\n            if (typeof copyObj[prop] === 'object' && !(copyObj[prop] instanceof Array)) {\n                this.getFieldList(copyObj[prop], fields, prefix + prop + '.');\n            }\n            else {\n                fields.push(prefix + prop);\n            }\n        }\n        return fields;\n    };\n    /**\n     * Gets the value of the property in the given object.\n     * The complex object can be accessed by providing the field names concatenated with dot(.).\n     * @param  {string} nameSpace - The name of the property to be accessed.\n     * @param  {Object} from - Defines the source object.\n     */\n    DataUtil.getObject = function (nameSpace, from) {\n        if (!nameSpace) {\n            return from;\n        }\n        if (!from) {\n            return undefined;\n        }\n        if (nameSpace.indexOf('.') === -1) {\n            return from[nameSpace];\n        }\n        var value = from;\n        var splits = nameSpace.split('.');\n        for (var i = 0; i < splits.length; i++) {\n            if (value == null) {\n                break;\n            }\n            value = value[splits[i]];\n        }\n        return value;\n    };\n    /**\n     * To set value for the nameSpace in desired object.\n     * @param {string} nameSpace - String value to the get the inner object.\n     * @param {Object} value - Value that you need to set.\n     * @param {Object} obj - Object to get the inner object value.\n     * @return { [key: string]: Object; } | Object\n     * @hidden\n     */\n    DataUtil.setValue = function (nameSpace, value, obj) {\n        var keys = nameSpace.toString().split('.');\n        var start = obj || {};\n        var fromObj = start;\n        var i;\n        var length = keys.length;\n        var key;\n        for (i = 0; i < length; i++) {\n            key = keys[i];\n            if (i + 1 === length) {\n                fromObj[key] = value === undefined ? undefined : value;\n            }\n            else if (isNullOrUndefined(fromObj[key])) {\n                fromObj[key] = {};\n            }\n            fromObj = fromObj[key];\n        }\n        return start;\n    };\n    /**\n     * Sort the given data based on the field and comparer.\n     * @param  {Object[]} ds - Defines the input data.\n     * @param  {string} field - Defines the field to be sorted.\n     * @param  {Function} comparer - Defines the comparer function used to sort the records.\n     */\n    DataUtil.sort = function (ds, field, comparer) {\n        if (ds.length <= 1) {\n            return ds;\n        }\n        var middle = parseInt((ds.length / 2).toString(), 10);\n        var left = ds.slice(0, middle);\n        var right = ds.slice(middle);\n        left = this.sort(left, field, comparer);\n        right = this.sort(right, field, comparer);\n        return this.merge(left, right, field, comparer);\n    };\n    DataUtil.ignoreDiacritics = function (value) {\n        if (typeof value !== 'string') {\n            return value;\n        }\n        var result = value.split('');\n        var newValue = result.map(function (temp) { return temp in DataUtil.diacritics ? DataUtil.diacritics[temp] : temp; });\n        return newValue.join('');\n    };\n    DataUtil.merge = function (left, right, fieldName, comparer) {\n        var result = [];\n        var current;\n        while (left.length > 0 || right.length > 0) {\n            if (left.length > 0 && right.length > 0) {\n                if (comparer) {\n                    current = comparer(this.getVal(left, 0, fieldName), this.getVal(right, 0, fieldName), left[0], right[0]) <= 0 ? left : right;\n                }\n                else {\n                    current = left[0][fieldName] < left[0][fieldName] ? left : right;\n                }\n            }\n            else {\n                current = left.length > 0 ? left : right;\n            }\n            result.push(current.shift());\n        }\n        return result;\n    };\n    DataUtil.getVal = function (array, index, field) {\n        return field ? this.getObject(field, array[index]) : array[index];\n    };\n    DataUtil.toLowerCase = function (val) {\n        return val ? typeof val === 'string' ? val.toLowerCase() : val.toString() : (val === 0 || val === false) ? val.toString() : '';\n    };\n    /**\n     * To perform the filter operation with specified adaptor and returns the result.\n     * @param  {Object} adaptor\n     * @param  {string} fnName\n     * @param  {Object} param1?\n     * @param  {Object} param2?\n     * @hidden\n     */\n    DataUtil.callAdaptorFunction = function (adaptor, fnName, param1, param2) {\n        if (fnName in adaptor) {\n            var res = adaptor[fnName](param1, param2);\n            if (!isNullOrUndefined(res)) {\n                param1 = res;\n            }\n        }\n        return param1;\n    };\n    DataUtil.getAddParams = function (adp, dm, query) {\n        var req = {};\n        DataUtil.callAdaptorFunction(adp, 'addParams', {\n            dm: dm,\n            query: query,\n            params: query.params,\n            reqParams: req\n        });\n        return req;\n    };\n    /**\n     * Checks wheather the given input is a plain object or not.\n     * @param  {Object|Object[]} obj\n     */\n    DataUtil.isPlainObject = function (obj) {\n        return (!!obj) && (obj.constructor === Object);\n    };\n    /**\n     * Returns true when the browser cross origin request.\n     */\n    DataUtil.isCors = function () {\n        var xhr = null;\n        var request = 'XMLHttpRequest';\n        try {\n            xhr = new window[request]();\n        }\n        catch (e) {\n            // No exception handling\n        }\n        return !!xhr && ('withCredentials' in xhr);\n    };\n    /**\n     * Generate random GUID value which will be prefixed with the given value.\n     * @param  {string} prefix\n     */\n    DataUtil.getGuid = function (prefix) {\n        var hexs = '0123456789abcdef';\n        var rand;\n        return (prefix || '') + '00000000-0000-4000-0000-000000000000'.replace(/0/g, function (val, i) {\n            if ('crypto' in window && 'getRandomValues' in crypto) {\n                var arr = new Uint8Array(1);\n                window.crypto.getRandomValues(arr);\n                rand = arr[0] % 16 | 0;\n            }\n            else {\n                rand = Math.random() * 16 | 0;\n            }\n            return hexs[i === 19 ? rand & 0x3 | 0x8 : rand];\n        });\n    };\n    /**\n     * Checks wheather the given value is null or not.\n     * @param  {string|Object} val\n     * @returns boolean\n     */\n    DataUtil.isNull = function (val) {\n        return val === undefined || val === null;\n    };\n    /**\n     * To get the required items from collection of objects.\n     * @param  {Object[]} array\n     * @param  {string} field\n     * @param  {Function} comparer\n     * @returns Object\n     * @hidden\n     */\n    DataUtil.getItemFromComparer = function (array, field, comparer) {\n        var keyVal;\n        var current;\n        var key;\n        var i = 0;\n        var castRequired = typeof DataUtil.getVal(array, 0, field) === 'string';\n        if (array.length) {\n            while (isNullOrUndefined(keyVal) && i < array.length) {\n                keyVal = DataUtil.getVal(array, i, field);\n                key = array[i++];\n            }\n        }\n        for (; i < array.length; i++) {\n            current = DataUtil.getVal(array, i, field);\n            if (isNullOrUndefined(current)) {\n                continue;\n            }\n            if (castRequired) {\n                keyVal = +keyVal;\n                current = +current;\n            }\n            if (comparer(keyVal, current) > 0) {\n                keyVal = current;\n                key = array[i];\n            }\n        }\n        return key;\n    };\n    /**\n     * To get distinct values of Array or Array of Objects.\n     * @param  {Object[]} json\n     * @param  {string} field\n     * @param  {boolean} requiresCompleteRecord\n     * @returns Object[]\n     * * distinct array of objects is return when requiresCompleteRecord set as true.\n     * @hidden\n     */\n    DataUtil.distinct = function (json, fieldName, requiresCompleteRecord) {\n        requiresCompleteRecord = isNullOrUndefined(requiresCompleteRecord) ? false : requiresCompleteRecord;\n        var result = [];\n        var val;\n        var tmp = {};\n        json.forEach(function (data, index) {\n            val = typeof (json[index]) === 'object' ? DataUtil.getVal(json, index, fieldName) : json[index];\n            if (!(val in tmp)) {\n                result.push(!requiresCompleteRecord ? val : json[index]);\n                tmp[val] = 1;\n            }\n        });\n        return result;\n    };\n    /**\n     * Specifies the value which will be used to adjust the date value to server timezone.\n     * @default null\n     */\n    DataUtil.serverTimezoneOffset = null;\n    /**\n     * Species whether are not to be parsed with serverTimezoneOffset value.\n     * @hidden\n     */\n    DataUtil.timeZoneHandling = true;\n    /**\n     * Throw error with the given string as message.\n     * @param  {string} er\n     */\n    DataUtil.throwError = function (error) {\n        try {\n            throw new Error(error);\n        }\n        catch (e) {\n            throw e.message + '\\n' + e.stack;\n        }\n    };\n    DataUtil.aggregates = {\n        /**\n         * Calculate sum of the given field in the data.\n         * @param  {Object[]} ds\n         * @param  {string} field\n         */\n        sum: function (ds, field) {\n            var result = 0;\n            var val;\n            var castRequired = typeof DataUtil.getVal(ds, 0, field) !== 'number';\n            for (var i = 0; i < ds.length; i++) {\n                val = DataUtil.getVal(ds, i, field);\n                if (!isNaN(val) && val !== null) {\n                    if (castRequired) {\n                        val = +val;\n                    }\n                    result += val;\n                }\n            }\n            return result;\n        },\n        /**\n         * Calculate average value of the given field in the data.\n         * @param  {Object[]} ds\n         * @param  {string} field\n         */\n        average: function (ds, field) {\n            return DataUtil.aggregates.sum(ds, field) / ds.length;\n        },\n        /**\n         * Returns the min value of the data based on the field.\n         * @param  {Object[]} ds\n         * @param  {string|Function} field\n         */\n        min: function (ds, field) {\n            var comparer;\n            if (typeof field === 'function') {\n                comparer = field;\n                field = null;\n            }\n            return DataUtil.getObject(field, DataUtil.getItemFromComparer(ds, field, comparer || DataUtil.fnAscending));\n        },\n        /**\n         * Returns the max value of the data based on the field.\n         * @param  {Object[]} ds\n         * @param  {string} field\n         * @returns number\n         */\n        max: function (ds, field) {\n            var comparer;\n            if (typeof field === 'function') {\n                comparer = field;\n                field = null;\n            }\n            return DataUtil.getObject(field, DataUtil.getItemFromComparer(ds, field, comparer || DataUtil.fnDescending));\n        },\n        /**\n         * Returns the total number of true value present in the data based on the given boolean field name.\n         * @param  {Object[]} ds\n         * @param  {string} field\n         */\n        truecount: function (ds, field) {\n            return new DataManager(ds).executeLocal(new Query().where(field, 'equal', true, true)).length;\n        },\n        /**\n         * Returns the total number of false value present in the data based on the given boolean field name.\n         * @param  {Object[]} ds\n         * @param  {string} field\n         */\n        falsecount: function (ds, field) {\n            return new DataManager(ds).executeLocal(new Query().where(field, 'equal', false, true)).length;\n        },\n        /**\n         * Returns the length of the given data.\n         * @param  {Object[]} ds\n         * @param  {string} field?\n         * @returns number\n         */\n        count: function (ds, field) {\n            return ds.length;\n        }\n    };\n    /**\n     * Specifies the Object with filter operators.\n     */\n    DataUtil.operatorSymbols = {\n        '<': 'lessthan',\n        '>': 'greaterthan',\n        '<=': 'lessthanorequal',\n        '>=': 'greaterthanorequal',\n        '==': 'equal',\n        '!=': 'notequal',\n        '*=': 'contains',\n        '$=': 'endswith',\n        '^=': 'startswith'\n    };\n    /**\n     * Specifies the Object with filter operators which will be used for OData filter query generation.\n     * * It will be used for date/number type filter query.\n     */\n    DataUtil.odBiOperator = {\n        '<': ' lt ',\n        '>': ' gt ',\n        '<=': ' le ',\n        '>=': ' ge ',\n        '==': ' eq ',\n        '!=': ' ne ',\n        'lessthan': ' lt ',\n        'lessthanorequal': ' le ',\n        'greaterthan': ' gt ',\n        'greaterthanorequal': ' ge ',\n        'equal': ' eq ',\n        'notequal': ' ne '\n    };\n    /**\n     * Specifies the Object with filter operators which will be used for OData filter query generation.\n     * It will be used for string type filter query.\n     */\n    DataUtil.odUniOperator = {\n        '$=': 'endswith',\n        '^=': 'startswith',\n        '*=': 'substringof',\n        'endswith': 'endswith',\n        'startswith': 'startswith',\n        'contains': 'substringof'\n    };\n    /**\n     * Specifies the Object with filter operators which will be used for ODataV4 filter query generation.\n     * It will be used for string type filter query.\n     */\n    DataUtil.odv4UniOperator = {\n        '$=': 'endswith',\n        '^=': 'startswith',\n        '*=': 'contains',\n        'endswith': 'endswith',\n        'startswith': 'startswith',\n        'contains': 'contains'\n    };\n    DataUtil.diacritics = {\n        '\\u24B6': 'A',\n        '\\uFF21': 'A',\n        '\\u00C0': 'A',\n        '\\u00C1': 'A',\n        '\\u00C2': 'A',\n        '\\u1EA6': 'A',\n        '\\u1EA4': 'A',\n        '\\u1EAA': 'A',\n        '\\u1EA8': 'A',\n        '\\u00C3': 'A',\n        '\\u0100': 'A',\n        '\\u0102': 'A',\n        '\\u1EB0': 'A',\n        '\\u1EAE': 'A',\n        '\\u1EB4': 'A',\n        '\\u1EB2': 'A',\n        '\\u0226': 'A',\n        '\\u01E0': 'A',\n        '\\u00C4': 'A',\n        '\\u01DE': 'A',\n        '\\u1EA2': 'A',\n        '\\u00C5': 'A',\n        '\\u01FA': 'A',\n        '\\u01CD': 'A',\n        '\\u0200': 'A',\n        '\\u0202': 'A',\n        '\\u1EA0': 'A',\n        '\\u1EAC': 'A',\n        '\\u1EB6': 'A',\n        '\\u1E00': 'A',\n        '\\u0104': 'A',\n        '\\u023A': 'A',\n        '\\u2C6F': 'A',\n        '\\uA732': 'AA',\n        '\\u00C6': 'AE',\n        '\\u01FC': 'AE',\n        '\\u01E2': 'AE',\n        '\\uA734': 'AO',\n        '\\uA736': 'AU',\n        '\\uA738': 'AV',\n        '\\uA73A': 'AV',\n        '\\uA73C': 'AY',\n        '\\u24B7': 'B',\n        '\\uFF22': 'B',\n        '\\u1E02': 'B',\n        '\\u1E04': 'B',\n        '\\u1E06': 'B',\n        '\\u0243': 'B',\n        '\\u0182': 'B',\n        '\\u0181': 'B',\n        '\\u24B8': 'C',\n        '\\uFF23': 'C',\n        '\\u0106': 'C',\n        '\\u0108': 'C',\n        '\\u010A': 'C',\n        '\\u010C': 'C',\n        '\\u00C7': 'C',\n        '\\u1E08': 'C',\n        '\\u0187': 'C',\n        '\\u023B': 'C',\n        '\\uA73E': 'C',\n        '\\u24B9': 'D',\n        '\\uFF24': 'D',\n        '\\u1E0A': 'D',\n        '\\u010E': 'D',\n        '\\u1E0C': 'D',\n        '\\u1E10': 'D',\n        '\\u1E12': 'D',\n        '\\u1E0E': 'D',\n        '\\u0110': 'D',\n        '\\u018B': 'D',\n        '\\u018A': 'D',\n        '\\u0189': 'D',\n        '\\uA779': 'D',\n        '\\u01F1': 'DZ',\n        '\\u01C4': 'DZ',\n        '\\u01F2': 'Dz',\n        '\\u01C5': 'Dz',\n        '\\u24BA': 'E',\n        '\\uFF25': 'E',\n        '\\u00C8': 'E',\n        '\\u00C9': 'E',\n        '\\u00CA': 'E',\n        '\\u1EC0': 'E',\n        '\\u1EBE': 'E',\n        '\\u1EC4': 'E',\n        '\\u1EC2': 'E',\n        '\\u1EBC': 'E',\n        '\\u0112': 'E',\n        '\\u1E14': 'E',\n        '\\u1E16': 'E',\n        '\\u0114': 'E',\n        '\\u0116': 'E',\n        '\\u00CB': 'E',\n        '\\u1EBA': 'E',\n        '\\u011A': 'E',\n        '\\u0204': 'E',\n        '\\u0206': 'E',\n        '\\u1EB8': 'E',\n        '\\u1EC6': 'E',\n        '\\u0228': 'E',\n        '\\u1E1C': 'E',\n        '\\u0118': 'E',\n        '\\u1E18': 'E',\n        '\\u1E1A': 'E',\n        '\\u0190': 'E',\n        '\\u018E': 'E',\n        '\\u24BB': 'F',\n        '\\uFF26': 'F',\n        '\\u1E1E': 'F',\n        '\\u0191': 'F',\n        '\\uA77B': 'F',\n        '\\u24BC': 'G',\n        '\\uFF27': 'G',\n        '\\u01F4': 'G',\n        '\\u011C': 'G',\n        '\\u1E20': 'G',\n        '\\u011E': 'G',\n        '\\u0120': 'G',\n        '\\u01E6': 'G',\n        '\\u0122': 'G',\n        '\\u01E4': 'G',\n        '\\u0193': 'G',\n        '\\uA7A0': 'G',\n        '\\uA77D': 'G',\n        '\\uA77E': 'G',\n        '\\u24BD': 'H',\n        '\\uFF28': 'H',\n        '\\u0124': 'H',\n        '\\u1E22': 'H',\n        '\\u1E26': 'H',\n        '\\u021E': 'H',\n        '\\u1E24': 'H',\n        '\\u1E28': 'H',\n        '\\u1E2A': 'H',\n        '\\u0126': 'H',\n        '\\u2C67': 'H',\n        '\\u2C75': 'H',\n        '\\uA78D': 'H',\n        '\\u24BE': 'I',\n        '\\uFF29': 'I',\n        '\\u00CC': 'I',\n        '\\u00CD': 'I',\n        '\\u00CE': 'I',\n        '\\u0128': 'I',\n        '\\u012A': 'I',\n        '\\u012C': 'I',\n        '\\u0130': 'I',\n        '\\u00CF': 'I',\n        '\\u1E2E': 'I',\n        '\\u1EC8': 'I',\n        '\\u01CF': 'I',\n        '\\u0208': 'I',\n        '\\u020A': 'I',\n        '\\u1ECA': 'I',\n        '\\u012E': 'I',\n        '\\u1E2C': 'I',\n        '\\u0197': 'I',\n        '\\u24BF': 'J',\n        '\\uFF2A': 'J',\n        '\\u0134': 'J',\n        '\\u0248': 'J',\n        '\\u24C0': 'K',\n        '\\uFF2B': 'K',\n        '\\u1E30': 'K',\n        '\\u01E8': 'K',\n        '\\u1E32': 'K',\n        '\\u0136': 'K',\n        '\\u1E34': 'K',\n        '\\u0198': 'K',\n        '\\u2C69': 'K',\n        '\\uA740': 'K',\n        '\\uA742': 'K',\n        '\\uA744': 'K',\n        '\\uA7A2': 'K',\n        '\\u24C1': 'L',\n        '\\uFF2C': 'L',\n        '\\u013F': 'L',\n        '\\u0139': 'L',\n        '\\u013D': 'L',\n        '\\u1E36': 'L',\n        '\\u1E38': 'L',\n        '\\u013B': 'L',\n        '\\u1E3C': 'L',\n        '\\u1E3A': 'L',\n        '\\u0141': 'L',\n        '\\u023D': 'L',\n        '\\u2C62': 'L',\n        '\\u2C60': 'L',\n        '\\uA748': 'L',\n        '\\uA746': 'L',\n        '\\uA780': 'L',\n        '\\u01C7': 'LJ',\n        '\\u01C8': 'Lj',\n        '\\u24C2': 'M',\n        '\\uFF2D': 'M',\n        '\\u1E3E': 'M',\n        '\\u1E40': 'M',\n        '\\u1E42': 'M',\n        '\\u2C6E': 'M',\n        '\\u019C': 'M',\n        '\\u24C3': 'N',\n        '\\uFF2E': 'N',\n        '\\u01F8': 'N',\n        '\\u0143': 'N',\n        '\\u00D1': 'N',\n        '\\u1E44': 'N',\n        '\\u0147': 'N',\n        '\\u1E46': 'N',\n        '\\u0145': 'N',\n        '\\u1E4A': 'N',\n        '\\u1E48': 'N',\n        '\\u0220': 'N',\n        '\\u019D': 'N',\n        '\\uA790': 'N',\n        '\\uA7A4': 'N',\n        '\\u01CA': 'NJ',\n        '\\u01CB': 'Nj',\n        '\\u24C4': 'O',\n        '\\uFF2F': 'O',\n        '\\u00D2': 'O',\n        '\\u00D3': 'O',\n        '\\u00D4': 'O',\n        '\\u1ED2': 'O',\n        '\\u1ED0': 'O',\n        '\\u1ED6': 'O',\n        '\\u1ED4': 'O',\n        '\\u00D5': 'O',\n        '\\u1E4C': 'O',\n        '\\u022C': 'O',\n        '\\u1E4E': 'O',\n        '\\u014C': 'O',\n        '\\u1E50': 'O',\n        '\\u1E52': 'O',\n        '\\u014E': 'O',\n        '\\u022E': 'O',\n        '\\u0230': 'O',\n        '\\u00D6': 'O',\n        '\\u022A': 'O',\n        '\\u1ECE': 'O',\n        '\\u0150': 'O',\n        '\\u01D1': 'O',\n        '\\u020C': 'O',\n        '\\u020E': 'O',\n        '\\u01A0': 'O',\n        '\\u1EDC': 'O',\n        '\\u1EDA': 'O',\n        '\\u1EE0': 'O',\n        '\\u1EDE': 'O',\n        '\\u1EE2': 'O',\n        '\\u1ECC': 'O',\n        '\\u1ED8': 'O',\n        '\\u01EA': 'O',\n        '\\u01EC': 'O',\n        '\\u00D8': 'O',\n        '\\u01FE': 'O',\n        '\\u0186': 'O',\n        '\\u019F': 'O',\n        '\\uA74A': 'O',\n        '\\uA74C': 'O',\n        '\\u01A2': 'OI',\n        '\\uA74E': 'OO',\n        '\\u0222': 'OU',\n        '\\u24C5': 'P',\n        '\\uFF30': 'P',\n        '\\u1E54': 'P',\n        '\\u1E56': 'P',\n        '\\u01A4': 'P',\n        '\\u2C63': 'P',\n        '\\uA750': 'P',\n        '\\uA752': 'P',\n        '\\uA754': 'P',\n        '\\u24C6': 'Q',\n        '\\uFF31': 'Q',\n        '\\uA756': 'Q',\n        '\\uA758': 'Q',\n        '\\u024A': 'Q',\n        '\\u24C7': 'R',\n        '\\uFF32': 'R',\n        '\\u0154': 'R',\n        '\\u1E58': 'R',\n        '\\u0158': 'R',\n        '\\u0210': 'R',\n        '\\u0212': 'R',\n        '\\u1E5A': 'R',\n        '\\u1E5C': 'R',\n        '\\u0156': 'R',\n        '\\u1E5E': 'R',\n        '\\u024C': 'R',\n        '\\u2C64': 'R',\n        '\\uA75A': 'R',\n        '\\uA7A6': 'R',\n        '\\uA782': 'R',\n        '\\u24C8': 'S',\n        '\\uFF33': 'S',\n        '\\u1E9E': 'S',\n        '\\u015A': 'S',\n        '\\u1E64': 'S',\n        '\\u015C': 'S',\n        '\\u1E60': 'S',\n        '\\u0160': 'S',\n        '\\u1E66': 'S',\n        '\\u1E62': 'S',\n        '\\u1E68': 'S',\n        '\\u0218': 'S',\n        '\\u015E': 'S',\n        '\\u2C7E': 'S',\n        '\\uA7A8': 'S',\n        '\\uA784': 'S',\n        '\\u24C9': 'T',\n        '\\uFF34': 'T',\n        '\\u1E6A': 'T',\n        '\\u0164': 'T',\n        '\\u1E6C': 'T',\n        '\\u021A': 'T',\n        '\\u0162': 'T',\n        '\\u1E70': 'T',\n        '\\u1E6E': 'T',\n        '\\u0166': 'T',\n        '\\u01AC': 'T',\n        '\\u01AE': 'T',\n        '\\u023E': 'T',\n        '\\uA786': 'T',\n        '\\uA728': 'TZ',\n        '\\u24CA': 'U',\n        '\\uFF35': 'U',\n        '\\u00D9': 'U',\n        '\\u00DA': 'U',\n        '\\u00DB': 'U',\n        '\\u0168': 'U',\n        '\\u1E78': 'U',\n        '\\u016A': 'U',\n        '\\u1E7A': 'U',\n        '\\u016C': 'U',\n        '\\u00DC': 'U',\n        '\\u01DB': 'U',\n        '\\u01D7': 'U',\n        '\\u01D5': 'U',\n        '\\u01D9': 'U',\n        '\\u1EE6': 'U',\n        '\\u016E': 'U',\n        '\\u0170': 'U',\n        '\\u01D3': 'U',\n        '\\u0214': 'U',\n        '\\u0216': 'U',\n        '\\u01AF': 'U',\n        '\\u1EEA': 'U',\n        '\\u1EE8': 'U',\n        '\\u1EEE': 'U',\n        '\\u1EEC': 'U',\n        '\\u1EF0': 'U',\n        '\\u1EE4': 'U',\n        '\\u1E72': 'U',\n        '\\u0172': 'U',\n        '\\u1E76': 'U',\n        '\\u1E74': 'U',\n        '\\u0244': 'U',\n        '\\u24CB': 'V',\n        '\\uFF36': 'V',\n        '\\u1E7C': 'V',\n        '\\u1E7E': 'V',\n        '\\u01B2': 'V',\n        '\\uA75E': 'V',\n        '\\u0245': 'V',\n        '\\uA760': 'VY',\n        '\\u24CC': 'W',\n        '\\uFF37': 'W',\n        '\\u1E80': 'W',\n        '\\u1E82': 'W',\n        '\\u0174': 'W',\n        '\\u1E86': 'W',\n        '\\u1E84': 'W',\n        '\\u1E88': 'W',\n        '\\u2C72': 'W',\n        '\\u24CD': 'X',\n        '\\uFF38': 'X',\n        '\\u1E8A': 'X',\n        '\\u1E8C': 'X',\n        '\\u24CE': 'Y',\n        '\\uFF39': 'Y',\n        '\\u1EF2': 'Y',\n        '\\u00DD': 'Y',\n        '\\u0176': 'Y',\n        '\\u1EF8': 'Y',\n        '\\u0232': 'Y',\n        '\\u1E8E': 'Y',\n        '\\u0178': 'Y',\n        '\\u1EF6': 'Y',\n        '\\u1EF4': 'Y',\n        '\\u01B3': 'Y',\n        '\\u024E': 'Y',\n        '\\u1EFE': 'Y',\n        '\\u24CF': 'Z',\n        '\\uFF3A': 'Z',\n        '\\u0179': 'Z',\n        '\\u1E90': 'Z',\n        '\\u017B': 'Z',\n        '\\u017D': 'Z',\n        '\\u1E92': 'Z',\n        '\\u1E94': 'Z',\n        '\\u01B5': 'Z',\n        '\\u0224': 'Z',\n        '\\u2C7F': 'Z',\n        '\\u2C6B': 'Z',\n        '\\uA762': 'Z',\n        '\\u24D0': 'a',\n        '\\uFF41': 'a',\n        '\\u1E9A': 'a',\n        '\\u00E0': 'a',\n        '\\u00E1': 'a',\n        '\\u00E2': 'a',\n        '\\u1EA7': 'a',\n        '\\u1EA5': 'a',\n        '\\u1EAB': 'a',\n        '\\u1EA9': 'a',\n        '\\u00E3': 'a',\n        '\\u0101': 'a',\n        '\\u0103': 'a',\n        '\\u1EB1': 'a',\n        '\\u1EAF': 'a',\n        '\\u1EB5': 'a',\n        '\\u1EB3': 'a',\n        '\\u0227': 'a',\n        '\\u01E1': 'a',\n        '\\u00E4': 'a',\n        '\\u01DF': 'a',\n        '\\u1EA3': 'a',\n        '\\u00E5': 'a',\n        '\\u01FB': 'a',\n        '\\u01CE': 'a',\n        '\\u0201': 'a',\n        '\\u0203': 'a',\n        '\\u1EA1': 'a',\n        '\\u1EAD': 'a',\n        '\\u1EB7': 'a',\n        '\\u1E01': 'a',\n        '\\u0105': 'a',\n        '\\u2C65': 'a',\n        '\\u0250': 'a',\n        '\\uA733': 'aa',\n        '\\u00E6': 'ae',\n        '\\u01FD': 'ae',\n        '\\u01E3': 'ae',\n        '\\uA735': 'ao',\n        '\\uA737': 'au',\n        '\\uA739': 'av',\n        '\\uA73B': 'av',\n        '\\uA73D': 'ay',\n        '\\u24D1': 'b',\n        '\\uFF42': 'b',\n        '\\u1E03': 'b',\n        '\\u1E05': 'b',\n        '\\u1E07': 'b',\n        '\\u0180': 'b',\n        '\\u0183': 'b',\n        '\\u0253': 'b',\n        '\\u24D2': 'c',\n        '\\uFF43': 'c',\n        '\\u0107': 'c',\n        '\\u0109': 'c',\n        '\\u010B': 'c',\n        '\\u010D': 'c',\n        '\\u00E7': 'c',\n        '\\u1E09': 'c',\n        '\\u0188': 'c',\n        '\\u023C': 'c',\n        '\\uA73F': 'c',\n        '\\u2184': 'c',\n        '\\u24D3': 'd',\n        '\\uFF44': 'd',\n        '\\u1E0B': 'd',\n        '\\u010F': 'd',\n        '\\u1E0D': 'd',\n        '\\u1E11': 'd',\n        '\\u1E13': 'd',\n        '\\u1E0F': 'd',\n        '\\u0111': 'd',\n        '\\u018C': 'd',\n        '\\u0256': 'd',\n        '\\u0257': 'd',\n        '\\uA77A': 'd',\n        '\\u01F3': 'dz',\n        '\\u01C6': 'dz',\n        '\\u24D4': 'e',\n        '\\uFF45': 'e',\n        '\\u00E8': 'e',\n        '\\u00E9': 'e',\n        '\\u00EA': 'e',\n        '\\u1EC1': 'e',\n        '\\u1EBF': 'e',\n        '\\u1EC5': 'e',\n        '\\u1EC3': 'e',\n        '\\u1EBD': 'e',\n        '\\u0113': 'e',\n        '\\u1E15': 'e',\n        '\\u1E17': 'e',\n        '\\u0115': 'e',\n        '\\u0117': 'e',\n        '\\u00EB': 'e',\n        '\\u1EBB': 'e',\n        '\\u011B': 'e',\n        '\\u0205': 'e',\n        '\\u0207': 'e',\n        '\\u1EB9': 'e',\n        '\\u1EC7': 'e',\n        '\\u0229': 'e',\n        '\\u1E1D': 'e',\n        '\\u0119': 'e',\n        '\\u1E19': 'e',\n        '\\u1E1B': 'e',\n        '\\u0247': 'e',\n        '\\u025B': 'e',\n        '\\u01DD': 'e',\n        '\\u24D5': 'f',\n        '\\uFF46': 'f',\n        '\\u1E1F': 'f',\n        '\\u0192': 'f',\n        '\\uA77C': 'f',\n        '\\u24D6': 'g',\n        '\\uFF47': 'g',\n        '\\u01F5': 'g',\n        '\\u011D': 'g',\n        '\\u1E21': 'g',\n        '\\u011F': 'g',\n        '\\u0121': 'g',\n        '\\u01E7': 'g',\n        '\\u0123': 'g',\n        '\\u01E5': 'g',\n        '\\u0260': 'g',\n        '\\uA7A1': 'g',\n        '\\u1D79': 'g',\n        '\\uA77F': 'g',\n        '\\u24D7': 'h',\n        '\\uFF48': 'h',\n        '\\u0125': 'h',\n        '\\u1E23': 'h',\n        '\\u1E27': 'h',\n        '\\u021F': 'h',\n        '\\u1E25': 'h',\n        '\\u1E29': 'h',\n        '\\u1E2B': 'h',\n        '\\u1E96': 'h',\n        '\\u0127': 'h',\n        '\\u2C68': 'h',\n        '\\u2C76': 'h',\n        '\\u0265': 'h',\n        '\\u0195': 'hv',\n        '\\u24D8': 'i',\n        '\\uFF49': 'i',\n        '\\u00EC': 'i',\n        '\\u00ED': 'i',\n        '\\u00EE': 'i',\n        '\\u0129': 'i',\n        '\\u012B': 'i',\n        '\\u012D': 'i',\n        '\\u00EF': 'i',\n        '\\u1E2F': 'i',\n        '\\u1EC9': 'i',\n        '\\u01D0': 'i',\n        '\\u0209': 'i',\n        '\\u020B': 'i',\n        '\\u1ECB': 'i',\n        '\\u012F': 'i',\n        '\\u1E2D': 'i',\n        '\\u0268': 'i',\n        '\\u0131': 'i',\n        '\\u24D9': 'j',\n        '\\uFF4A': 'j',\n        '\\u0135': 'j',\n        '\\u01F0': 'j',\n        '\\u0249': 'j',\n        '\\u24DA': 'k',\n        '\\uFF4B': 'k',\n        '\\u1E31': 'k',\n        '\\u01E9': 'k',\n        '\\u1E33': 'k',\n        '\\u0137': 'k',\n        '\\u1E35': 'k',\n        '\\u0199': 'k',\n        '\\u2C6A': 'k',\n        '\\uA741': 'k',\n        '\\uA743': 'k',\n        '\\uA745': 'k',\n        '\\uA7A3': 'k',\n        '\\u24DB': 'l',\n        '\\uFF4C': 'l',\n        '\\u0140': 'l',\n        '\\u013A': 'l',\n        '\\u013E': 'l',\n        '\\u1E37': 'l',\n        '\\u1E39': 'l',\n        '\\u013C': 'l',\n        '\\u1E3D': 'l',\n        '\\u1E3B': 'l',\n        '\\u017F': 'l',\n        '\\u0142': 'l',\n        '\\u019A': 'l',\n        '\\u026B': 'l',\n        '\\u2C61': 'l',\n        '\\uA749': 'l',\n        '\\uA781': 'l',\n        '\\uA747': 'l',\n        '\\u01C9': 'lj',\n        '\\u24DC': 'm',\n        '\\uFF4D': 'm',\n        '\\u1E3F': 'm',\n        '\\u1E41': 'm',\n        '\\u1E43': 'm',\n        '\\u0271': 'm',\n        '\\u026F': 'm',\n        '\\u24DD': 'n',\n        '\\uFF4E': 'n',\n        '\\u01F9': 'n',\n        '\\u0144': 'n',\n        '\\u00F1': 'n',\n        '\\u1E45': 'n',\n        '\\u0148': 'n',\n        '\\u1E47': 'n',\n        '\\u0146': 'n',\n        '\\u1E4B': 'n',\n        '\\u1E49': 'n',\n        '\\u019E': 'n',\n        '\\u0272': 'n',\n        '\\u0149': 'n',\n        '\\uA791': 'n',\n        '\\uA7A5': 'n',\n        '\\u01CC': 'nj',\n        '\\u24DE': 'o',\n        '\\uFF4F': 'o',\n        '\\u00F2': 'o',\n        '\\u00F3': 'o',\n        '\\u00F4': 'o',\n        '\\u1ED3': 'o',\n        '\\u1ED1': 'o',\n        '\\u1ED7': 'o',\n        '\\u1ED5': 'o',\n        '\\u00F5': 'o',\n        '\\u1E4D': 'o',\n        '\\u022D': 'o',\n        '\\u1E4F': 'o',\n        '\\u014D': 'o',\n        '\\u1E51': 'o',\n        '\\u1E53': 'o',\n        '\\u014F': 'o',\n        '\\u022F': 'o',\n        '\\u0231': 'o',\n        '\\u00F6': 'o',\n        '\\u022B': 'o',\n        '\\u1ECF': 'o',\n        '\\u0151': 'o',\n        '\\u01D2': 'o',\n        '\\u020D': 'o',\n        '\\u020F': 'o',\n        '\\u01A1': 'o',\n        '\\u1EDD': 'o',\n        '\\u1EDB': 'o',\n        '\\u1EE1': 'o',\n        '\\u1EDF': 'o',\n        '\\u1EE3': 'o',\n        '\\u1ECD': 'o',\n        '\\u1ED9': 'o',\n        '\\u01EB': 'o',\n        '\\u01ED': 'o',\n        '\\u00F8': 'o',\n        '\\u01FF': 'o',\n        '\\u0254': 'o',\n        '\\uA74B': 'o',\n        '\\uA74D': 'o',\n        '\\u0275': 'o',\n        '\\u01A3': 'oi',\n        '\\u0223': 'ou',\n        '\\uA74F': 'oo',\n        '\\u24DF': 'p',\n        '\\uFF50': 'p',\n        '\\u1E55': 'p',\n        '\\u1E57': 'p',\n        '\\u01A5': 'p',\n        '\\u1D7D': 'p',\n        '\\uA751': 'p',\n        '\\uA753': 'p',\n        '\\uA755': 'p',\n        '\\u24E0': 'q',\n        '\\uFF51': 'q',\n        '\\u024B': 'q',\n        '\\uA757': 'q',\n        '\\uA759': 'q',\n        '\\u24E1': 'r',\n        '\\uFF52': 'r',\n        '\\u0155': 'r',\n        '\\u1E59': 'r',\n        '\\u0159': 'r',\n        '\\u0211': 'r',\n        '\\u0213': 'r',\n        '\\u1E5B': 'r',\n        '\\u1E5D': 'r',\n        '\\u0157': 'r',\n        '\\u1E5F': 'r',\n        '\\u024D': 'r',\n        '\\u027D': 'r',\n        '\\uA75B': 'r',\n        '\\uA7A7': 'r',\n        '\\uA783': 'r',\n        '\\u24E2': 's',\n        '\\uFF53': 's',\n        '\\u00DF': 's',\n        '\\u015B': 's',\n        '\\u1E65': 's',\n        '\\u015D': 's',\n        '\\u1E61': 's',\n        '\\u0161': 's',\n        '\\u1E67': 's',\n        '\\u1E63': 's',\n        '\\u1E69': 's',\n        '\\u0219': 's',\n        '\\u015F': 's',\n        '\\u023F': 's',\n        '\\uA7A9': 's',\n        '\\uA785': 's',\n        '\\u1E9B': 's',\n        '\\u24E3': 't',\n        '\\uFF54': 't',\n        '\\u1E6B': 't',\n        '\\u1E97': 't',\n        '\\u0165': 't',\n        '\\u1E6D': 't',\n        '\\u021B': 't',\n        '\\u0163': 't',\n        '\\u1E71': 't',\n        '\\u1E6F': 't',\n        '\\u0167': 't',\n        '\\u01AD': 't',\n        '\\u0288': 't',\n        '\\u2C66': 't',\n        '\\uA787': 't',\n        '\\uA729': 'tz',\n        '\\u24E4': 'u',\n        '\\uFF55': 'u',\n        '\\u00F9': 'u',\n        '\\u00FA': 'u',\n        '\\u00FB': 'u',\n        '\\u0169': 'u',\n        '\\u1E79': 'u',\n        '\\u016B': 'u',\n        '\\u1E7B': 'u',\n        '\\u016D': 'u',\n        '\\u00FC': 'u',\n        '\\u01DC': 'u',\n        '\\u01D8': 'u',\n        '\\u01D6': 'u',\n        '\\u01DA': 'u',\n        '\\u1EE7': 'u',\n        '\\u016F': 'u',\n        '\\u0171': 'u',\n        '\\u01D4': 'u',\n        '\\u0215': 'u',\n        '\\u0217': 'u',\n        '\\u01B0': 'u',\n        '\\u1EEB': 'u',\n        '\\u1EE9': 'u',\n        '\\u1EEF': 'u',\n        '\\u1EED': 'u',\n        '\\u1EF1': 'u',\n        '\\u1EE5': 'u',\n        '\\u1E73': 'u',\n        '\\u0173': 'u',\n        '\\u1E77': 'u',\n        '\\u1E75': 'u',\n        '\\u0289': 'u',\n        '\\u24E5': 'v',\n        '\\uFF56': 'v',\n        '\\u1E7D': 'v',\n        '\\u1E7F': 'v',\n        '\\u028B': 'v',\n        '\\uA75F': 'v',\n        '\\u028C': 'v',\n        '\\uA761': 'vy',\n        '\\u24E6': 'w',\n        '\\uFF57': 'w',\n        '\\u1E81': 'w',\n        '\\u1E83': 'w',\n        '\\u0175': 'w',\n        '\\u1E87': 'w',\n        '\\u1E85': 'w',\n        '\\u1E98': 'w',\n        '\\u1E89': 'w',\n        '\\u2C73': 'w',\n        '\\u24E7': 'x',\n        '\\uFF58': 'x',\n        '\\u1E8B': 'x',\n        '\\u1E8D': 'x',\n        '\\u24E8': 'y',\n        '\\uFF59': 'y',\n        '\\u1EF3': 'y',\n        '\\u00FD': 'y',\n        '\\u0177': 'y',\n        '\\u1EF9': 'y',\n        '\\u0233': 'y',\n        '\\u1E8F': 'y',\n        '\\u00FF': 'y',\n        '\\u1EF7': 'y',\n        '\\u1E99': 'y',\n        '\\u1EF5': 'y',\n        '\\u01B4': 'y',\n        '\\u024F': 'y',\n        '\\u1EFF': 'y',\n        '\\u24E9': 'z',\n        '\\uFF5A': 'z',\n        '\\u017A': 'z',\n        '\\u1E91': 'z',\n        '\\u017C': 'z',\n        '\\u017E': 'z',\n        '\\u1E93': 'z',\n        '\\u1E95': 'z',\n        '\\u01B6': 'z',\n        '\\u0225': 'z',\n        '\\u0240': 'z',\n        '\\u2C6C': 'z',\n        '\\uA763': 'z',\n        '\\u0386': '\\u0391',\n        '\\u0388': '\\u0395',\n        '\\u0389': '\\u0397',\n        '\\u038A': '\\u0399',\n        '\\u03AA': '\\u0399',\n        '\\u038C': '\\u039F',\n        '\\u038E': '\\u03A5',\n        '\\u03AB': '\\u03A5',\n        '\\u038F': '\\u03A9',\n        '\\u03AC': '\\u03B1',\n        '\\u03AD': '\\u03B5',\n        '\\u03AE': '\\u03B7',\n        '\\u03AF': '\\u03B9',\n        '\\u03CA': '\\u03B9',\n        '\\u0390': '\\u03B9',\n        '\\u03CC': '\\u03BF',\n        '\\u03CD': '\\u03C5',\n        '\\u03CB': '\\u03C5',\n        '\\u03B0': '\\u03C5',\n        '\\u03C9': '\\u03C9',\n        '\\u03C2': '\\u03C3'\n    };\n    DataUtil.fnOperators = {\n        /**\n         * Returns true when the actual input is equal to the given input.\n         * @param  {string|number|boolean} actual\n         * @param  {string|number|boolean} expected\n         * @param  {boolean} ignoreCase?\n         * @param  {boolean} ignoreAccent?\n         */\n        equal: function (actual, expected, ignoreCase, ignoreAccent) {\n            if (ignoreAccent) {\n                actual = DataUtil.ignoreDiacritics(actual);\n                expected = DataUtil.ignoreDiacritics(expected);\n            }\n            if (ignoreCase) {\n                return DataUtil.toLowerCase(actual) === DataUtil.toLowerCase(expected);\n            }\n            return actual === expected;\n        },\n        /**\n         * Returns true when the actual input is not equal to the given input.\n         * @param  {string|number|boolean} actual\n         * @param  {string|number|boolean} expected\n         * @param  {boolean} ignoreCase?\n         */\n        notequal: function (actual, expected, ignoreCase, ignoreAccent) {\n            if (ignoreAccent) {\n                actual = DataUtil.ignoreDiacritics(actual);\n                expected = DataUtil.ignoreDiacritics(expected);\n            }\n            return !DataUtil.fnOperators.equal(actual, expected, ignoreCase);\n        },\n        /**\n         * Returns true when the actual input is less than to the given input.\n         * @param  {string|number|boolean} actual\n         * @param  {string|number|boolean} expected\n         * @param  {boolean} ignoreCase?\n         */\n        lessthan: function (actual, expected, ignoreCase) {\n            if (ignoreCase) {\n                return DataUtil.toLowerCase(actual) < DataUtil.toLowerCase(expected);\n            }\n            if (isNullOrUndefined(actual)) {\n                actual = undefined;\n            }\n            return actual < expected;\n        },\n        /**\n         * Returns true when the actual input is greater than to the given input.\n         * @param  {string|number|boolean} actual\n         * @param  {string|number|boolean} expected\n         * @param  {boolean} ignoreCase?\n         */\n        greaterthan: function (actual, expected, ignoreCase) {\n            if (ignoreCase) {\n                return DataUtil.toLowerCase(actual) > DataUtil.toLowerCase(expected);\n            }\n            return actual > expected;\n        },\n        /**\n         * Returns true when the actual input is less than or equal to the given input.\n         * @param  {string|number|boolean} actual\n         * @param  {string|number|boolean} expected\n         * @param  {boolean} ignoreCase?\n         */\n        lessthanorequal: function (actual, expected, ignoreCase) {\n            if (ignoreCase) {\n                return DataUtil.toLowerCase(actual) <= DataUtil.toLowerCase(expected);\n            }\n            return actual <= expected;\n        },\n        /**\n         * Returns true when the actual input is greater than or equal to the given input.\n         * @param  {string|number|boolean} actual\n         * @param  {string|number|boolean} expected\n         * @param  {boolean} ignoreCase?\n         */\n        greaterthanorequal: function (actual, expected, ignoreCase) {\n            if (ignoreCase) {\n                return DataUtil.toLowerCase(actual) >= DataUtil.toLowerCase(expected);\n            }\n            return actual >= expected;\n        },\n        /**\n         * Returns true when the actual input contains the given string.\n         * @param  {string|number} actual\n         * @param  {string|number} expected\n         * @param  {boolean} ignoreCase?\n         */\n        contains: function (actual, expected, ignoreCase, ignoreAccent) {\n            if (ignoreAccent) {\n                actual = DataUtil.ignoreDiacritics(actual);\n                expected = DataUtil.ignoreDiacritics(expected);\n            }\n            if (ignoreCase) {\n                return !isNullOrUndefined(actual) && !isNullOrUndefined(expected) &&\n                    DataUtil.toLowerCase(actual).indexOf(DataUtil.toLowerCase(expected)) !== -1;\n            }\n            return !isNullOrUndefined(actual) && !isNullOrUndefined(expected) &&\n                actual.toString().indexOf(expected) !== -1;\n        },\n        /**\n         * Returns true when the given input value is not null.\n         * @param  {string|number} actual\n         * @returns boolean\n         */\n        notnull: function (actual) {\n            return actual !== null;\n        },\n        /**\n         * Returns true when the given input value is null.\n         * @param  {string|number} actual\n         * @returns boolean\n         */\n        isnull: function (actual) {\n            return actual === null;\n        },\n        /**\n         * Returns true when the actual input starts with the given string\n         * @param  {string} actual\n         * @param  {string} expected\n         * @param  {boolean} ignoreCase?\n         */\n        startswith: function (actual, expected, ignoreCase, ignoreAccent) {\n            if (ignoreAccent) {\n                actual = DataUtil.ignoreDiacritics(actual);\n                expected = DataUtil.ignoreDiacritics(expected);\n            }\n            if (ignoreCase) {\n                return actual && expected && DataUtil.startsWith(DataUtil.toLowerCase(actual), DataUtil.toLowerCase(expected));\n            }\n            return actual && expected && DataUtil.startsWith(actual, expected);\n        },\n        /**\n         * Returns true when the actual input ends with the given string.\n         * @param  {string} actual\n         * @param  {string} expected\n         * @param  {boolean} ignoreCase?\n         */\n        endswith: function (actual, expected, ignoreCase, ignoreAccent) {\n            if (ignoreAccent) {\n                actual = DataUtil.ignoreDiacritics(actual);\n                expected = DataUtil.ignoreDiacritics(expected);\n            }\n            if (ignoreCase) {\n                return actual && expected && DataUtil.endsWith(DataUtil.toLowerCase(actual), DataUtil.toLowerCase(expected));\n            }\n            return actual && expected && DataUtil.endsWith(actual, expected);\n        },\n        /**\n         * It will return the filter operator based on the filter symbol.\n         * @param  {string} operator\n         * @hidden\n         */\n        processSymbols: function (operator) {\n            var fnName = DataUtil.operatorSymbols[operator];\n            if (fnName) {\n                var fn = DataUtil.fnOperators[fnName];\n                return fn;\n            }\n            return DataUtil.throwError('Query - Process Operator : Invalid operator');\n        },\n        /**\n         * It will return the valid filter operator based on the specified operators.\n         * @param  {string} operator\n         * @hidden\n         */\n        processOperator: function (operator) {\n            var fn = DataUtil.fnOperators[operator];\n            if (fn) {\n                return fn;\n            }\n            return DataUtil.fnOperators.processSymbols(operator);\n        }\n    };\n    /**\n     * To perform the parse operation on JSON data, like convert to string from JSON or convert to JSON from string.\n     */\n    DataUtil.parse = {\n        /**\n         * Parse the given string to the plain JavaScript object.\n         * @param  {string|Object|Object[]} jsonText\n         */\n        parseJson: function (jsonText) {\n            if (typeof jsonText === 'string') {\n                jsonText = JSON.parse(jsonText, DataUtil.parse.jsonReviver);\n            }\n            else if (jsonText instanceof Array) {\n                DataUtil.parse.iterateAndReviveArray(jsonText);\n            }\n            else if (typeof jsonText === 'object' && jsonText !== null) {\n                DataUtil.parse.iterateAndReviveJson(jsonText);\n            }\n            return jsonText;\n        },\n        /**\n         * It will perform on array of values.\n         * @param  {string[]|Object[]} array\n         * @hidden\n         */\n        iterateAndReviveArray: function (array) {\n            for (var i = 0; i < array.length; i++) {\n                if (typeof array[i] === 'object' && array[i] !== null) {\n                    DataUtil.parse.iterateAndReviveJson(array[i]);\n                }\n                else if (typeof array[i] === 'string' && !/^[\\s]*\\[|^[\\s]*\\{(.)+:|\\\"/g.test(array[i])) {\n                    array[i] = DataUtil.parse.jsonReviver('', array[i]);\n                }\n                else {\n                    array[i] = DataUtil.parse.parseJson(array[i]);\n                }\n            }\n        },\n        /**\n         * It will perform on JSON values\n         * @param  {JSON} json\n         * @hidden\n         */\n        iterateAndReviveJson: function (json) {\n            var value;\n            var keys = Object.keys(json);\n            for (var _i = 0, keys_2 = keys; _i < keys_2.length; _i++) {\n                var prop = keys_2[_i];\n                if (DataUtil.startsWith(prop, '__')) {\n                    continue;\n                }\n                value = json[prop];\n                if (typeof value === 'object') {\n                    if (value instanceof Array) {\n                        DataUtil.parse.iterateAndReviveArray(value);\n                    }\n                    else if (value) {\n                        DataUtil.parse.iterateAndReviveJson(value);\n                    }\n                }\n                else {\n                    json[prop] = DataUtil.parse.jsonReviver(json[prop], value);\n                }\n            }\n        },\n        /**\n         * It will perform on JSON values\n         * @param  {string} field\n         * @param  {string|Date} value\n         * @hidden\n         */\n        jsonReviver: function (field, value) {\n            if (typeof value === 'string') {\n                var ms = /^\\/Date\\(([+-]?[0-9]+)([+-][0-9]{4})?\\)\\/$/.exec(value);\n                var offSet = DataUtil.timeZoneHandling ? DataUtil.serverTimezoneOffset : null;\n                if (ms) {\n                    return DataUtil.dateParse.toTimeZone(new Date(parseInt(ms[1], 10)), offSet, true);\n                }\n                else if (/^(\\d{4}\\-\\d\\d\\-\\d\\d([tT][\\d:\\.]*){1})([zZ]|([+\\-])(\\d\\d):?(\\d\\d))?$/.test(value)) {\n                    var isUTC = value.indexOf('Z') > -1 || value.indexOf('z') > -1;\n                    var arr = value.split(/[^0-9.]/);\n                    if (isUTC) {\n                        value = DataUtil.dateParse\n                            .toTimeZone(new Date(parseInt(arr[0], 10), parseInt(arr[1], 10) - 1, parseInt(arr[2], 10), parseInt(arr[3], 10), parseInt(arr[4], 10), parseInt(arr[5], 10)), DataUtil.serverTimezoneOffset, false);\n                    }\n                    else {\n                        var utcFormat = new Date(parseInt(arr[0], 10), parseInt(arr[1], 10) - 1, parseInt(arr[2], 10), parseInt(arr[3], 10), parseInt(arr[4], 10), parseInt(arr[5], 10));\n                        var hrs = parseInt(arr[6], 10);\n                        var mins = parseInt(arr[7], 10);\n                        if (isNaN(hrs) && isNaN(mins)) {\n                            return utcFormat;\n                        }\n                        if (value.indexOf('+') > -1) {\n                            utcFormat.setHours(utcFormat.getHours() - hrs, utcFormat.getMinutes() - mins);\n                        }\n                        else {\n                            utcFormat.setHours(utcFormat.getHours() + hrs, utcFormat.getMinutes() + mins);\n                        }\n                        value = DataUtil.dateParse\n                            .toTimeZone(utcFormat, DataUtil.serverTimezoneOffset, false);\n                    }\n                    if (DataUtil.serverTimezoneOffset == null) {\n                        value = DataUtil.dateParse.addSelfOffset(value);\n                    }\n                }\n            }\n            return value;\n        },\n        /**\n         * Check wheather the given value is JSON or not.\n         * @param  {Object[]} jsonData\n         */\n        isJson: function (jsonData) {\n            if (typeof jsonData[0] === 'string') {\n                return jsonData;\n            }\n            return DataUtil.parse.parseJson(jsonData);\n        },\n        /**\n         * Checks wheather the given value is GUID or not.\n         * @param  {string} value\n         */\n        isGuid: function (value) {\n            var regex = /[A-Fa-f0-9]{8}(?:-[A-Fa-f0-9]{4}){3}-[A-Fa-f0-9]{12}/i;\n            var match = regex.exec(value);\n            return match != null;\n        },\n        /**\n         * The method used to replace the value based on the type.\n         * @param  {Object} value\n         * @param  {boolean} stringify\n         * @hidden\n         */\n        replacer: function (value, stringify) {\n            if (DataUtil.isPlainObject(value)) {\n                return DataUtil.parse.jsonReplacer(value, stringify);\n            }\n            if (value instanceof Array) {\n                return DataUtil.parse.arrayReplacer(value);\n            }\n            if (value instanceof Date) {\n                return DataUtil.parse.jsonReplacer({ val: value }, stringify).val;\n            }\n            return value;\n        },\n        /**\n         * It will replace the JSON value.\n         * @param  {string} key\n         * @param  {Object} val\n         * @hidden\n         */\n        jsonReplacer: function (val, stringify) {\n            var value;\n            var keys = Object.keys(val);\n            for (var _i = 0, keys_3 = keys; _i < keys_3.length; _i++) {\n                var prop = keys_3[_i];\n                value = val[prop];\n                if (!(value instanceof Date)) {\n                    continue;\n                }\n                var d = value;\n                if (DataUtil.serverTimezoneOffset == null) {\n                    val[prop] = DataUtil.dateParse.toTimeZone(d, null).toJSON();\n                }\n                else {\n                    d = new Date(+d + DataUtil.serverTimezoneOffset * 3600000);\n                    val[prop] = DataUtil.dateParse.toTimeZone(DataUtil.dateParse.addSelfOffset(d), null).toJSON();\n                }\n            }\n            return val;\n        },\n        /**\n         * It will replace the Array of value.\n         * @param  {string} key\n         * @param  {Object[]} val\n         * @hidden\n         */\n        arrayReplacer: function (val) {\n            for (var i = 0; i < val.length; i++) {\n                if (DataUtil.isPlainObject(val[i])) {\n                    val[i] = DataUtil.parse.jsonReplacer(val[i]);\n                }\n                else if (val[i] instanceof Date) {\n                    val[i] = DataUtil.parse.jsonReplacer({ date: val[i] }).date;\n                }\n            }\n            return val;\n        },\n        /**\n         * It will replace the Date object with respective to UTC format value.\n         * @param  {string} key\n         * @param  {any} value\n         * @hidden\n         */\n        /* tslint:disable-next-line:no-any */\n        jsonDateReplacer: function (key, value) {\n            if (key === 'value' && value) {\n                if (typeof value === 'string') {\n                    var ms = /^\\/Date\\(([+-]?[0-9]+)([+-][0-9]{4})?\\)\\/$/.exec(value);\n                    if (ms) {\n                        value = DataUtil.dateParse.toTimeZone(new Date(parseInt(ms[1], 10)), null, true);\n                    }\n                    else if (/^(\\d{4}\\-\\d\\d\\-\\d\\d([tT][\\d:\\.]*){1})([zZ]|([+\\-])(\\d\\d):?(\\d\\d))?$/.test(value)) {\n                        var arr = value.split(/[^0-9]/);\n                        value = DataUtil.dateParse\n                            .toTimeZone(new Date(parseInt(arr[0], 10), parseInt(arr[1], 10) - 1, parseInt(arr[2], 10), parseInt(arr[3], 10), parseInt(arr[4], 10), parseInt(arr[5], 10)), null, true);\n                    }\n                }\n                if (value instanceof Date) {\n                    value = DataUtil.dateParse.addSelfOffset(value);\n                    if (DataUtil.serverTimezoneOffset === null) {\n                        return DataUtil.dateParse.toTimeZone(DataUtil.dateParse.addSelfOffset(value), null).toJSON();\n                    }\n                    else {\n                        value = DataUtil.dateParse.toTimeZone(value, (((value.getTimezoneOffset() / 60) * 2)\n                            - DataUtil.serverTimezoneOffset), false);\n                        return value.toJSON();\n                    }\n                }\n            }\n            return value;\n        }\n    };\n    /**\n     * @hidden\n     */\n    DataUtil.dateParse = {\n        addSelfOffset: function (input) {\n            return new Date(+input - (input.getTimezoneOffset() * 60000));\n        },\n        toUTC: function (input) {\n            return new Date(+input + (input.getTimezoneOffset() * 60000));\n        },\n        toTimeZone: function (input, offset, utc) {\n            if (offset === null) {\n                return input;\n            }\n            var unix = utc ? DataUtil.dateParse.toUTC(input) : input;\n            return new Date(+unix - (offset * 3600000));\n        },\n        toLocalTime: function (input) {\n            var datefn = input;\n            var timeZone = -datefn.getTimezoneOffset();\n            var differenceString = timeZone >= 0 ? '+' : '-';\n            var localtimefn = function (num) {\n                var norm = Math.floor(Math.abs(num));\n                return (norm < 10 ? '0' : '') + norm;\n            };\n            var val = datefn.getFullYear() + '-' + localtimefn(datefn.getMonth() + 1) + '-' + localtimefn(datefn.getDate()) +\n                'T' + localtimefn(datefn.getHours()) +\n                ':' + localtimefn(datefn.getMinutes()) +\n                ':' + localtimefn(datefn.getSeconds()) +\n                differenceString + localtimefn(timeZone / 60) +\n                ':' + localtimefn(timeZone % 60);\n            return val;\n        }\n    };\n    return DataUtil;\n}());\nexport { DataUtil };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { merge, extend, isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { DataUtil } from './util';\nimport { Query, Predicate } from './query';\nvar consts = { GroupGuid: '{271bbba0-1ee7}' };\n/**\n * Adaptors are specific data source type aware interfaces that are used by DataManager to communicate with DataSource.\n * This is the base adaptor class that other adaptors can extend.\n * @hidden\n */\nvar Adaptor = /** @class */ (function () {\n    /**\n     * Constructor for Adaptor class\n     * @param  {DataOptions} ds?\n     * @hidden\n     * @returns aggregates\n     */\n    function Adaptor(ds) {\n        // common options for all the adaptors \n        this.options = {\n            from: 'table',\n            requestType: 'json',\n            sortBy: 'sorted',\n            select: 'select',\n            skip: 'skip',\n            group: 'group',\n            take: 'take',\n            search: 'search',\n            count: 'requiresCounts',\n            where: 'where',\n            aggregates: 'aggregates',\n            expand: 'expand'\n        };\n        /**\n         * Specifies the type of adaptor.\n         * @default Adaptor\n         */\n        this.type = Adaptor;\n        this.dataSource = ds;\n        this.pvt = {};\n    }\n    /**\n     * Returns the data from the query processing.\n     * @param  {Object} data\n     * @param  {DataOptions} ds?\n     * @param  {Query} query?\n     * @param  {XMLHttpRequest} xhr?\n     * @returns Object\n     */\n    Adaptor.prototype.processResponse = function (data, ds, query, xhr) {\n        return data;\n    };\n    return Adaptor;\n}());\nexport { Adaptor };\n/**\n * JsonAdaptor is used to process JSON data. It contains methods to process the given JSON data based on the queries.\n * @hidden\n */\nvar JsonAdaptor = /** @class */ (function (_super) {\n    __extends(JsonAdaptor, _super);\n    function JsonAdaptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Process the JSON data based on the provided queries.\n     * @param  {DataManager} dataManager\n     * @param  {Query} query\n     * @returns Object\n     */\n    JsonAdaptor.prototype.processQuery = function (dataManager, query) {\n        var result = dataManager.dataSource.json.slice(0);\n        var count = result.length;\n        var countFlg = true;\n        var ret;\n        var key;\n        var lazyLoad = {};\n        var keyCount = 0;\n        var group = [];\n        var page;\n        for (var i = 0; i < query.lazyLoad.length; i++) {\n            keyCount++;\n            lazyLoad[query.lazyLoad[i].key] = query.lazyLoad[i].value;\n        }\n        var agg = {};\n        for (var i = 0; i < query.queries.length; i++) {\n            key = query.queries[i];\n            if ((key.fn === 'onPage' || key.fn === 'onGroup') && query.lazyLoad.length) {\n                if (key.fn === 'onGroup') {\n                    group.push(key.e);\n                }\n                if (key.fn === 'onPage') {\n                    page = key.e;\n                }\n                continue;\n            }\n            ret = this[key.fn].call(this, result, key.e, query);\n            if (key.fn === 'onAggregates') {\n                agg[key.e.field + ' - ' + key.e.type] = ret;\n            }\n            else {\n                result = ret !== undefined ? ret : result;\n            }\n            if (key.fn === 'onPage' || key.fn === 'onSkip' || key.fn === 'onTake' || key.fn === 'onRange') {\n                countFlg = false;\n            }\n            if (countFlg) {\n                count = result.length;\n            }\n        }\n        if (keyCount) {\n            var args = {\n                query: query, lazyLoad: lazyLoad, result: result, group: group, page: page\n            };\n            var lazyLoadData = this.lazyLoadGroup(args);\n            result = lazyLoadData.result;\n            count = lazyLoadData.count;\n        }\n        if (query.isCountRequired) {\n            result = {\n                result: result,\n                count: count,\n                aggregates: agg\n            };\n        }\n        return result;\n    };\n    /**\n     * Perform lazy load grouping in JSON array based on the given query and lazy load details.\n     * @param  {LazyLoadGroupArgs} args\n     */\n    JsonAdaptor.prototype.lazyLoadGroup = function (args) {\n        var count = 0;\n        var agg = this.getAggregate(args.query);\n        var result = args.result;\n        if (!isNullOrUndefined(args.lazyLoad.onDemandGroupInfo)) {\n            var req = args.lazyLoad.onDemandGroupInfo;\n            for (var i = req.where.length - 1; i >= 0; i--) {\n                result = this.onWhere(result, req.where[i]);\n            }\n            if (args.group.length !== req.level) {\n                var field = args.group[req.level].fieldName;\n                result = DataUtil.group(result, field, agg, null, null, args.group[0].comparer, true);\n            }\n            count = result.length;\n            var data = result;\n            result = result.slice(req.skip);\n            result = result.slice(0, req.take);\n            if (args.group.length !== req.level) {\n                this.formGroupResult(result, data);\n            }\n        }\n        else {\n            var field = args.group[0].fieldName;\n            result = DataUtil.group(result, field, agg, null, null, args.group[0].comparer, true);\n            count = result.length;\n            var data = result;\n            if (args.page) {\n                result = this.onPage(result, args.page, args.query);\n            }\n            this.formGroupResult(result, data);\n        }\n        return { result: result, count: count };\n    };\n    JsonAdaptor.prototype.formGroupResult = function (result, data) {\n        if (result.length && data.length) {\n            var uid = 'GroupGuid';\n            var childLevel = 'childLevels';\n            var level = 'level';\n            var records = 'records';\n            result[uid] = data[uid];\n            result[childLevel] = data[childLevel];\n            result[level] = data[level];\n            result[records] = data[records];\n        }\n        return result;\n    };\n    /**\n     * Separate the aggregate query from the given queries\n     * @param  {Query} query\n     */\n    JsonAdaptor.prototype.getAggregate = function (query) {\n        var aggQuery = Query.filterQueries(query.queries, 'onAggregates');\n        var agg = [];\n        if (aggQuery.length) {\n            var tmp = void 0;\n            for (var i = 0; i < aggQuery.length; i++) {\n                tmp = aggQuery[i].e;\n                agg.push({ type: tmp.type, field: DataUtil.getValue(tmp.field, query) });\n            }\n        }\n        return agg;\n    };\n    /**\n     * Performs batch update in the JSON array which add, remove and update records.\n     * @param  {DataManager} dm\n     * @param  {CrudOptions} changes\n     * @param  {RemoteArgs} e\n     */\n    JsonAdaptor.prototype.batchRequest = function (dm, changes, e) {\n        var i;\n        var deletedRecordsLen = changes.deletedRecords.length;\n        for (i = 0; i < changes.addedRecords.length; i++) {\n            this.insert(dm, changes.addedRecords[i]);\n        }\n        for (i = 0; i < changes.changedRecords.length; i++) {\n            this.update(dm, e.key, changes.changedRecords[i]);\n        }\n        for (i = 0; i < deletedRecordsLen; i++) {\n            this.remove(dm, e.key, changes.deletedRecords[i]);\n        }\n        return changes;\n    };\n    /**\n     * Performs filter operation with the given data and where query.\n     * @param  {Object[]} ds\n     * @param  {{validate:Function}} e\n     */\n    JsonAdaptor.prototype.onWhere = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return ds.filter(function (obj) {\n            if (e) {\n                return e.validate(obj);\n            }\n        });\n    };\n    /**\n     * Returns aggregate function based on the aggregate type.\n     * @param  {Object[]} ds\n     * @param  {{field:string} e\n     * @param  {string}} type\n     */\n    JsonAdaptor.prototype.onAggregates = function (ds, e) {\n        var fn = DataUtil.aggregates[e.type];\n        if (!ds || !fn || ds.length === 0) {\n            return null;\n        }\n        return fn(ds, e.field);\n    };\n    /**\n     * Performs search operation based on the given query.\n     * @param  {Object[]} ds\n     * @param  {QueryOptions} e\n     */\n    JsonAdaptor.prototype.onSearch = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        if (e.fieldNames.length === 0) {\n            DataUtil.getFieldList(ds[0], e.fieldNames);\n        }\n        return ds.filter(function (obj) {\n            for (var j = 0; j < e.fieldNames.length; j++) {\n                if (e.comparer.call(obj, DataUtil.getObject(e.fieldNames[j], obj), e.searchKey, e.ignoreCase, e.ignoreAccent)) {\n                    return true;\n                }\n            }\n            return false;\n        });\n    };\n    /**\n     * Sort the data with given direction and field.\n     * @param  {Object[]} ds\n     * @param  {{comparer:(a:Object} e\n     * @param  {Object} b\n     */\n    JsonAdaptor.prototype.onSortBy = function (ds, e, query) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        var fnCompare;\n        var field = DataUtil.getValue(e.fieldName, query);\n        if (!field) {\n            return ds.sort(e.comparer);\n        }\n        if (field instanceof Array) {\n            field = field.slice(0);\n            for (var i = field.length - 1; i >= 0; i--) {\n                if (!field[i]) {\n                    continue;\n                }\n                fnCompare = e.comparer;\n                if (DataUtil.endsWith(field[i], ' desc')) {\n                    fnCompare = DataUtil.fnSort('descending');\n                    field[i] = field[i].replace(' desc', '');\n                }\n                ds = DataUtil.sort(ds, field[i], fnCompare);\n            }\n            return ds;\n        }\n        return DataUtil.sort(ds, field, e.comparer);\n    };\n    /**\n     * Group the data based on the given query.\n     * @param  {Object[]} ds\n     * @param  {QueryOptions} e\n     * @param  {Query} query\n     */\n    JsonAdaptor.prototype.onGroup = function (ds, e, query) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        var agg = this.getAggregate(query);\n        return DataUtil.group(ds, DataUtil.getValue(e.fieldName, query), agg, null, null, e.comparer);\n    };\n    /**\n     * Retrieves records based on the given page index and size.\n     * @param  {Object[]} ds\n     * @param  {{pageSize:number} e\n     * @param  {number}} pageIndex\n     * @param  {Query} query\n     */\n    JsonAdaptor.prototype.onPage = function (ds, e, query) {\n        var size = DataUtil.getValue(e.pageSize, query);\n        var start = (DataUtil.getValue(e.pageIndex, query) - 1) * size;\n        var end = start + size;\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return ds.slice(start, end);\n    };\n    /**\n     * Retrieves records based on the given start and end index from query.\n     * @param  {Object[]} ds\n     * @param  {{start:number} e\n     * @param  {number}} end\n     */\n    JsonAdaptor.prototype.onRange = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return ds.slice(DataUtil.getValue(e.start), DataUtil.getValue(e.end));\n    };\n    /**\n     * Picks the given count of records from the top of the datasource.\n     * @param  {Object[]} ds\n     * @param  {{nos:number}} e\n     */\n    JsonAdaptor.prototype.onTake = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return ds.slice(0, DataUtil.getValue(e.nos));\n    };\n    /**\n     * Skips the given count of records from the data source.\n     * @param  {Object[]} ds\n     * @param  {{nos:number}} e\n     */\n    JsonAdaptor.prototype.onSkip = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return ds.slice(DataUtil.getValue(e.nos));\n    };\n    /**\n     * Selects specified columns from the data source.\n     * @param  {Object[]} ds\n     * @param  {{fieldNames:string}} e\n     */\n    JsonAdaptor.prototype.onSelect = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return DataUtil.select(ds, DataUtil.getValue(e.fieldNames));\n    };\n    /**\n     * Inserts new record in the table.\n     * @param  {DataManager} dm\n     * @param  {Object} data\n     * @param  {number} position\n     */\n    JsonAdaptor.prototype.insert = function (dm, data, tableName, query, position) {\n        if (isNullOrUndefined(position)) {\n            return dm.dataSource.json.push(data);\n        }\n        else {\n            return dm.dataSource.json.splice(position, 0, data);\n        }\n    };\n    /**\n     * Remove the data from the dataSource based on the key field value.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName?\n     * @returns null\n     */\n    JsonAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n        var ds = dm.dataSource.json;\n        var i;\n        if (typeof value === 'object' && !(value instanceof Date)) {\n            value = DataUtil.getObject(keyField, value);\n        }\n        for (i = 0; i < ds.length; i++) {\n            if (DataUtil.getObject(keyField, ds[i]) === value) {\n                break;\n            }\n        }\n        return i !== ds.length ? ds.splice(i, 1) : null;\n    };\n    /**\n     * Updates existing record and saves the changes to the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName?\n     * @returns null\n     */\n    JsonAdaptor.prototype.update = function (dm, keyField, value, tableName) {\n        var ds = dm.dataSource.json;\n        var i;\n        var key;\n        if (!isNullOrUndefined(keyField)) {\n            key = getValue(keyField, value);\n        }\n        for (i = 0; i < ds.length; i++) {\n            if (!isNullOrUndefined(keyField) && (getValue(keyField, ds[i])) === key) {\n                break;\n            }\n        }\n        return i < ds.length ? merge(ds[i], value) : null;\n    };\n    return JsonAdaptor;\n}(Adaptor));\nexport { JsonAdaptor };\n/**\n * URL Adaptor of DataManager can be used when you are required to use remote service to retrieve data.\n * It interacts with server-side for all DataManager Queries and CRUD operations.\n * @hidden\n */\nvar UrlAdaptor = /** @class */ (function (_super) {\n    __extends(UrlAdaptor, _super);\n    function UrlAdaptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Process the query to generate request body.\n     * @param  {DataManager} dm\n     * @param  {Query} query\n     * @param  {Object[]} hierarchyFilters?\n     * @returns p\n     */\n    // tslint:disable-next-line:max-func-body-length\n    UrlAdaptor.prototype.processQuery = function (dm, query, hierarchyFilters) {\n        var queries = this.getQueryRequest(query);\n        var singles = Query.filterQueryLists(query.queries, ['onSelect', 'onPage', 'onSkip', 'onTake', 'onRange']);\n        var params = query.params;\n        var url = dm.dataSource.url;\n        var temp;\n        var skip;\n        var take = null;\n        var options = this.options;\n        var request = { sorts: [], groups: [], filters: [], searches: [], aggregates: [] };\n        // calc Paging & Range\n        if ('onPage' in singles) {\n            temp = singles.onPage;\n            skip = DataUtil.getValue(temp.pageIndex, query);\n            take = DataUtil.getValue(temp.pageSize, query);\n            skip = (skip - 1) * take;\n        }\n        else if ('onRange' in singles) {\n            temp = singles.onRange;\n            skip = temp.start;\n            take = temp.end - temp.start;\n        }\n        // Sorting\n        for (var i = 0; i < queries.sorts.length; i++) {\n            temp = DataUtil.getValue(queries.sorts[i].e.fieldName, query);\n            request.sorts.push(DataUtil.callAdaptorFunction(this, 'onEachSort', { name: temp, direction: queries.sorts[i].e.direction }, query));\n        }\n        // hierarchy\n        if (hierarchyFilters) {\n            temp = this.getFiltersFrom(hierarchyFilters, query);\n            if (temp) {\n                request.filters.push(DataUtil.callAdaptorFunction(this, 'onEachWhere', temp.toJson(), query));\n            }\n        }\n        // Filters\n        for (var i = 0; i < queries.filters.length; i++) {\n            var res = DataUtil.callAdaptorFunction(this, 'onEachWhere', queries.filters[i].e.toJson(), query);\n            if ((this.getModuleName &&\n                this.getModuleName() === 'ODataV4Adaptor') &&\n                !isNullOrUndefined(queries.filters[i].e.key) && queries.filters.length > 1) {\n                res = \"(\" + res + \")\";\n            }\n            request.filters.push(res);\n            var keys_3 = typeof request.filters[i] === 'object' ? Object.keys(request.filters[i]) : [];\n            for (var _i = 0, keys_1 = keys_3; _i < keys_1.length; _i++) {\n                var prop = keys_1[_i];\n                if (DataUtil.isNull((request)[prop])) {\n                    delete request[prop];\n                }\n            }\n        }\n        // Searches\n        for (var i = 0; i < queries.searches.length; i++) {\n            temp = queries.searches[i].e;\n            request.searches.push(DataUtil.callAdaptorFunction(this, 'onEachSearch', {\n                fields: temp.fieldNames,\n                operator: temp.operator,\n                key: temp.searchKey,\n                ignoreCase: temp.ignoreCase\n            }, query));\n        }\n        // Grouping\n        for (var i = 0; i < queries.groups.length; i++) {\n            request.groups.push(DataUtil.getValue(queries.groups[i].e.fieldName, query));\n        }\n        // aggregates\n        for (var i = 0; i < queries.aggregates.length; i++) {\n            temp = queries.aggregates[i].e;\n            request.aggregates.push({ type: temp.type, field: DataUtil.getValue(temp.field, query) });\n        }\n        var req = {};\n        this.getRequestQuery(options, query, singles, request, req);\n        // Params\n        DataUtil.callAdaptorFunction(this, 'addParams', { dm: dm, query: query, params: params, reqParams: req });\n        if (query.lazyLoad.length) {\n            for (var i = 0; i < query.lazyLoad.length; i++) {\n                req[query.lazyLoad[i].key] = query.lazyLoad[i].value;\n            }\n        }\n        // cleanup\n        var keys = Object.keys(req);\n        for (var _a = 0, keys_2 = keys; _a < keys_2.length; _a++) {\n            var prop = keys_2[_a];\n            if (DataUtil.isNull(req[prop]) || req[prop] === '' || req[prop].length === 0) {\n                delete req[prop];\n            }\n        }\n        if (!(options.skip in req && options.take in req) && take !== null) {\n            req[options.skip] = DataUtil.callAdaptorFunction(this, 'onSkip', skip, query);\n            req[options.take] = DataUtil.callAdaptorFunction(this, 'onTake', take, query);\n        }\n        var p = this.pvt;\n        this.pvt = {};\n        if (this.options.requestType === 'json') {\n            return {\n                data: JSON.stringify(req, DataUtil.parse.jsonDateReplacer),\n                url: url,\n                pvtData: p,\n                type: 'POST',\n                contentType: 'application/json; charset=utf-8'\n            };\n        }\n        temp = this.convertToQueryString(req, query, dm);\n        temp = (dm.dataSource.url.indexOf('?') !== -1 ? '&' : '/') + temp;\n        return {\n            type: 'GET', url: temp.length ? url.replace(/\\/*$/, temp) : url, pvtData: p\n        };\n    };\n    UrlAdaptor.prototype.getRequestQuery = function (options, query, singles, request, request1) {\n        var param = 'param';\n        var req = request1;\n        req[options.from] = query.fromTable;\n        if (options.apply && query.distincts.length) {\n            req[options.apply] = 'onDistinct' in this ? DataUtil.callAdaptorFunction(this, 'onDistinct', query.distincts) : '';\n        }\n        if (!query.distincts.length && options.expand) {\n            req[options.expand] = 'onExpand' in this && 'onSelect' in singles ?\n                DataUtil.callAdaptorFunction(this, 'onExpand', { selects: DataUtil.getValue(singles.onSelect.fieldNames, query), expands: query.expands }, query) : query.expands;\n        }\n        req[options.select] = 'onSelect' in singles && !query.distincts.length ?\n            DataUtil.callAdaptorFunction(this, 'onSelect', DataUtil.getValue(singles.onSelect.fieldNames, query), query) : '';\n        req[options.count] = query.isCountRequired ? DataUtil.callAdaptorFunction(this, 'onCount', query.isCountRequired, query) : '';\n        req[options.search] = request.searches.length ? DataUtil.callAdaptorFunction(this, 'onSearch', request.searches, query) : '';\n        req[options.skip] = 'onSkip' in singles ?\n            DataUtil.callAdaptorFunction(this, 'onSkip', DataUtil.getValue(singles.onSkip.nos, query), query) : '';\n        req[options.take] = 'onTake' in singles ?\n            DataUtil.callAdaptorFunction(this, 'onTake', DataUtil.getValue(singles.onTake.nos, query), query) : '';\n        req[options.where] = request.filters.length || request.searches.length ?\n            DataUtil.callAdaptorFunction(this, 'onWhere', request.filters, query) : '';\n        req[options.sortBy] = request.sorts.length ? DataUtil.callAdaptorFunction(this, 'onSortBy', request.sorts, query) : '';\n        req[options.group] = request.groups.length ? DataUtil.callAdaptorFunction(this, 'onGroup', request.groups, query) : '';\n        req[options.aggregates] = request.aggregates.length ?\n            DataUtil.callAdaptorFunction(this, 'onAggregates', request.aggregates, query) : '';\n        req[param] = [];\n    };\n    /**\n     * Convert the object from processQuery to string which can be added query string.\n     * @param  {Object} req\n     * @param  {Query} query\n     * @param  {DataManager} dm\n     */\n    UrlAdaptor.prototype.convertToQueryString = function (request, query, dm) {\n        return '';\n        // this needs to be overridden\n    };\n    /**\n     * Return the data from the data manager processing.\n     * @param  {DataResult} data\n     * @param  {DataOptions} ds?\n     * @param  {Query} query?\n     * @param  {XMLHttpRequest} xhr?\n     * @param  {Object} request?\n     * @param  {CrudOptions} changes?\n     */\n    UrlAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n        if (xhr && xhr.getResponseHeader('Content-Type') &&\n            xhr.getResponseHeader('Content-Type').indexOf('application/json') !== -1) {\n            var handleTimeZone = DataUtil.timeZoneHandling;\n            if (ds && !ds.timeZoneHandling) {\n                DataUtil.timeZoneHandling = false;\n            }\n            data = DataUtil.parse.parseJson(data);\n            DataUtil.timeZoneHandling = handleTimeZone;\n        }\n        var requests = request;\n        var pvt = requests.pvtData || {};\n        var groupDs = data ? data.groupDs : [];\n        if (xhr && xhr.getResponseHeader('Content-Type') &&\n            xhr.getResponseHeader('Content-Type').indexOf('xml') !== -1) {\n            return (query.isCountRequired ? { result: [], count: 0 } : []);\n        }\n        var d = JSON.parse(requests.data);\n        if (d && d.action === 'batch' && data && data.addedRecords) {\n            changes.addedRecords = data.addedRecords;\n            return changes;\n        }\n        if (data && data.d) {\n            data = data.d;\n        }\n        var args = {};\n        if (data && 'count' in data) {\n            args.count = data.count;\n        }\n        args.result = data && data.result ? data.result : data;\n        var isExpand = false;\n        if (Array.isArray(data.result) && data.result.length) {\n            var key = 'key';\n            var val = 'value';\n            var level = 'level';\n            if (!isNullOrUndefined(data.result[0][key])) {\n                args.result = this.formRemoteGroupedData(args.result, 1, pvt.groups.length - 1);\n            }\n            if (query && query.lazyLoad.length && pvt.groups.length) {\n                for (var i = 0; i < query.lazyLoad.length; i++) {\n                    if (query.lazyLoad[i][key] === 'onDemandGroupInfo') {\n                        var value = query.lazyLoad[i][val][level];\n                        if (pvt.groups.length === value) {\n                            isExpand = true;\n                        }\n                    }\n                }\n            }\n        }\n        if (!isExpand) {\n            this.getAggregateResult(pvt, data, args, groupDs, query);\n        }\n        return DataUtil.isNull(args.count) ? args.result : { result: args.result, count: args.count, aggregates: args.aggregates };\n    };\n    UrlAdaptor.prototype.formRemoteGroupedData = function (data, level, childLevel) {\n        for (var i = 0; i < data.length; i++) {\n            if (data[i].items.length && Object.keys(data[i].items[0]).indexOf('key') > -1) {\n                this.formRemoteGroupedData(data[i].items, level + 1, childLevel - 1);\n            }\n        }\n        var uid = 'GroupGuid';\n        var childLvl = 'childLevels';\n        var lvl = 'level';\n        var records = 'records';\n        data[uid] = consts[uid];\n        data[lvl] = level;\n        data[childLvl] = childLevel;\n        data[records] = data[0].items.length ? this.getGroupedRecords(data, !isNullOrUndefined(data[0].items[records])) : [];\n        return data;\n    };\n    UrlAdaptor.prototype.getGroupedRecords = function (data, hasRecords) {\n        var childGroupedRecords = [];\n        var records = 'records';\n        for (var i = 0; i < data.length; i++) {\n            if (!hasRecords) {\n                for (var j = 0; j < data[i].items.length; j++) {\n                    childGroupedRecords.push(data[i].items[j]);\n                }\n            }\n            else {\n                childGroupedRecords = childGroupedRecords.concat(data[i].items[records]);\n            }\n        }\n        return childGroupedRecords;\n    };\n    /**\n     * Add the group query to the adaptor`s option.\n     * @param  {Object[]} e\n     * @returns void\n     */\n    UrlAdaptor.prototype.onGroup = function (e) {\n        this.pvt.groups = e;\n        return e;\n    };\n    /**\n     * Add the aggregate query to the adaptor`s option.\n     * @param  {Aggregates[]} e\n     * @returns void\n     */\n    UrlAdaptor.prototype.onAggregates = function (e) {\n        this.pvt.aggregates = e;\n    };\n    /**\n     * Prepare the request body based on the newly added, removed and updated records.\n     * The result is used by the batch request.\n     * @param  {DataManager} dm\n     * @param  {CrudOptions} changes\n     * @param  {Object} e\n     */\n    UrlAdaptor.prototype.batchRequest = function (dm, changes, e, query, original) {\n        var url;\n        var key;\n        return {\n            type: 'POST',\n            url: dm.dataSource.batchUrl || dm.dataSource.crudUrl || dm.dataSource.removeUrl || dm.dataSource.url,\n            contentType: 'application/json; charset=utf-8',\n            dataType: 'json',\n            data: JSON.stringify(extend({}, {\n                changed: changes.changedRecords,\n                added: changes.addedRecords,\n                deleted: changes.deletedRecords,\n                action: 'batch',\n                table: e[url],\n                key: e[key]\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    /**\n     * Method will trigger before send the request to server side.\n     * Used to set the custom header or modify the request options.\n     * @param  {DataManager} dm\n     * @param  {XMLHttpRequest} request\n     * @returns void\n     */\n    UrlAdaptor.prototype.beforeSend = function (dm, request) {\n        // need to extend this method\n    };\n    /**\n     * Prepare and returns request body which is used to insert a new record in the table.\n     * @param  {DataManager} dm\n     * @param  {Object} data\n     * @param  {string} tableName\n     */\n    UrlAdaptor.prototype.insert = function (dm, data, tableName, query) {\n        return {\n            url: dm.dataSource.insertUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify(extend({}, {\n                value: data,\n                table: tableName,\n                action: 'insert'\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    /**\n     * Prepare and return request body which is used to remove record from the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {number|string} value\n     * @param  {string} tableName\n     */\n    UrlAdaptor.prototype.remove = function (dm, keyField, value, tableName, query) {\n        return {\n            type: 'POST',\n            url: dm.dataSource.removeUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify(extend({}, {\n                key: value,\n                keyColumn: keyField,\n                table: tableName,\n                action: 'remove'\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    /**\n     * Prepare and return request body which is used to update record.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName\n     */\n    UrlAdaptor.prototype.update = function (dm, keyField, value, tableName, query) {\n        return {\n            type: 'POST',\n            url: dm.dataSource.updateUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify(extend({}, {\n                value: value,\n                action: 'update',\n                keyColumn: keyField,\n                key: DataUtil.getObject(keyField, value),\n                table: tableName\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    /**\n     * To generate the predicate based on the filtered query.\n     * @param  {Object[]|string[]|number[]} data\n     * @param  {Query} query\n     * @hidden\n     */\n    UrlAdaptor.prototype.getFiltersFrom = function (data, query) {\n        var key = query.fKey;\n        var value;\n        var prop = key;\n        var pKey = query.key;\n        var predicats = [];\n        if (typeof data[0] !== 'object') {\n            prop = null;\n        }\n        for (var i = 0; i < data.length; i++) {\n            if (typeof data[0] === 'object') {\n                value = DataUtil.getObject(pKey || prop, data[i]);\n            }\n            else {\n                value = data[i];\n            }\n            predicats.push(new Predicate(key, 'equal', value));\n        }\n        return Predicate.or(predicats);\n    };\n    UrlAdaptor.prototype.getAggregateResult = function (pvt, data, args, groupDs, query) {\n        var pData = data;\n        if (data && data.result) {\n            pData = data.result;\n        }\n        if (pvt && pvt.aggregates && pvt.aggregates.length) {\n            var agg = pvt.aggregates;\n            var fn = void 0;\n            var aggregateData = pData;\n            var res = {};\n            if (data.aggregate) {\n                aggregateData = data.aggregate;\n            }\n            for (var i = 0; i < agg.length; i++) {\n                fn = DataUtil.aggregates[agg[i].type];\n                if (fn) {\n                    res[agg[i].field + ' - ' + agg[i].type] = fn(aggregateData, agg[i].field);\n                }\n            }\n            args.aggregates = res;\n        }\n        var key = 'key';\n        var isServerGrouping = Array.isArray(data.result) && data.result.length && !isNullOrUndefined(data.result[0][key]);\n        if (pvt && pvt.groups && pvt.groups.length && !isServerGrouping) {\n            var groups = pvt.groups;\n            for (var i = 0; i < groups.length; i++) {\n                var level = null;\n                if (!isNullOrUndefined(groupDs)) {\n                    groupDs = DataUtil.group(groupDs, groups[i]);\n                }\n                var groupQuery = Query.filterQueries(query.queries, 'onGroup')[i].e;\n                pData = DataUtil.group(pData, groups[i], pvt.aggregates, level, groupDs, groupQuery.comparer);\n            }\n            args.result = pData;\n        }\n        return args;\n    };\n    UrlAdaptor.prototype.getQueryRequest = function (query) {\n        var req = { sorts: [], groups: [], filters: [], searches: [], aggregates: [] };\n        req.sorts = Query.filterQueries(query.queries, 'onSortBy');\n        req.groups = Query.filterQueries(query.queries, 'onGroup');\n        req.filters = Query.filterQueries(query.queries, 'onWhere');\n        req.searches = Query.filterQueries(query.queries, 'onSearch');\n        req.aggregates = Query.filterQueries(query.queries, 'onAggregates');\n        return req;\n    };\n    UrlAdaptor.prototype.addParams = function (options) {\n        var req = options.reqParams;\n        if (options.params.length) {\n            req.params = {};\n        }\n        for (var _i = 0, _a = options.params; _i < _a.length; _i++) {\n            var tmp = _a[_i];\n            if (req[tmp.key]) {\n                throw new Error('Query() - addParams: Custom Param is conflicting other request arguments');\n            }\n            req[tmp.key] = tmp.value;\n            if (tmp.fn) {\n                req[tmp.key] = tmp.fn.call(options.query, tmp.key, options.query, options.dm);\n            }\n            req.params[tmp.key] = req[tmp.key];\n        }\n    };\n    return UrlAdaptor;\n}(Adaptor));\nexport { UrlAdaptor };\n/**\n * OData Adaptor that is extended from URL Adaptor, is used for consuming data through OData Service.\n * @hidden\n */\nvar ODataAdaptor = /** @class */ (function (_super) {\n    __extends(ODataAdaptor, _super);\n    function ODataAdaptor(props) {\n        var _this = _super.call(this) || this;\n        // options replaced the default adaptor options\n        _this.options = extend({}, _this.options, {\n            requestType: 'get',\n            accept: 'application/json;odata=light;q=1,application/json;odata=verbose;q=0.5',\n            multipartAccept: 'multipart/mixed',\n            sortBy: '$orderby',\n            select: '$select',\n            skip: '$skip',\n            take: '$top',\n            count: '$inlinecount',\n            where: '$filter',\n            expand: '$expand',\n            batch: '$batch',\n            changeSet: '--changeset_',\n            batchPre: 'batch_',\n            contentId: 'Content-Id: ',\n            batchContent: 'Content-Type: multipart/mixed; boundary=',\n            changeSetContent: 'Content-Type: application/http\\nContent-Transfer-Encoding: binary ',\n            batchChangeSetContentType: 'Content-Type: application/json; charset=utf-8 ',\n            updateType: 'PUT'\n        });\n        extend(_this.options, props || {});\n        return _this;\n    }\n    ODataAdaptor.prototype.getModuleName = function () {\n        return 'ODataAdaptor';\n    };\n    /**\n     * Generate request string based on the filter criteria from query.\n     * @param  {Predicate} pred\n     * @param  {boolean} requiresCast?\n     */\n    ODataAdaptor.prototype.onPredicate = function (predicate, query, requiresCast) {\n        var returnValue = '';\n        var operator;\n        var guid;\n        var val = predicate.value;\n        var type = typeof val;\n        var field = predicate.field ? ODataAdaptor.getField(predicate.field) : null;\n        if (val instanceof Date) {\n            val = 'datetime\\'' + DataUtil.parse.replacer(val) + '\\'';\n        }\n        if (type === 'string') {\n            val = encodeURIComponent(val);\n            val = '\\'' + val + '\\'';\n            if (requiresCast) {\n                field = 'cast(' + field + ', \\'Edm.String\\')';\n            }\n            if (DataUtil.parse.isGuid(val)) {\n                guid = 'guid';\n            }\n            if (predicate.ignoreCase) {\n                if (!guid) {\n                    field = 'tolower(' + field + ')';\n                }\n                val = val.toLowerCase();\n            }\n        }\n        operator = DataUtil.odBiOperator[predicate.operator];\n        if (operator) {\n            returnValue += field;\n            returnValue += operator;\n            if (guid) {\n                returnValue += guid;\n            }\n            return returnValue + val;\n        }\n        if (!isNullOrUndefined(this.getModuleName) && this.getModuleName() === 'ODataV4Adaptor') {\n            operator = DataUtil.odv4UniOperator[predicate.operator];\n        }\n        else {\n            operator = DataUtil.odUniOperator[predicate.operator];\n        }\n        if (operator === 'substringof') {\n            var temp = val;\n            val = field;\n            field = temp;\n        }\n        returnValue += operator + '(';\n        returnValue += field + ',';\n        if (guid) {\n            returnValue += guid;\n        }\n        returnValue += val + ')';\n        return returnValue;\n    };\n    ODataAdaptor.prototype.addParams = function (options) {\n        _super.prototype.addParams.call(this, options);\n        delete options.reqParams.params;\n    };\n    /**\n     * Generate request string based on the multiple filter criteria from query.\n     * @param  {Predicate} pred\n     * @param  {boolean} requiresCast?\n     */\n    ODataAdaptor.prototype.onComplexPredicate = function (predicate, query, requiresCast) {\n        var res = [];\n        for (var i = 0; i < predicate.predicates.length; i++) {\n            res.push('(' + this.onEachWhere(predicate.predicates[i], query, requiresCast) + ')');\n        }\n        return res.join(' ' + predicate.condition + ' ');\n    };\n    /**\n     * Generate query string based on the multiple filter criteria from query.\n     * @param  {Predicate} filter\n     * @param  {boolean} requiresCast?\n     */\n    ODataAdaptor.prototype.onEachWhere = function (filter, query, requiresCast) {\n        return filter.isComplex ? this.onComplexPredicate(filter, query, requiresCast) : this.onPredicate(filter, query, requiresCast);\n    };\n    /**\n     * Generate query string based on the multiple filter criteria from query.\n     * @param  {string[]} filters\n     */\n    ODataAdaptor.prototype.onWhere = function (filters) {\n        if (this.pvt.search) {\n            filters.push(this.onEachWhere(this.pvt.search, null, true));\n        }\n        return filters.join(' and ');\n    };\n    /**\n     * Generate query string based on the multiple search criteria from query.\n     * @param  {{fields:string[]} e\n     * @param  {string} operator\n     * @param  {string} key\n     * @param  {boolean}} ignoreCase\n     */\n    ODataAdaptor.prototype.onEachSearch = function (e) {\n        if (e.fields && e.fields.length === 0) {\n            DataUtil.throwError('Query() - Search : oData search requires list of field names to search');\n        }\n        var filter = this.pvt.search || [];\n        for (var i = 0; i < e.fields.length; i++) {\n            filter.push(new Predicate(e.fields[i], e.operator, e.key, e.ignoreCase));\n        }\n        this.pvt.search = filter;\n    };\n    /**\n     * Generate query string based on the search criteria from query.\n     * @param  {Object} e\n     */\n    ODataAdaptor.prototype.onSearch = function (e) {\n        this.pvt.search = Predicate.or(this.pvt.search);\n        return '';\n    };\n    /**\n     * Generate query string based on multiple sort criteria from query.\n     * @param  {QueryOptions} e\n     */\n    ODataAdaptor.prototype.onEachSort = function (e) {\n        var res = [];\n        if (e.name instanceof Array) {\n            for (var i = 0; i < e.name.length; i++) {\n                res.push(ODataAdaptor.getField(e.name[i]) + (e.direction === 'descending' ? ' desc' : ''));\n            }\n        }\n        else {\n            res.push(ODataAdaptor.getField(e.name) + (e.direction === 'descending' ? ' desc' : ''));\n        }\n        return res.join(',');\n    };\n    /**\n     * Returns sort query string.\n     * @param  {string[]} e\n     */\n    ODataAdaptor.prototype.onSortBy = function (e) {\n        return e.reverse().join(',');\n    };\n    /**\n     * Adds the group query to the adaptor option.\n     * @param  {Object[]} e\n     * @returns string\n     */\n    ODataAdaptor.prototype.onGroup = function (e) {\n        this.pvt.groups = e;\n        return [];\n    };\n    /**\n     * Returns the select query string.\n     * @param  {string[]} e\n     */\n    ODataAdaptor.prototype.onSelect = function (e) {\n        for (var i = 0; i < e.length; i++) {\n            e[i] = ODataAdaptor.getField(e[i]);\n        }\n        return e.join(',');\n    };\n    /**\n     * Add the aggregate query to the adaptor option.\n     * @param  {Object[]} e\n     * @returns string\n     */\n    ODataAdaptor.prototype.onAggregates = function (e) {\n        this.pvt.aggregates = e;\n        return '';\n    };\n    /**\n     * Returns the query string which requests total count from the data source.\n     * @param  {boolean} e\n     * @returns string\n     */\n    ODataAdaptor.prototype.onCount = function (e) {\n        return e === true ? 'allpages' : '';\n    };\n    /**\n     * Method will trigger before send the request to server side.\n     * Used to set the custom header or modify the request options.\n     * @param  {DataManager} dm\n     * @param  {XMLHttpRequest} request\n     * @param  {Ajax} settings?\n     */\n    ODataAdaptor.prototype.beforeSend = function (dm, request, settings) {\n        if (DataUtil.endsWith(settings.url, this.options.batch) && settings.type.toLowerCase() === 'post') {\n            request.setRequestHeader('Accept', this.options.multipartAccept);\n            request.setRequestHeader('DataServiceVersion', '2.0');\n            request.overrideMimeType('text/plain; charset=x-user-defined');\n        }\n        else {\n            request.setRequestHeader('Accept', this.options.accept);\n        }\n        request.setRequestHeader('DataServiceVersion', '2.0');\n        request.setRequestHeader('MaxDataServiceVersion', '2.0');\n    };\n    /**\n     * Returns the data from the query processing.\n     * @param  {DataResult} data\n     * @param  {DataOptions} ds?\n     * @param  {Query} query?\n     * @param  {XMLHttpRequest} xhr?\n     * @param  {Ajax} request?\n     * @param  {CrudOptions} changes?\n     * @returns aggregateResult\n     */\n    ODataAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n        var metaCheck = 'odata.metadata';\n        if ((request && request.type === 'GET') && !this.rootUrl && data[metaCheck]) {\n            var dataUrls = data[metaCheck].split('/$metadata#');\n            this.rootUrl = dataUrls[0];\n            this.resourceTableName = dataUrls[1];\n        }\n        var pvtData = 'pvtData';\n        if (!isNullOrUndefined(data.d)) {\n            var dataCopy = ((query && query.isCountRequired) ? data.d.results : data.d);\n            var metaData = '__metadata';\n            if (!isNullOrUndefined(dataCopy)) {\n                for (var i = 0; i < dataCopy.length; i++) {\n                    if (!isNullOrUndefined(dataCopy[i][metaData])) {\n                        delete dataCopy[i][metaData];\n                    }\n                }\n            }\n        }\n        var pvt = request && request[pvtData];\n        var emptyAndBatch = this.processBatchResponse(data, query, xhr, request, changes);\n        if (emptyAndBatch) {\n            return emptyAndBatch;\n        }\n        var versionCheck = xhr && request.getResponseHeader('DataServiceVersion');\n        var count = null;\n        var version = (versionCheck && parseInt(versionCheck, 10)) || 2;\n        if (query && query.isCountRequired) {\n            var oDataCount = '__count';\n            if (data[oDataCount] || data['odata.count']) {\n                count = data[oDataCount] || data['odata.count'];\n            }\n            if (data.d) {\n                data = data.d;\n            }\n            if (data[oDataCount] || data['odata.count']) {\n                count = data[oDataCount] || data['odata.count'];\n            }\n        }\n        if (version === 3 && data.value) {\n            data = data.value;\n        }\n        if (data.d) {\n            data = data.d;\n        }\n        if (version < 3 && data.results) {\n            data = data.results;\n        }\n        var args = {};\n        args.count = count;\n        args.result = data;\n        this.getAggregateResult(pvt, data, args, null, query);\n        return DataUtil.isNull(count) ? args.result : { result: args.result, count: args.count, aggregates: args.aggregates };\n    };\n    /**\n     * Converts the request object to query string.\n     * @param  {Object} req\n     * @param  {Query} query\n     * @param  {DataManager} dm\n     * @returns tableName\n     */\n    ODataAdaptor.prototype.convertToQueryString = function (request, query, dm) {\n        var res = [];\n        var table = 'table';\n        var tableName = request[table] || '';\n        var format = '$format';\n        delete request[table];\n        if (dm.dataSource.requiresFormat) {\n            request[format] = 'json';\n        }\n        var keys = Object.keys(request);\n        for (var _i = 0, keys_4 = keys; _i < keys_4.length; _i++) {\n            var prop = keys_4[_i];\n            res.push(prop + '=' + request[prop]);\n        }\n        res = res.join('&');\n        if (dm.dataSource.url && dm.dataSource.url.indexOf('?') !== -1 && !tableName) {\n            return res;\n        }\n        return res.length ? tableName + '?' + res : tableName || '';\n    };\n    ODataAdaptor.prototype.localTimeReplacer = function (key, convertObj) {\n        for (var _i = 0, _a = !isNullOrUndefined(convertObj) ? Object.keys(convertObj) : []; _i < _a.length; _i++) {\n            var prop = _a[_i];\n            if ((convertObj[prop] instanceof Date)) {\n                convertObj[prop] = DataUtil.dateParse.toLocalTime(convertObj[prop]);\n            }\n        }\n        return convertObj;\n    };\n    /**\n     * Prepare and returns request body which is used to insert a new record in the table.\n     * @param  {DataManager} dm\n     * @param  {Object} data\n     * @param  {string} tableName?\n     */\n    ODataAdaptor.prototype.insert = function (dm, data, tableName) {\n        return {\n            url: (dm.dataSource.insertUrl || dm.dataSource.url).replace(/\\/*$/, tableName ? '/' + tableName : ''),\n            data: JSON.stringify(data, this.options.localTime ? this.localTimeReplacer : null)\n        };\n    };\n    /**\n     * Prepare and return request body which is used to remove record from the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {number} value\n     * @param  {string} tableName?\n     */\n    ODataAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n        var url;\n        if (typeof value === 'string' && !DataUtil.parse.isGuid(value)) {\n            url = \"('\" + value + \"')\";\n        }\n        else {\n            url = \"(\" + value + \")\";\n        }\n        return {\n            type: 'DELETE',\n            url: (dm.dataSource.removeUrl || dm.dataSource.url).replace(/\\/*$/, tableName ? '/' + tableName : '') + url\n        };\n    };\n    /**\n     * Updates existing record and saves the changes to the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName?\n     * @returns this\n     */\n    ODataAdaptor.prototype.update = function (dm, keyField, value, tableName, query, original) {\n        if (this.options.updateType === 'PATCH' && !isNullOrUndefined(original)) {\n            value = this.compareAndRemove(value, original, keyField);\n        }\n        var url;\n        if (typeof value[keyField] === 'string' && !DataUtil.parse.isGuid(value[keyField])) {\n            url = \"('\" + value[keyField] + \"')\";\n        }\n        else {\n            url = \"(\" + value[keyField] + \")\";\n        }\n        return {\n            type: this.options.updateType,\n            url: (dm.dataSource.updateUrl || dm.dataSource.url).replace(/\\/*$/, tableName ? '/' + tableName : '') + url,\n            data: JSON.stringify(value, this.options.localTime ? this.localTimeReplacer : null),\n            accept: this.options.accept\n        };\n    };\n    /**\n     * Prepare the request body based on the newly added, removed and updated records.\n     * The result is used by the batch request.\n     * @param  {DataManager} dm\n     * @param  {CrudOptions} changes\n     * @param  {RemoteArgs} e\n     * @returns {Object}\n     */\n    ODataAdaptor.prototype.batchRequest = function (dm, changes, e, query, original) {\n        var initialGuid = e.guid = DataUtil.getGuid(this.options.batchPre);\n        var url = this.rootUrl ? this.rootUrl + '/' + this.options.batch :\n            dm.dataSource.url.replace(/\\/*$/, '/' + this.options.batch);\n        e.url = this.resourceTableName ? this.resourceTableName : e.url;\n        var args = {\n            url: e.url,\n            key: e.key,\n            cid: 1,\n            cSet: DataUtil.getGuid(this.options.changeSet)\n        };\n        var req = '--' + initialGuid + '\\n';\n        req += 'Content-Type: multipart/mixed; boundary=' + args.cSet.replace('--', '') + '\\n';\n        this.pvt.changeSet = 0;\n        req += this.generateInsertRequest(changes.addedRecords, args, dm);\n        req += this.generateUpdateRequest(changes.changedRecords, args, dm, original ? original.changedRecords : []);\n        req += this.generateDeleteRequest(changes.deletedRecords, args, dm);\n        req += args.cSet + '--\\n';\n        req += '--' + initialGuid + '--';\n        return {\n            type: 'POST',\n            url: url,\n            dataType: 'json',\n            contentType: 'multipart/mixed; charset=UTF-8;boundary=' + initialGuid,\n            data: req\n        };\n    };\n    /**\n     * Generate the string content from the removed records.\n     * The result will be send during batch update.\n     * @param  {Object[]} arr\n     * @param  {RemoteArgs} e\n     * @returns this\n     */\n    ODataAdaptor.prototype.generateDeleteRequest = function (arr, e, dm) {\n        if (!arr) {\n            return '';\n        }\n        var req = '';\n        var stat = {\n            'method': 'DELETE ',\n            'url': function (data, i, key) {\n                var url = DataUtil.getObject(key, data[i]);\n                if (typeof url === 'number' || DataUtil.parse.isGuid(url)) {\n                    return '(' + url + ')';\n                }\n                else if (url instanceof Date) {\n                    var dateTime = data[i][key];\n                    return '(' + dateTime.toJSON() + ')';\n                }\n                else {\n                    return \"('\" + url + \"')\";\n                }\n            },\n            'data': function (data, i) { return ''; }\n        };\n        req = this.generateBodyContent(arr, e, stat, dm);\n        return req + '\\n';\n    };\n    /**\n     * Generate the string content from the inserted records.\n     * The result will be send during batch update.\n     * @param  {Object[]} arr\n     * @param  {RemoteArgs} e\n     */\n    ODataAdaptor.prototype.generateInsertRequest = function (arr, e, dm) {\n        if (!arr) {\n            return '';\n        }\n        var req = '';\n        var stat = {\n            'method': 'POST ',\n            'url': function (data, i, key) { return ''; },\n            'data': function (data, i) { return JSON.stringify(data[i]) + '\\n\\n'; }\n        };\n        req = this.generateBodyContent(arr, e, stat, dm);\n        return req;\n    };\n    /**\n     * Generate the string content from the updated records.\n     * The result will be send during batch update.\n     * @param  {Object[]} arr\n     * @param  {RemoteArgs} e\n     */\n    ODataAdaptor.prototype.generateUpdateRequest = function (arr, e, dm, org) {\n        var _this = this;\n        if (!arr) {\n            return '';\n        }\n        var req = '';\n        arr.forEach(function (change) { return change = _this.compareAndRemove(change, org.filter(function (o) { return DataUtil.getObject(e.key, o) === DataUtil.getObject(e.key, change); })[0], e.key); });\n        var stat = {\n            'method': this.options.updateType + ' ',\n            'url': function (data, i, key) {\n                if (typeof data[i][key] === 'number' || DataUtil.parse.isGuid(data[i][key])) {\n                    return '(' + data[i][key] + ')';\n                }\n                else if (data[i][key] instanceof Date) {\n                    var date = data[i][key];\n                    return '(' + date.toJSON() + ')';\n                }\n                else {\n                    return \"('\" + data[i][key] + \"')\";\n                }\n            },\n            'data': function (data, i) { return JSON.stringify(data[i]) + '\\n\\n'; }\n        };\n        req = this.generateBodyContent(arr, e, stat, dm);\n        return req;\n    };\n    ODataAdaptor.getField = function (prop) {\n        return prop.replace(/\\./g, '/');\n    };\n    ODataAdaptor.prototype.generateBodyContent = function (arr, e, stat, dm) {\n        var req = '';\n        for (var i = 0; i < arr.length; i++) {\n            req += '\\n' + e.cSet + '\\n';\n            req += this.options.changeSetContent + '\\n\\n';\n            req += stat.method;\n            if (stat.method === 'POST ') {\n                req += (dm.dataSource.insertUrl || dm.dataSource.crudUrl || e.url) + stat.url(arr, i, e.key) + ' HTTP/1.1\\n';\n            }\n            else if (stat.method === 'PUT ' || stat.method === 'PATCH ') {\n                req += (dm.dataSource.updateUrl || dm.dataSource.crudUrl || e.url) + stat.url(arr, i, e.key) + ' HTTP/1.1\\n';\n            }\n            else if (stat.method === 'DELETE ') {\n                req += (dm.dataSource.removeUrl || dm.dataSource.crudUrl || e.url) + stat.url(arr, i, e.key) + ' HTTP/1.1\\n';\n            }\n            req += 'Accept: ' + this.options.accept + '\\n';\n            req += 'Content-Id: ' + this.pvt.changeSet++ + '\\n';\n            req += this.options.batchChangeSetContentType + '\\n';\n            if (!isNullOrUndefined(arr[i]['@odata.etag'])) {\n                req += 'If-Match: ' + arr[i]['@odata.etag'] + '\\n\\n';\n                delete arr[i]['@odata.etag'];\n            }\n            else {\n                req += '\\n';\n            }\n            req += stat.data(arr, i);\n        }\n        return req;\n    };\n    ODataAdaptor.prototype.processBatchResponse = function (data, query, xhr, request, changes) {\n        if (xhr && xhr.getResponseHeader('Content-Type') && xhr.getResponseHeader('Content-Type').indexOf('xml') !== -1) {\n            return (query.isCountRequired ? { result: [], count: 0 } : []);\n        }\n        if (request && this.options.batch && DataUtil.endsWith(request.url, this.options.batch) && request.type.toLowerCase() === 'post') {\n            var guid = xhr.getResponseHeader('Content-Type');\n            var cIdx = void 0;\n            var jsonObj = void 0;\n            var d = data + '';\n            guid = guid.substring(guid.indexOf('=batchresponse') + 1);\n            d = d.split(guid);\n            if (d.length < 2) {\n                return {};\n            }\n            d = d[1];\n            var exVal = /(?:\\bContent-Type.+boundary=)(changesetresponse.+)/i.exec(d);\n            if (exVal) {\n                d.replace(exVal[0], '');\n            }\n            var changeGuid = exVal ? exVal[1] : '';\n            d = d.split(changeGuid);\n            for (var i = d.length; i > -1; i--) {\n                if (!/\\bContent-ID:/i.test(d[i]) || !/\\bHTTP.+201/.test(d[i])) {\n                    continue;\n                }\n                cIdx = parseInt(/\\bContent-ID: (\\d+)/i.exec(d[i])[1], 10);\n                if (changes.addedRecords[cIdx]) {\n                    jsonObj = DataUtil.parse.parseJson(/^\\{.+\\}/m.exec(d[i])[0]);\n                    extend({}, changes.addedRecords[cIdx], this.processResponse(jsonObj));\n                }\n            }\n            return changes;\n        }\n        return null;\n    };\n    ODataAdaptor.prototype.compareAndRemove = function (data, original, key) {\n        var _this = this;\n        if (isNullOrUndefined(original)) {\n            return data;\n        }\n        Object.keys(data).forEach(function (prop) {\n            if (prop !== key && prop !== '@odata.etag') {\n                if (DataUtil.isPlainObject(data[prop])) {\n                    _this.compareAndRemove(data[prop], original[prop]);\n                    var final = Object.keys(data[prop]).filter(function (data) { return data !== '@odata.etag'; });\n                    if (final.length === 0) {\n                        delete data[prop];\n                    }\n                }\n                else if (data[prop] === original[prop]) {\n                    delete data[prop];\n                }\n                else if (data[prop] && original[prop] && data[prop].valueOf() === original[prop].valueOf()) {\n                    delete data[prop];\n                }\n            }\n        });\n        return data;\n    };\n    return ODataAdaptor;\n}(UrlAdaptor));\nexport { ODataAdaptor };\n/**\n * The OData v4 is an improved version of OData protocols.\n * The DataManager uses the ODataV4Adaptor to consume OData v4 services.\n * @hidden\n */\nvar ODataV4Adaptor = /** @class */ (function (_super) {\n    __extends(ODataV4Adaptor, _super);\n    function ODataV4Adaptor(props) {\n        var _this = _super.call(this, props) || this;\n        // options replaced the default adaptor options\n        _this.options = extend({}, _this.options, {\n            requestType: 'get',\n            accept: 'application/json, text/javascript, */*; q=0.01',\n            multipartAccept: 'multipart/mixed',\n            sortBy: '$orderby',\n            select: '$select',\n            skip: '$skip',\n            take: '$top',\n            count: '$count',\n            search: '$search',\n            where: '$filter',\n            expand: '$expand',\n            batch: '$batch',\n            changeSet: '--changeset_',\n            batchPre: 'batch_',\n            contentId: 'Content-Id: ',\n            batchContent: 'Content-Type: multipart/mixed; boundary=',\n            changeSetContent: 'Content-Type: application/http\\nContent-Transfer-Encoding: binary ',\n            batchChangeSetContentType: 'Content-Type: application/json; charset=utf-8 ',\n            updateType: 'PATCH',\n            localTime: false,\n            apply: '$apply'\n        });\n        extend(_this.options, props || {});\n        return _this;\n    }\n    /**\n     * @hidden\n     */\n    ODataV4Adaptor.prototype.getModuleName = function () {\n        return 'ODataV4Adaptor';\n    };\n    /**\n     * Returns the query string which requests total count from the data source.\n     * @param  {boolean} e\n     * @returns string\n     */\n    ODataV4Adaptor.prototype.onCount = function (e) {\n        return e === true ? 'true' : '';\n    };\n    /**\n     * Generate request string based on the filter criteria from query.\n     * @param  {Predicate} pred\n     * @param  {boolean} requiresCast?\n     */\n    ODataV4Adaptor.prototype.onPredicate = function (predicate, query, requiresCast) {\n        var returnValue = '';\n        var val = predicate.value;\n        var isDate = val instanceof Date;\n        if (query instanceof Query) {\n            var queries = this.getQueryRequest(query);\n            for (var i = 0; i < queries.filters.length; i++) {\n                if (queries.filters[i].e.key === predicate.value) {\n                    requiresCast = true;\n                }\n            }\n        }\n        returnValue = _super.prototype.onPredicate.call(this, predicate, query, requiresCast);\n        if (isDate) {\n            returnValue = returnValue.replace(/datetime'(.*)'$/, '$1');\n        }\n        if (DataUtil.parse.isGuid(val)) {\n            returnValue = returnValue.replace('guid', '').replace(/'/g, '');\n        }\n        return returnValue;\n    };\n    /**\n     *  Generate query string based on the multiple search criteria from query.\n     * @param  {{fields:string[]} e\n     * @param  {string} operator\n     * @param  {string} key\n     * @param  {boolean}} ignoreCase\n     */\n    ODataV4Adaptor.prototype.onEachSearch = function (e) {\n        var search = this.pvt.searches || [];\n        search.push(e.key);\n        this.pvt.searches = search;\n    };\n    /**\n     *  Generate query string based on the search criteria from query.\n     * @param  {Object} e\n     */\n    ODataV4Adaptor.prototype.onSearch = function (e) {\n        return this.pvt.searches.join(' OR ');\n    };\n    /**\n     * Returns the expand query string.\n     * @param  {string} e\n     */\n    ODataV4Adaptor.prototype.onExpand = function (e) {\n        var _this = this;\n        var selected = {};\n        var expanded = {};\n        var expands = e.expands.slice();\n        var exArr = [];\n        var selects = e.selects.filter(function (item) { return item.indexOf('.') > -1; });\n        selects.forEach(function (select) {\n            var splits = select.split('.');\n            if (!(splits[0] in selected)) {\n                selected[splits[0]] = [];\n            }\n            selected[splits[0]].push(splits[1]);\n        });\n        //Auto expand from select query\n        Object.keys(selected).forEach(function (expand) {\n            if ((expands.indexOf(expand) === -1)) {\n                expands.push(expand);\n            }\n        });\n        expands.forEach(function (expand) {\n            expanded[expand] = expand in selected ? expand + \"(\" + _this.options.select + \"=\" + selected[expand].join(',') + \")\" : expand;\n        });\n        Object.keys(expanded).forEach(function (ex) { return exArr.push(expanded[ex]); });\n        return exArr.join(',');\n    };\n    /**\n     * Returns the groupby query string.\n     * @param  {string} e\n     */\n    ODataV4Adaptor.prototype.onDistinct = function (distinctFields) {\n        var fields = distinctFields.map(function (field) { return ODataAdaptor.getField(field); }).join(',');\n        return \"groupby((\" + fields + \"))\";\n    };\n    /**\n     * Returns the select query string.\n     * @param  {string[]} e\n     */\n    ODataV4Adaptor.prototype.onSelect = function (e) {\n        return _super.prototype.onSelect.call(this, e.filter(function (item) { return item.indexOf('.') === -1; }));\n    };\n    /**\n     * Method will trigger before send the request to server side.\n     * Used to set the custom header or modify the request options.\n     * @param  {DataManager} dm\n     * @param  {XMLHttpRequest} request\n     * @param  {Ajax} settings\n     * @returns void\n     */\n    ODataV4Adaptor.prototype.beforeSend = function (dm, request, settings) {\n        if (settings.type === 'POST' || settings.type === 'PUT' || settings.type === 'PATCH') {\n            request.setRequestHeader('Prefer', 'return=representation');\n        }\n        request.setRequestHeader('Accept', this.options.accept);\n    };\n    /**\n     * Returns the data from the query processing.\n     * @param  {DataResult} data\n     * @param  {DataOptions} ds?\n     * @param  {Query} query?\n     * @param  {XMLHttpRequest} xhr?\n     * @param  {Ajax} request?\n     * @param  {CrudOptions} changes?\n     * @returns aggregateResult\n     */\n    ODataV4Adaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n        var metaName = '@odata.context';\n        if ((request && request.type === 'GET') && !this.rootUrl && data[metaName]) {\n            var dataUrl = data[metaName].split('/$metadata#');\n            this.rootUrl = dataUrl[0];\n            this.resourceTableName = dataUrl[1];\n        }\n        var pvtData = 'pvtData';\n        var pvt = request && request[pvtData];\n        var emptyAndBatch = _super.prototype.processBatchResponse.call(this, data, query, xhr, request, changes);\n        if (emptyAndBatch) {\n            return emptyAndBatch;\n        }\n        var count = null;\n        var dataCount = '@odata.count';\n        if (query && query.isCountRequired) {\n            if (dataCount in data) {\n                count = data[dataCount];\n            }\n        }\n        data = !isNullOrUndefined(data.value) ? data.value : data;\n        var args = {};\n        args.count = count;\n        args.result = data;\n        this.getAggregateResult(pvt, data, args, null, query);\n        return DataUtil.isNull(count) ? args.result : { result: args.result, count: count, aggregates: args.aggregates };\n    };\n    return ODataV4Adaptor;\n}(ODataAdaptor));\nexport { ODataV4Adaptor };\n/**\n * The Web API is a programmatic interface to define the request and response messages system that is mostly exposed in JSON or XML.\n * The DataManager uses the WebApiAdaptor to consume Web API.\n * Since this adaptor is targeted to interact with Web API created using OData endpoint, it is extended from ODataAdaptor\n * @hidden\n */\nvar WebApiAdaptor = /** @class */ (function (_super) {\n    __extends(WebApiAdaptor, _super);\n    function WebApiAdaptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    WebApiAdaptor.prototype.getModuleName = function () {\n        return 'WebApiAdaptor';\n    };\n    /**\n     * Prepare and returns request body which is used to insert a new record in the table.\n     * @param  {DataManager} dm\n     * @param  {Object} data\n     * @param  {string} tableName?\n     */\n    WebApiAdaptor.prototype.insert = function (dm, data, tableName) {\n        return {\n            type: 'POST',\n            url: dm.dataSource.url,\n            data: JSON.stringify(data)\n        };\n    };\n    /**\n     * Prepare and return request body which is used to remove record from the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {number} value\n     * @param  {string} tableName?\n     */\n    WebApiAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n        return {\n            type: 'DELETE',\n            url: dm.dataSource.url + '/' + value,\n            data: JSON.stringify(value)\n        };\n    };\n    /**\n     * Prepare and return request body which is used to update record.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName?\n     */\n    WebApiAdaptor.prototype.update = function (dm, keyField, value, tableName) {\n        return {\n            type: 'PUT',\n            url: dm.dataSource.url,\n            data: JSON.stringify(value)\n        };\n    };\n    WebApiAdaptor.prototype.batchRequest = function (dm, changes, e) {\n        var _this = this;\n        var initialGuid = e.guid = DataUtil.getGuid(this.options.batchPre);\n        var url = dm.dataSource.url.replace(/\\/*$/, '/' + this.options.batch);\n        e.url = this.resourceTableName ? this.resourceTableName : e.url;\n        var req = [];\n        var _loop_1 = function (i, x) {\n            changes.addedRecords.forEach(function (j, d) {\n                var stat = {\n                    'method': 'POST ',\n                    'url': function (data, i, key) { return ''; },\n                    'data': function (data, i) { return JSON.stringify(data[i]) + '\\n\\n'; }\n                };\n                req.push('--' + initialGuid);\n                req.push('Content-Type: application/http; msgtype=request', '');\n                req.push('POST ' + '/api/' + (dm.dataSource.insertUrl || dm.dataSource.crudUrl || e.url)\n                    + stat.url(changes.addedRecords, i, e.key) + ' HTTP/1.1');\n                req.push('Content-Type: ' + 'application/json; charset=utf-8');\n                req.push('Host: ' + location.host);\n                req.push('', j ? JSON.stringify(j) : '');\n            });\n        };\n        //insertion\n        for (var i = 0, x = changes.addedRecords.length; i < x; i++) {\n            _loop_1(i, x);\n        }\n        var _loop_2 = function (i, x) {\n            changes.changedRecords.forEach(function (j, d) {\n                var stat = {\n                    'method': _this.options.updateType + ' ',\n                    'url': function (data, i, key) { return ''; },\n                    'data': function (data, i) { return JSON.stringify(data[i]) + '\\n\\n'; }\n                };\n                req.push('--' + initialGuid);\n                req.push('Content-Type: application/http; msgtype=request', '');\n                req.push('PUT ' + '/api/' + (dm.dataSource.updateUrl || dm.dataSource.crudUrl || e.url)\n                    + stat.url(changes.changedRecords, i, e.key) + ' HTTP/1.1');\n                req.push('Content-Type: ' + 'application/json; charset=utf-8');\n                req.push('Host: ' + location.host);\n                req.push('', j ? JSON.stringify(j) : '');\n            });\n        };\n        //updation \n        for (var i = 0, x = changes.changedRecords.length; i < x; i++) {\n            _loop_2(i, x);\n        }\n        var _loop_3 = function (i, x) {\n            changes.deletedRecords.forEach(function (j, d) {\n                var state = {\n                    'mtd': 'DELETE ',\n                    'url': function (data, i, key) {\n                        var url = DataUtil.getObject(key, data[i]);\n                        if (typeof url === 'number' || DataUtil.parse.isGuid(url)) {\n                            return '/' + url;\n                        }\n                        else if (url instanceof Date) {\n                            var datTime = data[i][key];\n                            return '/' + datTime.toJSON();\n                        }\n                        else {\n                            return \"/'\" + url + \"'\";\n                        }\n                    },\n                    'data': function (data, i) { return ''; }\n                };\n                req.push('--' + initialGuid);\n                req.push('Content-Type: application/http; msgtype=request', '');\n                req.push('DELETE ' + '/api/' + (dm.dataSource.removeUrl || dm.dataSource.crudUrl || e.url)\n                    + state.url(changes.deletedRecords, i, e.key) + ' HTTP/1.1');\n                req.push('Content-Type: ' + 'application/json; charset=utf-8');\n                req.push('Host: ' + location.host);\n                req.push('', j ? JSON.stringify(j) : '');\n            });\n        };\n        //deletion\n        for (var i = 0, x = changes.deletedRecords.length; i < x; i++) {\n            _loop_3(i, x);\n        }\n        req.push('--' + initialGuid + '--', '');\n        return {\n            type: 'POST',\n            url: url,\n            contentType: 'multipart/mixed; boundary=' + initialGuid,\n            data: req.join('\\r\\n')\n        };\n    };\n    /**\n     * Method will trigger before send the request to server side.\n     * Used to set the custom header or modify the request options.\n     * @param  {DataManager} dm\n     * @param  {XMLHttpRequest} request\n     * @param  {Ajax} settings\n     * @returns void\n     */\n    WebApiAdaptor.prototype.beforeSend = function (dm, request, settings) {\n        request.setRequestHeader('Accept', 'application/json, text/javascript, */*; q=0.01');\n    };\n    /**\n     * Returns the data from the query processing.\n     * @param  {DataResult} data\n     * @param  {DataOptions} ds?\n     * @param  {Query} query?\n     * @param  {XMLHttpRequest} xhr?\n     * @param  {Ajax} request?\n     * @param  {CrudOptions} changes?\n     * @returns aggregateResult\n     */\n    WebApiAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n        var pvtData = 'pvtData';\n        var pvt = request && request[pvtData];\n        var count = null;\n        var args = {};\n        if (request && request.type.toLowerCase() !== 'post') {\n            var versionCheck = xhr && request.getResponseHeader('DataServiceVersion');\n            var version = (versionCheck && parseInt(versionCheck, 10)) || 2;\n            if (query && query.isCountRequired) {\n                if (!DataUtil.isNull(data.Count)) {\n                    count = data.Count;\n                }\n            }\n            if (version < 3 && data.Items) {\n                data = data.Items;\n            }\n            args.count = count;\n            args.result = data;\n            this.getAggregateResult(pvt, data, args, null, query);\n        }\n        args.result = args.result || data;\n        return DataUtil.isNull(count) ? args.result : { result: args.result, count: args.count, aggregates: args.aggregates };\n    };\n    return WebApiAdaptor;\n}(ODataAdaptor));\nexport { WebApiAdaptor };\n/**\n * WebMethodAdaptor can be used by DataManager to interact with web method.\n * @hidden\n */\nvar WebMethodAdaptor = /** @class */ (function (_super) {\n    __extends(WebMethodAdaptor, _super);\n    function WebMethodAdaptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Prepare the request body based on the query.\n     * The query information can be accessed at the WebMethod using variable named `value`.\n     * @param  {DataManager} dm\n     * @param  {Query} query\n     * @param  {Object[]} hierarchyFilters?\n     * @returns application\n     */\n    WebMethodAdaptor.prototype.processQuery = function (dm, query, hierarchyFilters) {\n        var obj = new UrlAdaptor().processQuery(dm, query, hierarchyFilters);\n        var getData = 'data';\n        var data = DataUtil.parse.parseJson(obj[getData]);\n        var result = {};\n        var value = 'value';\n        if (data.param) {\n            for (var i = 0; i < data.param.length; i++) {\n                var param = data.param[i];\n                var key = Object.keys(param)[0];\n                result[key] = param[key];\n            }\n        }\n        result[value] = data;\n        var pvtData = 'pvtData';\n        var url = 'url';\n        return {\n            data: JSON.stringify(result),\n            url: obj[url],\n            pvtData: obj[pvtData],\n            type: 'POST',\n            contentType: 'application/json; charset=utf-8'\n        };\n    };\n    return WebMethodAdaptor;\n}(UrlAdaptor));\nexport { WebMethodAdaptor };\n/**\n * RemoteSaveAdaptor, extended from JsonAdaptor and it is used for binding local data and performs all DataManager queries in client-side.\n * It interacts with server-side only for CRUD operations.\n * @hidden\n */\nvar RemoteSaveAdaptor = /** @class */ (function (_super) {\n    __extends(RemoteSaveAdaptor, _super);\n    /**\n     * @hidden\n     */\n    function RemoteSaveAdaptor() {\n        var _this = _super.call(this) || this;\n        setValue('beforeSend', UrlAdaptor.prototype.beforeSend, _this);\n        return _this;\n    }\n    RemoteSaveAdaptor.prototype.insert = function (dm, data, tableName, query, position) {\n        this.pvt.position = position;\n        this.updateType = 'add';\n        return {\n            url: dm.dataSource.insertUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify(extend({}, {\n                value: data,\n                table: tableName,\n                action: 'insert'\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    RemoteSaveAdaptor.prototype.remove = function (dm, keyField, val, tableName, query) {\n        _super.prototype.remove.call(this, dm, keyField, val);\n        return {\n            type: 'POST',\n            url: dm.dataSource.removeUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify(extend({}, {\n                key: val,\n                keyColumn: keyField,\n                table: tableName,\n                action: 'remove'\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    RemoteSaveAdaptor.prototype.update = function (dm, keyField, val, tableName, query) {\n        this.updateType = 'update';\n        this.updateKey = keyField;\n        return {\n            type: 'POST',\n            url: dm.dataSource.updateUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify(extend({}, {\n                value: val,\n                action: 'update',\n                keyColumn: keyField,\n                key: val[keyField],\n                table: tableName\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    RemoteSaveAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes, e) {\n        var i;\n        var newData = request ? JSON.parse(request.data) : data;\n        data = newData.action === 'batch' ? DataUtil.parse.parseJson(data) : data;\n        if (this.updateType === 'add') {\n            _super.prototype.insert.call(this, ds, data, null, null, this.pvt.position);\n        }\n        if (this.updateType === 'update') {\n            _super.prototype.update.call(this, ds, this.updateKey, data);\n        }\n        this.updateType = undefined;\n        if (data.added) {\n            for (i = 0; i < data.added.length; i++) {\n                _super.prototype.insert.call(this, ds, data.added[i]);\n            }\n        }\n        if (data.changed) {\n            for (i = 0; i < data.changed.length; i++) {\n                _super.prototype.update.call(this, ds, e.key, data.changed[i]);\n            }\n        }\n        if (data.deleted) {\n            for (i = 0; i < data.deleted.length; i++) {\n                _super.prototype.remove.call(this, ds, e.key, data.deleted[i]);\n            }\n        }\n        return data;\n    };\n    /**\n     * Prepare the request body based on the newly added, removed and updated records.\n     * Also perform the changes in the locally cached data to sync with the remote data.\n     * The result is used by the batch request.\n     * @param  {DataManager} dm\n     * @param  {CrudOptions} changes\n     * @param  {RemoteArgs} e\n     */\n    RemoteSaveAdaptor.prototype.batchRequest = function (dm, changes, e, query, original) {\n        return {\n            type: 'POST',\n            url: dm.dataSource.batchUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            contentType: 'application/json; charset=utf-8',\n            dataType: 'json',\n            data: JSON.stringify(extend({}, {\n                changed: changes.changedRecords,\n                added: changes.addedRecords,\n                deleted: changes.deletedRecords,\n                action: 'batch',\n                table: e.url,\n                key: e.key\n            }, DataUtil.getAddParams(this, dm, query)))\n        };\n    };\n    RemoteSaveAdaptor.prototype.addParams = function (options) {\n        var urlParams = new UrlAdaptor();\n        urlParams.addParams(options);\n    };\n    return RemoteSaveAdaptor;\n}(JsonAdaptor));\nexport { RemoteSaveAdaptor };\n/**\n * Ajax Adaptor that is extended from URL Adaptor, is used for handle data operations with user defined functions.\n * @hidden\n */\nvar CustomDataAdaptor = /** @class */ (function (_super) {\n    __extends(CustomDataAdaptor, _super);\n    function CustomDataAdaptor(props) {\n        var _this = _super.call(this) || this;\n        // options replaced the default adaptor options\n        _this.options = extend({}, _this.options, {\n            getData: new Function(),\n            addRecord: new Function(),\n            updateRecord: new Function(),\n            deleteRecord: new Function(),\n            batchUpdate: new Function()\n        });\n        extend(_this.options, props || {});\n        return _this;\n    }\n    CustomDataAdaptor.prototype.getModuleName = function () {\n        return 'CustomDataAdaptor';\n    };\n    return CustomDataAdaptor;\n}(UrlAdaptor));\nexport { CustomDataAdaptor };\n/**\n * Cache Adaptor is used to cache the data of the visited pages. It prevents new requests for the previously visited pages.\n * You can configure cache page size and duration of caching by using cachingPageSize and timeTillExpiration properties of the DataManager\n * @hidden\n */\nvar CacheAdaptor = /** @class */ (function (_super) {\n    __extends(CacheAdaptor, _super);\n    /**\n     * Constructor for CacheAdaptor class.\n     * @param  {CacheAdaptor} adaptor?\n     * @param  {number} timeStamp?\n     * @param  {number} pageSize?\n     * @hidden\n     */\n    function CacheAdaptor(adaptor, timeStamp, pageSize) {\n        var _this = _super.call(this) || this;\n        _this.isCrudAction = false;\n        _this.isInsertAction = false;\n        if (!isNullOrUndefined(adaptor)) {\n            _this.cacheAdaptor = adaptor;\n        }\n        _this.pageSize = pageSize;\n        _this.guidId = DataUtil.getGuid('cacheAdaptor');\n        var obj = { keys: [], results: [] };\n        window.localStorage.setItem(_this.guidId, JSON.stringify(obj));\n        var guid = _this.guidId;\n        if (!isNullOrUndefined(timeStamp)) {\n            setInterval(function () {\n                var data;\n                data = DataUtil.parse.parseJson(window.localStorage.getItem(guid));\n                var forDel = [];\n                for (var i = 0; i < data.results.length; i++) {\n                    var currentTime = +new Date();\n                    var requestTime = +new Date(data.results[i].timeStamp);\n                    data.results[i].timeStamp = currentTime - requestTime;\n                    if (currentTime - requestTime > timeStamp) {\n                        forDel.push(i);\n                    }\n                }\n                for (var i = 0; i < forDel.length; i++) {\n                    data.results.splice(forDel[i], 1);\n                    data.keys.splice(forDel[i], 1);\n                }\n                window.localStorage.removeItem(guid);\n                window.localStorage.setItem(guid, JSON.stringify(data));\n            }, timeStamp);\n        }\n        return _this;\n    }\n    /**\n     * It will generate the key based on the URL when we send a request to server.\n     * @param  {string} url\n     * @param  {Query} query?\n     * @hidden\n     */\n    CacheAdaptor.prototype.generateKey = function (url, query) {\n        var queries = this.getQueryRequest(query);\n        var singles = Query.filterQueryLists(query.queries, ['onSelect', 'onPage', 'onSkip', 'onTake', 'onRange']);\n        var key = url;\n        var page = 'onPage';\n        if (page in singles) {\n            key += singles[page].pageIndex;\n        }\n        queries.sorts.forEach(function (obj) {\n            key += obj.e.direction + obj.e.fieldName;\n        });\n        queries.groups.forEach(function (obj) {\n            key += obj.e.fieldName;\n        });\n        queries.searches.forEach(function (obj) {\n            key += obj.e.searchKey;\n        });\n        for (var filter = 0; filter < queries.filters.length; filter++) {\n            var currentFilter = queries.filters[filter];\n            if (currentFilter.e.isComplex) {\n                var newQuery = query.clone();\n                newQuery.queries = [];\n                for (var i = 0; i < currentFilter.e.predicates.length; i++) {\n                    newQuery.queries.push({ fn: 'onWhere', e: currentFilter.e.predicates[i], filter: query.queries.filter });\n                }\n                key += currentFilter.e.condition + this.generateKey(url, newQuery);\n            }\n            else {\n                key += currentFilter.e.field + currentFilter.e.operator + currentFilter.e.value;\n            }\n        }\n        return key;\n    };\n    /**\n     * Process the query to generate request body.\n     * If the data is already cached, it will return the cached data.\n     * @param  {DataManager} dm\n     * @param  {Query} query?\n     * @param  {Object[]} hierarchyFilters?\n     */\n    CacheAdaptor.prototype.processQuery = function (dm, query, hierarchyFilters) {\n        var key = this.generateKey(dm.dataSource.url, query);\n        var cachedItems;\n        cachedItems = DataUtil.parse.parseJson(window.localStorage.getItem(this.guidId));\n        var data = cachedItems ? cachedItems.results[cachedItems.keys.indexOf(key)] : null;\n        if (data != null && !this.isCrudAction && !this.isInsertAction) {\n            return data;\n        }\n        this.isCrudAction = null;\n        this.isInsertAction = null;\n        return this.cacheAdaptor.processQuery.apply(this.cacheAdaptor, [].slice.call(arguments, 0));\n    };\n    /**\n     * Returns the data from the query processing.\n     * It will also cache the data for later usage.\n     * @param  {DataResult} data\n     * @param  {DataManager} ds?\n     * @param  {Query} query?\n     * @param  {XMLHttpRequest} xhr?\n     * @param  {Ajax} request?\n     * @param  {CrudOptions} changes?\n     */\n    CacheAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n        if (this.isInsertAction || (request && this.cacheAdaptor.options.batch &&\n            DataUtil.endsWith(request.url, this.cacheAdaptor.options.batch) && request.type.toLowerCase() === 'post')) {\n            return this.cacheAdaptor.processResponse(data, ds, query, xhr, request, changes);\n        }\n        data = this.cacheAdaptor.processResponse.apply(this.cacheAdaptor, [].slice.call(arguments, 0));\n        var key = query ? this.generateKey(ds.dataSource.url, query) : ds.dataSource.url;\n        var obj = {};\n        obj = DataUtil.parse.parseJson(window.localStorage.getItem(this.guidId));\n        var index = obj.keys.indexOf(key);\n        if (index !== -1) {\n            obj.results.splice(index, 1);\n            obj.keys.splice(index, 1);\n        }\n        obj.results[obj.keys.push(key) - 1] = { keys: key, result: data.result, timeStamp: new Date(), count: data.count };\n        while (obj.results.length > this.pageSize) {\n            obj.results.splice(0, 1);\n            obj.keys.splice(0, 1);\n        }\n        window.localStorage.setItem(this.guidId, JSON.stringify(obj));\n        return data;\n    };\n    /**\n     * Method will trigger before send the request to server side. Used to set the custom header or modify the request options.\n     * @param  {DataManager} dm\n     * @param  {XMLHttpRequest} request\n     * @param  {Ajax} settings?\n     */\n    CacheAdaptor.prototype.beforeSend = function (dm, request, settings) {\n        if (!isNullOrUndefined(this.cacheAdaptor.options.batch) && DataUtil.endsWith(settings.url, this.cacheAdaptor.options.batch)\n            && settings.type.toLowerCase() === 'post') {\n            request.setRequestHeader('Accept', this.cacheAdaptor.options.multipartAccept);\n        }\n        if (!dm.dataSource.crossDomain) {\n            request.setRequestHeader('Accept', this.cacheAdaptor.options.accept);\n        }\n    };\n    /**\n     * Updates existing record and saves the changes to the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName\n     */\n    CacheAdaptor.prototype.update = function (dm, keyField, value, tableName) {\n        this.isCrudAction = true;\n        return this.cacheAdaptor.update(dm, keyField, value, tableName);\n    };\n    /**\n     * Prepare and returns request body which is used to insert a new record in the table.\n     * @param  {DataManager} dm\n     * @param  {Object} data\n     * @param  {string} tableName?\n     */\n    CacheAdaptor.prototype.insert = function (dm, data, tableName) {\n        this.isInsertAction = true;\n        return this.cacheAdaptor.insert(dm, data, tableName);\n    };\n    /**\n     * Prepare and return request body which is used to remove record from the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName?\n     */\n    CacheAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n        this.isCrudAction = true;\n        return this.cacheAdaptor.remove(dm, keyField, value, tableName);\n    };\n    /**\n     * Prepare the request body based on the newly added, removed and updated records.\n     * The result is used by the batch request.\n     * @param  {DataManager} dm\n     * @param  {CrudOptions} changes\n     * @param  {RemoteArgs} e\n     */\n    CacheAdaptor.prototype.batchRequest = function (dm, changes, e) {\n        return this.cacheAdaptor.batchRequest(dm, changes, e);\n    };\n    return CacheAdaptor;\n}(UrlAdaptor));\nexport { CacheAdaptor };\n","import { Ajax } from '@syncfusion/ej2-base';\nimport { extend, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataUtil } from './util';\nimport { Query } from './query';\nimport { ODataAdaptor, JsonAdaptor, CacheAdaptor, RemoteSaveAdaptor, CustomDataAdaptor } from './adaptors';\n/**\n * DataManager is used to manage and manipulate relational data.\n */\nvar DataManager = /** @class */ (function () {\n    /**\n     * Constructor for DataManager class\n     * @param  {DataOptions|JSON[]} dataSource?\n     * @param  {Query} query?\n     * @param  {AdaptorOptions|string} adaptor?\n     * @hidden\n     */\n    function DataManager(dataSource, query, adaptor) {\n        var _this = this;\n        /** @hidden */\n        this.dateParse = true;\n        /** @hidden */\n        this.timeZoneHandling = true;\n        this.requests = [];\n        if (!dataSource && !this.dataSource) {\n            dataSource = [];\n        }\n        adaptor = adaptor || dataSource.adaptor;\n        if (dataSource && dataSource.timeZoneHandling === false) {\n            this.timeZoneHandling = dataSource.timeZoneHandling;\n        }\n        var data;\n        if (dataSource instanceof Array) {\n            data = {\n                json: dataSource,\n                offline: true\n            };\n        }\n        else if (typeof dataSource === 'object') {\n            if (!dataSource.json) {\n                dataSource.json = [];\n            }\n            data = {\n                url: dataSource.url,\n                insertUrl: dataSource.insertUrl,\n                removeUrl: dataSource.removeUrl,\n                updateUrl: dataSource.updateUrl,\n                crudUrl: dataSource.crudUrl,\n                batchUrl: dataSource.batchUrl,\n                json: dataSource.json,\n                headers: dataSource.headers,\n                accept: dataSource.accept,\n                data: dataSource.data,\n                timeTillExpiration: dataSource.timeTillExpiration,\n                cachingPageSize: dataSource.cachingPageSize,\n                enableCaching: dataSource.enableCaching,\n                requestType: dataSource.requestType,\n                key: dataSource.key,\n                crossDomain: dataSource.crossDomain,\n                jsonp: dataSource.jsonp,\n                dataType: dataSource.dataType,\n                offline: dataSource.offline !== undefined ? dataSource.offline\n                    : dataSource.adaptor instanceof RemoteSaveAdaptor || dataSource.adaptor instanceof CustomDataAdaptor ?\n                        false : dataSource.url ? false : true,\n                requiresFormat: dataSource.requiresFormat\n            };\n        }\n        else {\n            DataUtil.throwError('DataManager: Invalid arguments');\n        }\n        if (data.requiresFormat === undefined && !DataUtil.isCors()) {\n            data.requiresFormat = isNullOrUndefined(data.crossDomain) ? true : data.crossDomain;\n        }\n        if (data.dataType === undefined) {\n            data.dataType = 'json';\n        }\n        this.dataSource = data;\n        this.defaultQuery = query;\n        if (data.url && data.offline && !data.json.length) {\n            this.isDataAvailable = false;\n            this.adaptor = adaptor || new ODataAdaptor();\n            this.dataSource.offline = false;\n            this.ready = this.executeQuery(query || new Query());\n            this.ready.then(function (e) {\n                _this.dataSource.offline = true;\n                _this.isDataAvailable = true;\n                data.json = e.result;\n                _this.adaptor = new JsonAdaptor();\n            });\n        }\n        else {\n            this.adaptor = data.offline ? new JsonAdaptor() : new ODataAdaptor();\n        }\n        if (!data.jsonp && this.adaptor instanceof ODataAdaptor) {\n            data.jsonp = 'callback';\n        }\n        this.adaptor = adaptor || this.adaptor;\n        if (data.enableCaching) {\n            this.adaptor = new CacheAdaptor(this.adaptor, data.timeTillExpiration, data.cachingPageSize);\n        }\n        return this;\n    }\n    /**\n     * Overrides DataManager's default query with given query.\n     * @param  {Query} query - Defines the new default query.\n     */\n    DataManager.prototype.setDefaultQuery = function (query) {\n        this.defaultQuery = query;\n        return this;\n    };\n    /**\n     * Executes the given query with local data source.\n     * @param  {Query} query - Defines the query to retrieve data.\n     */\n    DataManager.prototype.executeLocal = function (query) {\n        if (!this.defaultQuery && !(query instanceof Query)) {\n            DataUtil.throwError('DataManager - executeLocal() : A query is required to execute');\n        }\n        if (!this.dataSource.json) {\n            DataUtil.throwError('DataManager - executeLocal() : Json data is required to execute');\n        }\n        query = query || this.defaultQuery;\n        var result = this.adaptor.processQuery(this, query);\n        if (query.subQuery) {\n            var from = query.subQuery.fromTable;\n            var lookup = query.subQuery.lookups;\n            var res = query.isCountRequired ? result.result :\n                result;\n            if (lookup && lookup instanceof Array) {\n                DataUtil.buildHierarchy(query.subQuery.fKey, from, res, lookup, query.subQuery.key);\n            }\n            for (var j = 0; j < res.length; j++) {\n                if (res[j][from] instanceof Array) {\n                    res[j] = extend({}, {}, res[j]);\n                    res[j][from] = this.adaptor.processResponse(query.subQuery.using(new DataManager(res[j][from].slice(0))).executeLocal(), this, query);\n                }\n            }\n        }\n        return this.adaptor.processResponse(result, this, query);\n    };\n    /**\n     * Executes the given query with either local or remote data source.\n     * It will be executed as asynchronously and returns Promise object which will be resolved or rejected after action completed.\n     * @param  {Query|Function} query - Defines the query to retrieve data.\n     * @param  {Function} done - Defines the callback function and triggers when the Promise is resolved.\n     * @param  {Function} fail - Defines the callback function and triggers when the Promise is rejected.\n     * @param  {Function} always - Defines the callback function and triggers when the Promise is resolved or rejected.\n     */\n    DataManager.prototype.executeQuery = function (query, done, fail, always) {\n        var _this = this;\n        var makeRequest = 'makeRequest';\n        if (typeof query === 'function') {\n            always = fail;\n            fail = done;\n            done = query;\n            query = null;\n        }\n        if (!query) {\n            query = this.defaultQuery;\n        }\n        if (!(query instanceof Query)) {\n            DataUtil.throwError('DataManager - executeQuery() : A query is required to execute');\n        }\n        var deffered = new Deferred();\n        var args = { query: query };\n        if (!this.dataSource.offline && (this.dataSource.url !== undefined && this.dataSource.url !== '')\n            || (!isNullOrUndefined(this.adaptor[makeRequest])) || this.isCustomDataAdaptor(this.adaptor)) {\n            var result = this.adaptor.processQuery(this, query);\n            if (!isNullOrUndefined(this.adaptor[makeRequest])) {\n                this.adaptor[makeRequest](result, deffered, args, query);\n            }\n            else if (!isNullOrUndefined(result.url) || this.isCustomDataAdaptor(this.adaptor)) {\n                this.makeRequest(result, deffered, args, query);\n            }\n            else {\n                args = DataManager.getDeferedArgs(query, result, args);\n                deffered.resolve(args);\n            }\n        }\n        else {\n            DataManager.nextTick(function () {\n                var res = _this.executeLocal(query);\n                args = DataManager.getDeferedArgs(query, res, args);\n                deffered.resolve(args);\n            });\n        }\n        if (done || fail) {\n            deffered.promise.then(done, fail);\n        }\n        if (always) {\n            deffered.promise.then(always, always);\n        }\n        return deffered.promise;\n    };\n    DataManager.getDeferedArgs = function (query, result, args) {\n        if (query.isCountRequired) {\n            args.result = result.result;\n            args.count = result.count;\n            args.aggregates = result.aggregates;\n        }\n        else {\n            args.result = result;\n        }\n        return args;\n    };\n    DataManager.nextTick = function (fn) {\n        (window.setImmediate || window.setTimeout)(fn, 0);\n    };\n    DataManager.prototype.extendRequest = function (url, fnSuccess, fnFail) {\n        return extend({}, {\n            type: 'GET',\n            dataType: this.dataSource.dataType,\n            crossDomain: this.dataSource.crossDomain,\n            jsonp: this.dataSource.jsonp,\n            cache: true,\n            processData: false,\n            onSuccess: fnSuccess,\n            onFailure: fnFail\n        }, url);\n    };\n    // tslint:disable-next-line:max-func-body-length\n    DataManager.prototype.makeRequest = function (url, deffered, args, query) {\n        var _this = this;\n        var isSelector = !!query.subQuerySelector;\n        var fnFail = function (e) {\n            args.error = e;\n            deffered.reject(args);\n        };\n        var process = function (data, count, xhr, request, actual, aggregates, virtualSelectRecords) {\n            args.xhr = xhr;\n            args.count = count ? parseInt(count.toString(), 10) : 0;\n            args.result = data;\n            args.request = request;\n            args.aggregates = aggregates;\n            args.actual = actual;\n            args.virtualSelectRecords = virtualSelectRecords;\n            deffered.resolve(args);\n        };\n        var fnQueryChild = function (data, selector) {\n            var subDeffer = new Deferred();\n            var childArgs = { parent: args };\n            query.subQuery.isChild = true;\n            var subUrl = _this.adaptor.processQuery(_this, query.subQuery, data ? _this.adaptor.processResponse(data) : selector);\n            var childReq = _this.makeRequest(subUrl, subDeffer, childArgs, query.subQuery);\n            if (!isSelector) {\n                subDeffer.then(function (subData) {\n                    if (data) {\n                        DataUtil.buildHierarchy(query.subQuery.fKey, query.subQuery.fromTable, data, subData, query.subQuery.key);\n                        process(data, subData.count, subData.xhr);\n                    }\n                }, fnFail);\n            }\n            return childReq;\n        };\n        var fnSuccess = function (data, request) {\n            if (_this.isCustomDataAdaptor(_this.adaptor)) {\n                request = extend({}, _this.ajaxReqOption, request);\n            }\n            if (request.httpRequest.getResponseHeader('Content-Type').indexOf('xml') === -1 && _this.dateParse) {\n                data = DataUtil.parse.parseJson(data);\n            }\n            var result = _this.adaptor.processResponse(data, _this, query, request.httpRequest, request);\n            var count = 0;\n            var aggregates = null;\n            var virtualSelectRecords = 'virtualSelectRecords';\n            var virtualRecords = data[virtualSelectRecords];\n            if (query.isCountRequired) {\n                count = result.count;\n                aggregates = result.aggregates;\n                result = result.result;\n            }\n            if (!query.subQuery) {\n                process(result, count, request.httpRequest, request.type, data, aggregates, virtualRecords);\n                return;\n            }\n            if (!isSelector) {\n                fnQueryChild(result, request);\n            }\n        };\n        var req = this.extendRequest(url, fnSuccess, fnFail);\n        if (!this.isCustomDataAdaptor(this.adaptor)) {\n            var ajax_1 = new Ajax(req);\n            ajax_1.beforeSend = function () {\n                _this.beforeSend(ajax_1.httpRequest, ajax_1);\n            };\n            req = ajax_1.send();\n            req.catch(function (e) { return true; }); // to handle failure remote requests.        \n            this.requests.push(ajax_1);\n        }\n        else {\n            this.ajaxReqOption = req;\n            var request = req;\n            this.adaptor.options.getData({\n                data: request.data,\n                onSuccess: request.onSuccess, onFailure: request.onFailure\n            });\n        }\n        if (isSelector) {\n            var promise = void 0;\n            var res = query.subQuerySelector.call(this, { query: query.subQuery, parent: query });\n            if (res && res.length) {\n                promise = Promise.all([req, fnQueryChild(null, res)]);\n                promise.then(function () {\n                    var args = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        args[_i] = arguments[_i];\n                    }\n                    var result = args[0];\n                    var pResult = _this.adaptor.processResponse(result[0], _this, query, _this.requests[0].httpRequest, _this.requests[0]);\n                    var count = 0;\n                    if (query.isCountRequired) {\n                        count = pResult.count;\n                        pResult = pResult.result;\n                    }\n                    var cResult = _this.adaptor.processResponse(result[1], _this, query.subQuery, _this.requests[1].httpRequest, _this.requests[1]);\n                    count = 0;\n                    if (query.subQuery.isCountRequired) {\n                        count = cResult.count;\n                        cResult = cResult.result;\n                    }\n                    DataUtil.buildHierarchy(query.subQuery.fKey, query.subQuery.fromTable, pResult, cResult, query.subQuery.key);\n                    isSelector = false;\n                    process(pResult, count, _this.requests[0].httpRequest);\n                });\n            }\n            else {\n                isSelector = false;\n            }\n        }\n        return req;\n    };\n    DataManager.prototype.beforeSend = function (request, settings) {\n        this.adaptor.beforeSend(this, request, settings);\n        var headers = this.dataSource.headers;\n        var props;\n        for (var i = 0; headers && i < headers.length; i++) {\n            props = [];\n            var keys = Object.keys(headers[i]);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var prop = keys_1[_i];\n                props.push(prop);\n                request.setRequestHeader(prop, headers[i][prop]);\n            }\n        }\n    };\n    /**\n     * Save bulk changes to the given table name.\n     * User can add a new record, edit an existing record, and delete a record at the same time.\n     * If the datasource from remote, then updated in a single post.\n     * @param  {Object} changes - Defines the CrudOptions.\n     * @param  {string} key - Defines the column field.\n     * @param  {string|Query} tableName - Defines the table name.\n     * @param  {Query} query - Sets default query for the DataManager.\n     */\n    DataManager.prototype.saveChanges = function (changes, key, tableName, query, original) {\n        var _this = this;\n        if (tableName instanceof Query) {\n            query = tableName;\n            tableName = null;\n        }\n        var args = {\n            url: tableName,\n            key: key || this.dataSource.key\n        };\n        var req = this.adaptor.batchRequest(this, changes, args, query || new Query(), original);\n        var doAjaxRequest = 'doAjaxRequest';\n        if (this.dataSource.offline) {\n            return req;\n        }\n        if (!isNullOrUndefined(this.adaptor[doAjaxRequest])) {\n            return this.adaptor[doAjaxRequest](req);\n        }\n        else if (!this.isCustomDataAdaptor(this.adaptor)) {\n            var deff_1 = new Deferred();\n            var ajax_2 = new Ajax(req);\n            ajax_2.beforeSend = function () {\n                _this.beforeSend(ajax_2.httpRequest, ajax_2);\n            };\n            ajax_2.onSuccess = function (data, request) {\n                deff_1.resolve(_this.adaptor.processResponse(data, _this, null, request.httpRequest, request, changes, args));\n            };\n            ajax_2.onFailure = function (e) {\n                deff_1.reject([{ error: e }]);\n            };\n            ajax_2.send().catch(function (e) { return true; }); // to handle the failure requests.        \n            return deff_1.promise;\n        }\n        else {\n            return this.doAjaxRequest(req, this.adaptor.options.batchUpdate);\n        }\n    };\n    /**\n     * Inserts new record in the given table.\n     * @param  {Object} data - Defines the data to insert.\n     * @param  {string|Query} tableName - Defines the table name.\n     * @param  {Query} query - Sets default query for the DataManager.\n     */\n    DataManager.prototype.insert = function (data, tableName, query, position) {\n        if (tableName instanceof Query) {\n            query = tableName;\n            tableName = null;\n        }\n        var req = this.adaptor.insert(this, data, tableName, query, position);\n        var doAjaxRequest = 'doAjaxRequest';\n        if (this.dataSource.offline) {\n            return req;\n        }\n        if (!isNullOrUndefined(this.adaptor[doAjaxRequest])) {\n            return this.adaptor[doAjaxRequest](req);\n        }\n        else {\n            return this.doAjaxRequest(req, this.adaptor.options.addRecord);\n        }\n    };\n    /**\n     * Removes data from the table with the given key.\n     * @param  {string} keyField - Defines the column field.\n     * @param  {Object} value - Defines the value to find the data in the specified column.\n     * @param  {string|Query} tableName - Defines the table name\n     * @param  {Query} query - Sets default query for the DataManager.\n     */\n    DataManager.prototype.remove = function (keyField, value, tableName, query) {\n        if (typeof value === 'object') {\n            value = DataUtil.getObject(keyField, value);\n        }\n        if (tableName instanceof Query) {\n            query = tableName;\n            tableName = null;\n        }\n        var res = this.adaptor.remove(this, keyField, value, tableName, query);\n        var doAjaxRequest = 'doAjaxRequest';\n        if (this.dataSource.offline) {\n            return res;\n        }\n        if (!isNullOrUndefined(this.adaptor[doAjaxRequest])) {\n            return this.adaptor[doAjaxRequest](res);\n        }\n        else {\n            var remove = this.adaptor.options.deleteRecord;\n            return this.doAjaxRequest(res, remove);\n        }\n    };\n    /**\n     * Updates existing record in the given table.\n     * @param  {string} keyField - Defines the column field.\n     * @param  {Object} value - Defines the value to find the data in the specified column.\n     * @param  {string|Query} tableName - Defines the table name\n     * @param  {Query} query - Sets default query for the DataManager.\n     */\n    DataManager.prototype.update = function (keyField, value, tableName, query, original) {\n        if (tableName instanceof Query) {\n            query = tableName;\n            tableName = null;\n        }\n        var res = this.adaptor.update(this, keyField, value, tableName, query, original);\n        var doAjaxRequest = 'doAjaxRequest';\n        if (this.dataSource.offline) {\n            return res;\n        }\n        if (!isNullOrUndefined(this.adaptor[doAjaxRequest])) {\n            return this.adaptor[doAjaxRequest](res);\n        }\n        else {\n            var update = this.adaptor.options.updateRecord;\n            return this.doAjaxRequest(res, update);\n        }\n    };\n    DataManager.prototype.isCustomDataAdaptor = function (dataSource) {\n        return this.adaptor.getModuleName &&\n            this.adaptor.getModuleName() === 'CustomDataAdaptor';\n    };\n    DataManager.prototype.successFunc = function (record, request) {\n        if (this.isCustomDataAdaptor(this.adaptor)) {\n            request = extend({}, this.ajaxReqOption, request);\n        }\n        try {\n            DataUtil.parse.parseJson(record);\n        }\n        catch (e) {\n            record = [];\n        }\n        record = this.adaptor.processResponse(DataUtil.parse.parseJson(record), this, null, request.httpRequest, request);\n        this.ajaxDeffered.resolve(record);\n    };\n    ;\n    DataManager.prototype.failureFunc = function (e) {\n        this.ajaxDeffered.reject([{ error: e }]);\n    };\n    ;\n    DataManager.prototype.doAjaxRequest = function (res, ajaxFunc) {\n        var _this = this;\n        res = extend({}, {\n            type: 'POST',\n            contentType: 'application/json; charset=utf-8',\n            processData: false\n        }, res);\n        this.ajaxDeffered = new Deferred();\n        if (!this.isCustomDataAdaptor(this.adaptor)) {\n            var ajax_3 = new Ajax(res);\n            ajax_3.beforeSend = function () {\n                _this.beforeSend(ajax_3.httpRequest, ajax_3);\n            };\n            ajax_3.onSuccess = this.successFunc.bind(this);\n            ajax_3.onFailure = this.failureFunc.bind(this);\n            ajax_3.send().catch(function (e) { return true; }); // to handle the failure requests.\n        }\n        else {\n            this.ajaxReqOption = res;\n            ajaxFunc.call(this, {\n                data: res.data, onSuccess: this.successFunc.bind(this),\n                onFailure: this.failureFunc.bind(this)\n            });\n        }\n        return this.ajaxDeffered.promise;\n    };\n    return DataManager;\n}());\nexport { DataManager };\n/**\n * Deferred is used to handle asynchronous operation.\n */\nvar Deferred = /** @class */ (function () {\n    function Deferred() {\n        var _this = this;\n        /**\n         * Promise is an object that represents a value that may not be available yet, but will be resolved at some point in the future.\n         */\n        this.promise = new Promise(function (resolve, reject) {\n            _this.resolve = resolve;\n            _this.reject = reject;\n        });\n        /**\n         * Defines the callback function triggers when the Deferred object is resolved.\n         */\n        this.then = this.promise.then.bind(this.promise);\n        /**\n         * Defines the callback function triggers when the Deferred object is rejected.\n         */\n        this.catch = this.promise.catch.bind(this.promise);\n    }\n    return Deferred;\n}());\nexport { Deferred };\n"],"names":["Query","from","this","subQuery","isChild","distincts","queries","key","fKey","fromTable","Array","lookups","expands","sortedColumns","groupedColumns","params","lazyLoad","prototype","setKey","field","using","dataManager","execute","done","fail","always","executeQuery","DataUtil","throwError","executeLocal","clone","cloned","slice","subQuerySelector","isCountRequired","tableName","addParams","value","push","fn","distinct","fields","call","expand","tables","where","fieldName","operator","ignoreCase","ignoreAccent","toLowerCase","predicate","Predicate","e","search","searchKey","fieldNames","comparer","fnOperators","sortBy","isFromGroup","sortByForeignKey","direction","sorts","temp","order","isNullOrUndefined","endsWith","replace","fnSort","filterQueries","i","length","j","sortByDesc","group","format","page","pageIndex","pageSize","range","start","end","take","nos","skip","select","hierarchy","query","selectorFn","foreignKey","requiresCount","aggregate","type","name","filter","q","filterQueryLists","singles","filtered","indexOf","res","isComplex","processOperator","condition","predicates","apply","and","args","_i","arguments","combinePredicates","combine","or","fromJson","json","len","fromJSONData","pred","validate","record","isAnd","ret","getObject","toJson","p","preds","consts","GroupGuid","getValue","inst","input","substr","startsWith","fnAscending","fnDescending","x","y","undefined","localeCompare","extractFields","obj","newObj","setValue","jsonArray","newData","aggregates","level","groupDs","isLazyLoad","jsonData","this_1","items","count","indx","childLevels","grouped","groupedArray","records","this_2","val","getVal","tempObj","aggs","buildHierarchy","source","lookup","pKey","grp","result","fKeyData","getFieldList","prefix","copyObj","keys_1","Object","keys","prop","nameSpace","splits","split","toString","fromObj","sort","ds","middle","parseInt","left","right","merge","ignoreDiacritics","map","diacritics","join","current","shift","array","index","callAdaptorFunction","adaptor","fnName","param1","param2","getAddParams","adp","dm","req","reqParams","isPlainObject","constructor","isCors","xhr","window","getGuid","rand","crypto","arr","Uint8Array","getRandomValues","Math","random","isNull","getItemFromComparer","keyVal","castRequired","requiresCompleteRecord","tmp","forEach","data","serverTimezoneOffset","timeZoneHandling","error","Error","message","stack","sum","isNaN","average","min","max","truecount","DataManager","falsecount","operatorSymbols","<",">","<=",">=","==","!=","*=","$=","^=","odBiOperator","lessthan","lessthanorequal","greaterthan","greaterthanorequal","equal","notequal","odUniOperator","endswith","startswith","contains","odv4UniOperator","Ⓐ","Ａ","À","Á","Â","Ầ","Ấ","Ẫ","Ẩ","Ã","Ā","Ă","Ằ","Ắ","Ẵ","Ẳ","Ȧ","Ǡ","Ä","Ǟ","Ả","Å","Ǻ","Ǎ","Ȁ","Ȃ","Ạ","Ậ","Ặ","Ḁ","Ą","Ⱥ","Ɐ","Ꜳ","Æ","Ǽ","Ǣ","Ꜵ","Ꜷ","Ꜹ","Ꜻ","Ꜽ","Ⓑ","Ｂ","Ḃ","Ḅ","Ḇ","Ƀ","Ƃ","Ɓ","Ⓒ","Ｃ","Ć","Ĉ","Ċ","Č","Ç","Ḉ","Ƈ","Ȼ","Ꜿ","Ⓓ","Ｄ","Ḋ","Ď","Ḍ","Ḑ","Ḓ","Ḏ","Đ","Ƌ","Ɗ","Ɖ","Ꝺ","Ǳ","Ǆ","ǲ","ǅ","Ⓔ","Ｅ","È","É","Ê","Ề","Ế","Ễ","Ể","Ẽ","Ē","Ḕ","Ḗ","Ĕ","Ė","Ë","Ẻ","Ě","Ȅ","Ȇ","Ẹ","Ệ","Ȩ","Ḝ","Ę","Ḙ","Ḛ","Ɛ","Ǝ","Ⓕ","Ｆ","Ḟ","Ƒ","Ꝼ","Ⓖ","Ｇ","Ǵ","Ĝ","Ḡ","Ğ","Ġ","Ǧ","Ģ","Ǥ","Ɠ","Ꞡ","Ᵹ","Ꝿ","Ⓗ","Ｈ","Ĥ","Ḣ","Ḧ","Ȟ","Ḥ","Ḩ","Ḫ","Ħ","Ⱨ","Ⱶ","Ɥ","Ⓘ","Ｉ","Ì","Í","Î","Ĩ","Ī","Ĭ","İ","Ï","Ḯ","Ỉ","Ǐ","Ȉ","Ȋ","Ị","Į","Ḭ","Ɨ","Ⓙ","Ｊ","Ĵ","Ɉ","Ⓚ","Ｋ","Ḱ","Ǩ","Ḳ","Ķ","Ḵ","Ƙ","Ⱪ","Ꝁ","Ꝃ","Ꝅ","Ꞣ","Ⓛ","Ｌ","Ŀ","Ĺ","Ľ","Ḷ","Ḹ","Ļ","Ḽ","Ḻ","Ł","Ƚ","Ɫ","Ⱡ","Ꝉ","Ꝇ","Ꞁ","Ǉ","ǈ","Ⓜ","Ｍ","Ḿ","Ṁ","Ṃ","Ɱ","Ɯ","Ⓝ","Ｎ","Ǹ","Ń","Ñ","Ṅ","Ň","Ṇ","Ņ","Ṋ","Ṉ","Ƞ","Ɲ","Ꞑ","Ꞥ","Ǌ","ǋ","Ⓞ","Ｏ","Ò","Ó","Ô","Ồ","Ố","Ỗ","Ổ","Õ","Ṍ","Ȭ","Ṏ","Ō","Ṑ","Ṓ","Ŏ","Ȯ","Ȱ","Ö","Ȫ","Ỏ","Ő","Ǒ","Ȍ","Ȏ","Ơ","Ờ","Ớ","Ỡ","Ở","Ợ","Ọ","Ộ","Ǫ","Ǭ","Ø","Ǿ","Ɔ","Ɵ","Ꝋ","Ꝍ","Ƣ","Ꝏ","Ȣ","Ⓟ","Ｐ","Ṕ","Ṗ","Ƥ","Ᵽ","Ꝑ","Ꝓ","Ꝕ","Ⓠ","Ｑ","Ꝗ","Ꝙ","Ɋ","Ⓡ","Ｒ","Ŕ","Ṙ","Ř","Ȑ","Ȓ","Ṛ","Ṝ","Ŗ","Ṟ","Ɍ","Ɽ","Ꝛ","Ꞧ","Ꞃ","Ⓢ","Ｓ","ẞ","Ś","Ṥ","Ŝ","Ṡ","Š","Ṧ","Ṣ","Ṩ","Ș","Ş","Ȿ","Ꞩ","Ꞅ","Ⓣ","Ｔ","Ṫ","Ť","Ṭ","Ț","Ţ","Ṱ","Ṯ","Ŧ","Ƭ","Ʈ","Ⱦ","Ꞇ","Ꜩ","Ⓤ","Ｕ","Ù","Ú","Û","Ũ","Ṹ","Ū","Ṻ","Ŭ","Ü","Ǜ","Ǘ","Ǖ","Ǚ","Ủ","Ů","Ű","Ǔ","Ȕ","Ȗ","Ư","Ừ","Ứ","Ữ","Ử","Ự","Ụ","Ṳ","Ų","Ṷ","Ṵ","Ʉ","Ⓥ","Ｖ","Ṽ","Ṿ","Ʋ","Ꝟ","Ʌ","Ꝡ","Ⓦ","Ｗ","Ẁ","Ẃ","Ŵ","Ẇ","Ẅ","Ẉ","Ⱳ","Ⓧ","Ｘ","Ẋ","Ẍ","Ⓨ","Ｙ","Ỳ","Ý","Ŷ","Ỹ","Ȳ","Ẏ","Ÿ","Ỷ","Ỵ","Ƴ","Ɏ","Ỿ","Ⓩ","Ｚ","Ź","Ẑ","Ż","Ž","Ẓ","Ẕ","Ƶ","Ȥ","Ɀ","Ⱬ","Ꝣ","ⓐ","ａ","ẚ","à","á","â","ầ","ấ","ẫ","ẩ","ã","ā","ă","ằ","ắ","ẵ","ẳ","ȧ","ǡ","ä","ǟ","ả","å","ǻ","ǎ","ȁ","ȃ","ạ","ậ","ặ","ḁ","ą","ⱥ","ɐ","ꜳ","æ","ǽ","ǣ","ꜵ","ꜷ","ꜹ","ꜻ","ꜽ","ⓑ","ｂ","ḃ","ḅ","ḇ","ƀ","ƃ","ɓ","ⓒ","ｃ","ć","ĉ","ċ","č","ç","ḉ","ƈ","ȼ","ꜿ","ↄ","ⓓ","ｄ","ḋ","ď","ḍ","ḑ","ḓ","ḏ","đ","ƌ","ɖ","ɗ","ꝺ","ǳ","ǆ","ⓔ","ｅ","è","é","ê","ề","ế","ễ","ể","ẽ","ē","ḕ","ḗ","ĕ","ė","ë","ẻ","ě","ȅ","ȇ","ẹ","ệ","ȩ","ḝ","ę","ḙ","ḛ","ɇ","ɛ","ǝ","ⓕ","ｆ","ḟ","ƒ","ꝼ","ⓖ","ｇ","ǵ","ĝ","ḡ","ğ","ġ","ǧ","ģ","ǥ","ɠ","ꞡ","ᵹ","ꝿ","ⓗ","ｈ","ĥ","ḣ","ḧ","ȟ","ḥ","ḩ","ḫ","ẖ","ħ","ⱨ","ⱶ","ɥ","ƕ","ⓘ","ｉ","ì","í","î","ĩ","ī","ĭ","ï","ḯ","ỉ","ǐ","ȉ","ȋ","ị","į","ḭ","ɨ","ı","ⓙ","ｊ","ĵ","ǰ","ɉ","ⓚ","ｋ","ḱ","ǩ","ḳ","ķ","ḵ","ƙ","ⱪ","ꝁ","ꝃ","ꝅ","ꞣ","ⓛ","ｌ","ŀ","ĺ","ľ","ḷ","ḹ","ļ","ḽ","ḻ","ſ","ł","ƚ","ɫ","ⱡ","ꝉ","ꞁ","ꝇ","ǉ","ⓜ","ｍ","ḿ","ṁ","ṃ","ɱ","ɯ","ⓝ","ｎ","ǹ","ń","ñ","ṅ","ň","ṇ","ņ","ṋ","ṉ","ƞ","ɲ","ŉ","ꞑ","ꞥ","ǌ","ⓞ","ｏ","ò","ó","ô","ồ","ố","ỗ","ổ","õ","ṍ","ȭ","ṏ","ō","ṑ","ṓ","ŏ","ȯ","ȱ","ö","ȫ","ỏ","ő","ǒ","ȍ","ȏ","ơ","ờ","ớ","ỡ","ở","ợ","ọ","ộ","ǫ","ǭ","ø","ǿ","ɔ","ꝋ","ꝍ","ɵ","ƣ","ȣ","ꝏ","ⓟ","ｐ","ṕ","ṗ","ƥ","ᵽ","ꝑ","ꝓ","ꝕ","ⓠ","ｑ","ɋ","ꝗ","ꝙ","ⓡ","ｒ","ŕ","ṙ","ř","ȑ","ȓ","ṛ","ṝ","ŗ","ṟ","ɍ","ɽ","ꝛ","ꞧ","ꞃ","ⓢ","ｓ","ß","ś","ṥ","ŝ","ṡ","š","ṧ","ṣ","ṩ","ș","ş","ȿ","ꞩ","ꞅ","ẛ","ⓣ","ｔ","ṫ","ẗ","ť","ṭ","ț","ţ","ṱ","ṯ","ŧ","ƭ","ʈ","ⱦ","ꞇ","ꜩ","ⓤ","ｕ","ù","ú","û","ũ","ṹ","ū","ṻ","ŭ","ü","ǜ","ǘ","ǖ","ǚ","ủ","ů","ű","ǔ","ȕ","ȗ","ư","ừ","ứ","ữ","ử","ự","ụ","ṳ","ų","ṷ","ṵ","ʉ","ⓥ","ｖ","ṽ","ṿ","ʋ","ꝟ","ʌ","ꝡ","ⓦ","ｗ","ẁ","ẃ","ŵ","ẇ","ẅ","ẘ","ẉ","ⱳ","ⓧ","ｘ","ẋ","ẍ","ⓨ","ｙ","ỳ","ý","ŷ","ỹ","ȳ","ẏ","ÿ","ỷ","ẙ","ỵ","ƴ","ɏ","ỿ","ⓩ","ｚ","ź","ẑ","ż","ž","ẓ","ẕ","ƶ","ȥ","ɀ","ⱬ","ꝣ","Ά","Έ","Ή","Ί","Ϊ","Ό","Ύ","Ϋ","Ώ","ά","έ","ή","ί","ϊ","ΐ","ό","ύ","ϋ","ΰ","ω","ς","actual","expected","notnull","isnull","processSymbols","parse","parseJson","jsonText","JSON","jsonReviver","iterateAndReviveArray","iterateAndReviveJson","test","keys_2","ms","exec","offSet","dateParse","toTimeZone","Date","isUTC","utcFormat","hrs","mins","setHours","getHours","getMinutes","addSelfOffset","isJson","isGuid","replacer","stringify","jsonReplacer","arrayReplacer","keys_3","d","toJSON","date","jsonDateReplacer","getTimezoneOffset","toUTC","offset","utc","unix","toLocalTime","datefn","timeZone","differenceString","localtimefn","num","norm","floor","abs","getFullYear","getMonth","getDate","getSeconds","__extends","extendStatics","b","setPrototypeOf","__proto__","hasOwnProperty","__","create","Adaptor","options","requestType","dataSource","pvt","processResponse","JsonAdaptor","_super","processQuery","countFlg","keyCount","agg","lazyLoadData","lazyLoadGroup","getAggregate","onDemandGroupInfo","onPage","formGroupResult","onWhere","aggQuery","batchRequest","changes","deletedRecordsLen","deletedRecords","addedRecords","insert","changedRecords","update","remove","onAggregates","onSearch","onSortBy","fnCompare","onGroup","size","onRange","onTake","onSkip","onSelect","position","splice","keyField","UrlAdaptor","hierarchyFilters","getQueryRequest","url","request","groups","filters","searches","getFiltersFrom","getModuleName","getRequestQuery","_a","pvtData","contentType","convertToQueryString","request1","selects","getResponseHeader","handleTimeZone","requests","action","isExpand","isArray","formRemoteGroupedData","getAggregateResult","childLevel","getGroupedRecords","hasRecords","childGroupedRecords","concat","original","batchUrl","crudUrl","removeUrl","dataType","extend","changed","added","deleted","table","beforeSend","insertUrl","keyColumn","updateUrl","predicats","pData","aggregateData","isServerGrouping","groupQuery","ODataAdaptor","props","_this","accept","multipartAccept","batch","changeSet","batchPre","contentId","batchContent","changeSetContent","batchChangeSetContentType","updateType","onPredicate","requiresCast","guid","returnValue","getField","encodeURIComponent","onComplexPredicate","onEachWhere","onEachSearch","onEachSort","reverse","onCount","settings","setRequestHeader","overrideMimeType","rootUrl","dataUrls","resourceTableName","dataCopy","results","emptyAndBatch","processBatchResponse","versionCheck","version","requiresFormat","keys_4","localTimeReplacer","convertObj","localTime","compareAndRemove","initialGuid","cid","cSet","generateInsertRequest","generateUpdateRequest","generateDeleteRequest","stat","method","generateBodyContent","org","change","o","cIdx","jsonObj","substring","exVal","changeGuid","valueOf","ODataV4Adaptor","isDate","onExpand","selected","expanded","exArr","item","ex","onDistinct","distinctFields","dataUrl","WebApiAdaptor","location","host","state","mtd","Count","Items","WebMethodAdaptor","param","RemoteSaveAdaptor","updateKey","CustomDataAdaptor","getData","Function","addRecord","updateRecord","deleteRecord","batchUpdate","CacheAdaptor","timeStamp","isCrudAction","isInsertAction","cacheAdaptor","guidId","localStorage","setItem","setInterval","getItem","forDel","currentTime","requestTime","removeItem","generateKey","currentFilter","newQuery","cachedItems","crossDomain","offline","headers","timeTillExpiration","cachingPageSize","enableCaching","jsonp","defaultQuery","isDataAvailable","ready","then","setDefaultQuery","deffered","Deferred","isCustomDataAdaptor","makeRequest","getDeferedArgs","resolve","nextTick","promise","setImmediate","setTimeout","extendRequest","fnSuccess","fnFail","cache","processData","onSuccess","onFailure","isSelector","reject","process","virtualSelectRecords","fnQueryChild","selector","subDeffer","childArgs","parent","subUrl","childReq","subData","ajaxReqOption","httpRequest","virtualRecords","ajax_1","Ajax","send","catch","Promise","all","pResult","cResult","saveChanges","doAjaxRequest","deff_1","ajax_2","successFunc","ajaxDeffered","failureFunc","ajaxFunc","bind","ajax_3"],"mappings":"2DAKA,IAAIA,GAAuB,WAMvB,QAASA,GAAMC,GAuBX,MArBAC,MAAKC,SAAW,KAEhBD,KAAKE,SAAU,EAEfF,KAAKG,aACLH,KAAKI,WACLJ,KAAKK,IAAM,GACXL,KAAKM,KAAO,GACQ,gBAATP,GACPC,KAAKO,UAAYR,EAEZA,GAAQA,YAAgBS,SAC7BR,KAAKS,QAAUV,GAEnBC,KAAKU,WACLV,KAAKW,iBACLX,KAAKY,kBACLZ,KAAKC,SAAW,KAChBD,KAAKE,SAAU,EACfF,KAAKa,UACLb,KAAKc,YACEd,KAkYX,MA5XAF,GAAMiB,UAAUC,OAAS,SAAUC,GAE/B,MADAjB,MAAKK,IAAMY,EACJjB,MAMXF,EAAMiB,UAAUG,MAAQ,SAAUC,GAE9B,MADAnB,MAAKmB,YAAcA,EACZnB,MAiBXF,EAAMiB,UAAUK,QAAU,SAAUD,EAAaE,EAAMC,EAAMC,GAEzD,MADAJ,GAAcA,GAAenB,KAAKmB,YAC9BA,EACOA,EAAYK,aAAaxB,KAAMqB,EAAMC,EAAMC,GAE/CE,EAASC,WAAW,8GAM/B5B,EAAMiB,UAAUY,aAAe,SAAUR,GAErC,MADAA,GAAcA,GAAenB,KAAKmB,YAC9BA,EACOA,EAAYQ,aAAa3B,MAE7ByB,EAASC,WAAW,mHAK/B5B,EAAMiB,UAAUa,MAAQ,WACpB,GAAIC,GAAS,GAAI/B,EAgBjB,OAfA+B,GAAOzB,QAAUJ,KAAKI,QAAQ0B,MAAM,GACpCD,EAAOxB,IAAML,KAAKK,IAClBwB,EAAO3B,QAAUF,KAAKE,QACtB2B,EAAOV,YAAcnB,KAAKmB,YAC1BU,EAAOtB,UAAYP,KAAKO,UACxBsB,EAAOhB,OAASb,KAAKa,OAAOiB,MAAM,GAClCD,EAAOnB,QAAUV,KAAKU,QAAQoB,MAAM,GACpCD,EAAOlB,cAAgBX,KAAKW,cAAcmB,MAAM,GAChDD,EAAOjB,eAAiBZ,KAAKY,eAAekB,MAAM,GAClDD,EAAOE,iBAAmB/B,KAAK+B,iBAC/BF,EAAO5B,SAAWD,KAAKC,SACvB4B,EAAOvB,KAAON,KAAKM,KACnBuB,EAAOG,gBAAkBhC,KAAKgC,gBAC9BH,EAAO1B,UAAYH,KAAKG,UAAU2B,MAAM,GACxCD,EAAOf,SAAWd,KAAKc,SAASgB,MAAM,GAC/BD,GAMX/B,EAAMiB,UAAUhB,KAAO,SAAUkC,GAE7B,MADAjC,MAAKO,UAAY0B,EACVjC,MAOXF,EAAMiB,UAAUmB,UAAY,SAAU7B,EAAK8B,GAOvC,MANqB,kBAAVA,GACPnC,KAAKa,OAAOuB,MAAO/B,IAAKA,EAAKgC,GAAIF,IAGjCnC,KAAKa,OAAOuB,MAAO/B,IAAKA,EAAK8B,MAAOA,IAEjCnC,MAKXF,EAAMiB,UAAUuB,SAAW,SAAUC,GAOjC,MALIvC,MAAKG,UADa,gBAAXoC,MACaT,MAAMU,MAAMD,GAAS,GAGxBA,EAAOT,MAAM,GAE3B9B,MAMXF,EAAMiB,UAAU0B,OAAS,SAAUC,GAO/B,MALI1C,MAAKU,QADa,gBAAXgC,MACWZ,MAAMU,MAAME,GAAS,GAGxBA,EAAOZ,MAAM,GAEzB9B,MAUXF,EAAMiB,UAAU4B,MAAQ,SAAUC,EAAWC,EAAUV,EAAOW,EAAYC,GACtEF,EAAWA,EAAW,EAAWG,cAAgB,IACjD,IAAIC,GAAY,IAWhB,OAVyB,gBAAdL,GACPK,EAAY,GAAIC,GAAUN,EAAWC,EAAUV,EAAOW,EAAYC,GAE7DH,YAAqBM,KAC1BD,EAAYL,GAEhB5C,KAAKI,QAAQgC,MACTC,GAAI,UACJc,EAAGF,IAEAjD,MAUXF,EAAMiB,UAAUqC,OAAS,SAAUC,EAAWC,EAAYT,EAAUC,EAAYC,GAClD,gBAAfO,KACPA,GAAcA,IAEbT,GAAyB,SAAbA,IACbA,EAAW,WAEf,IAAIU,GAAW9B,EAAS+B,YAAYX,EAYpC,OAXA7C,MAAKI,QAAQgC,MACTC,GAAI,WACJc,GACIG,WAAYA,EACZT,SAAUA,EACVQ,UAAWA,EACXP,WAAYA,EACZC,aAAcA,EACdQ,SAAUA,KAGXvD,MAQXF,EAAMiB,UAAU0C,OAAS,SAAUb,EAAWW,EAAUG,GACpD,MAAO1D,MAAK2D,iBAAiBf,EAAWW,EAAUG,IAStD5D,EAAMiB,UAAU4C,iBAAmB,SAAUf,EAAWW,EAAUG,EAAaE,GAC3E,GACIC,GACAC,EAFAC,EAASC,oBAAkBJ,GAAyB,YAAZA,CAW5C,IARyB,gBAAdhB,IAA0BnB,EAASwC,SAASrB,EAAUI,cAAe,WAC5EJ,EAAYA,EAAUsB,QAAQ,UAAW,IACzCX,EAAW,cAEVA,GAAgC,gBAAbA,KACpBQ,EAAQR,EAAWA,EAASP,cAAgB,YAC5CO,EAAW9B,EAAS0C,OAAOZ,IAE3BG,EAAa,CACbG,EAAQ/D,EAAMsE,cAAcpE,KAAKI,QAAS,WAC1C,KAAK,GAAIiE,GAAI,EAAGA,EAAIR,EAAMS,OAAQD,IAE9B,GAAoB,iBADpBP,EAAOD,EAAMQ,GAAGlB,EAAEP,YAEd,GAAIkB,IAASlB,EACT,MAAO5C,UAGV,IAAI8D,YAAgBtD,OACrB,IAAK,GAAI+D,GAAI,EAAGA,EAAIT,EAAKQ,OAAQC,IAC7B,GAAIT,EAAKS,KAAO3B,GAAaA,EAAUI,gBAAkBc,EAAKS,GAAK,QAC/D,MAAOvE,MAc3B,MARAA,MAAKI,QAAQgC,MACTC,GAAI,WACJc,GACIP,UAAWA,EACXW,SAAUA,EACVK,UAAWG,KAGZ/D,MAMXF,EAAMiB,UAAUyD,WAAa,SAAU5B,GACnC,MAAO5C,MAAKyD,OAAOb,EAAW,eAMlC9C,EAAMiB,UAAU0D,MAAQ,SAAU7B,EAAWP,EAAIqC,GAU7C,MATA1E,MAAKyD,OAAOb,EAAW,MAAM,GAC7B5C,KAAKI,QAAQgC,MACTC,GAAI,UACJc,GACIP,UAAWA,EACXW,SAAUlB,GAAU,KACpBqC,OAAQA,GAAkB,QAG3B1E,MAOXF,EAAMiB,UAAU4D,KAAO,SAAUC,EAAWC,GAQxC,MAPA7E,MAAKI,QAAQgC,MACTC,GAAI,SACJc,GACIyB,UAAWA,EACXC,SAAUA,KAGX7E,MAOXF,EAAMiB,UAAU+D,MAAQ,SAAUC,EAAOC,GAQrC,MAPAhF,MAAKI,QAAQgC,MACTC,GAAI,UACJc,GACI4B,MAAOA,EACPC,IAAKA,KAGNhF,MAMXF,EAAMiB,UAAUkE,KAAO,SAAUC,GAO7B,MANAlF,MAAKI,QAAQgC,MACTC,GAAI,SACJc,GACI+B,IAAKA,KAGNlF,MAMXF,EAAMiB,UAAUoE,KAAO,SAAUD,GAK7B,MAJAlF,MAAKI,QAAQgC,MACTC,GAAI,SACJc,GAAK+B,IAAKA,KAEPlF,MAMXF,EAAMiB,UAAUqE,OAAS,SAAU9B,GAQ/B,MAP0B,gBAAfA,KACPA,KAAgBxB,MAAMU,MAAMc,GAAa,IAE7CtD,KAAKI,QAAQgC,MACTC,GAAI,WACJc,GAAKG,WAAYA,KAEdtD,MAOXF,EAAMiB,UAAUsE,UAAY,SAAUC,EAAOC,GAGzC,MAFAvF,MAAK+B,iBAAmBwD,EACxBvF,KAAKC,SAAWqF,EACTtF,MAMXF,EAAMiB,UAAUyE,WAAa,SAAUnF,GAEnC,MADAL,MAAKM,KAAOD,EACLL,MAKXF,EAAMiB,UAAU0E,cAAgB,WAE5B,MADAzF,MAAKgC,iBAAkB,EAChBhC,MAQXF,EAAMiB,UAAU2E,UAAY,SAAUC,EAAM1E,GAKxC,MAJAjB,MAAKI,QAAQgC,MACTC,GAAI,eACJc,GAAKlC,MAAOA,EAAO0E,KAAMA,KAEtB3F,MAQXF,EAAMsE,cAAgB,SAAUhE,EAASwF,GACrC,MAAOxF,GAAQyF,OAAO,SAAUC,GAC5B,MAAOA,GAAEzD,KAAOuD,KASxB9F,EAAMiG,iBAAmB,SAAU3F,EAAS4F,GAKxC,IAAK,GAJDC,GAAW7F,EAAQyF,OAAO,SAAUC,GACpC,OAAkC,IAA3BE,EAAQE,QAAQJ,EAAEzD,MAEzB8D,KACK9B,EAAI,EAAGA,EAAI4B,EAAS3B,OAAQD,IAC5B8B,EAAIF,EAAS5B,GAAGhC,MACjB8D,EAAIF,EAAS5B,GAAGhC,IAAM4D,EAAS5B,GAAGlB,EAG1C,OAAOgD,IAEJrG,KAOPoD,EAA2B,WAS3B,QAASA,GAAUjC,EAAO4B,EAAUV,EAAOW,EAAYC,GA0BnD,WAzBmB,KAAfD,IAAyBA,GAAa,GAE1C9C,KAAK+C,cAAe,EAEpB/C,KAAKoG,WAAY,EACI,gBAAVnF,IACPjB,KAAKiB,MAAQA,EACbjB,KAAK6C,SAAWA,EAASG,cACzBhD,KAAKmC,MAAQA,EACbnC,KAAK8C,WAAaA,EAClB9C,KAAK+C,aAAeA,EACpB/C,KAAKoG,WAAY,EACjBpG,KAAKuD,SAAW9B,EAAS+B,YAAY6C,gBAAgBrG,KAAK6C,YAErD5B,YAAiBiC,IAAaf,YAAiBe,IAAaf,YAAiB3B,UAClFR,KAAKoG,WAAY,EACjBpG,KAAKsG,UAAYzD,EAASG,cAC1BhD,KAAKuG,YAActF,GACfkB,YAAiB3B,UACd4B,KAAKoE,MAAMxG,KAAKuG,WAAYpE,GAG/BnC,KAAKuG,WAAWnE,KAAKD,IAGtBnC,KAmJX,MA7IAkD,GAAUuD,IAAM,WAEZ,IAAK,GADDC,MACKC,EAAK,EAAGA,EAAKC,UAAUtC,OAAQqC,IACpCD,EAAKC,GAAMC,UAAUD,EAEzB,OAAOzD,GAAU2D,qBAAqB/E,MAAMU,KAAKkE,EAAM,GAAI,QAU/DxD,EAAUnC,UAAU0F,IAAM,SAAUxF,EAAO4B,EAAUV,EAAOW,EAAYC,GACpE,MAAOG,GAAU4D,QAAQ9G,KAAMiB,EAAO4B,EAAUV,EAAO,MAAOW,EAAYC,IAM9EG,EAAU6D,GAAK,WAEX,IAAK,GADDL,MACKC,EAAK,EAAGA,EAAKC,UAAUtC,OAAQqC,IACpCD,EAAKC,GAAMC,UAAUD,EAEzB,OAAOzD,GAAU2D,qBAAqB/E,MAAMU,KAAKkE,EAAM,GAAI,OAU/DxD,EAAUnC,UAAUgG,GAAK,SAAU9F,EAAO4B,EAAUV,EAAOW,EAAYC,GACnE,MAAOG,GAAU4D,QAAQ9G,KAAMiB,EAAO4B,EAAUV,EAAO,KAAMW,EAAYC,IAM7EG,EAAU8D,SAAW,SAAUC,GAC3B,GAAIA,YAAgBzG,OAAO,CAEvB,IAAK,GADD2F,MACK9B,EAAI,EAAG6C,EAAMD,EAAK3C,OAAQD,EAAI6C,EAAK7C,IACxC8B,EAAI/D,KAAKpC,KAAKmH,aAAaF,EAAK5C,IAEpC,OAAO8B,GAEX,GAAIiB,GAAOH,CACX,OAAOjH,MAAKmH,aAAaC,IAM7BlE,EAAUnC,UAAUsG,SAAW,SAAUC,GACrC,GACIC,GACAC,EAFAvE,EAAYjD,KAAKuG,WAAavG,KAAKuG,aAGvC,KAAKvG,KAAKoG,WAAapG,KAAKuD,SACxB,MAAOvD,MAAKuD,SAASf,KAAKxC,KAAMyB,EAASgG,UAAUzH,KAAKiB,MAAOqG,GAAStH,KAAKmC,MAAOnC,KAAK8C,WAAY9C,KAAK+C,aAE9GwE,GAA2B,QAAnBvH,KAAKsG,SACb,KAAK,GAAIjC,GAAI,EAAGA,EAAIpB,EAAUqB,OAAQD,IAElC,GADAmD,EAAMvE,EAAUoB,GAAGgD,SAASC,GACxBC,GACA,IAAKC,EACD,OAAO,MAIX,IAAIA,EACA,OAAO,CAInB,OAAOD,IAMXrE,EAAUnC,UAAU2G,OAAS,WACzB,GAAInB,GACAoB,CACJ,IAAI3H,KAAKoG,UAAW,CAChBG,KACAoB,EAAI3H,KAAKuG,UACT,KAAK,GAAIlC,GAAI,EAAGA,EAAIsD,EAAErD,OAAQD,IAC1BkC,EAAWnE,KAAKuF,EAAEtD,GAAGqD,UAG7B,OACItB,UAAWpG,KAAKoG,UAChBnF,MAAOjB,KAAKiB,MACZ4B,SAAU7C,KAAK6C,SACfV,MAAOnC,KAAKmC,MACZW,WAAY9C,KAAK8C,WACjBC,aAAc/C,KAAK+C,aACnBuD,UAAWtG,KAAKsG,UAChBC,WAAYA,IAGpBrD,EAAU2D,kBAAoB,SAAUN,EAAY1D,GAChD,GAA0B,IAAtB0D,EAAWjC,OAAc,CACzB,KAAMiC,EAAW,YAAc/F,QAC3B,MAAO+F,GAAW,EAEtBA,GAAaA,EAAW,GAE5B,MAAO,IAAIrD,GAAUqD,EAAW,GAAI1D,EAAU0D,EAAWzE,MAAM,KAEnEoB,EAAU4D,QAAU,SAAUM,EAAMnG,EAAO4B,EAAUV,EAAOmE,EAAWxD,EAAYC,GAC/E,MAAI9B,aAAiBiC,GACVA,EAAUoD,GAAWc,EAAMnG,GAEjB,gBAAVA,GACAiC,EAAUoD,GAAWc,EAAM,GAAIlE,GAAUjC,EAAO4B,EAAUV,EAAOW,EAAYC,IAEjFtB,EAASC,WAAW,eAAiB4E,EAAY,yBAE5DpD,EAAUiE,aAAe,SAAUF,GAK/B,IAAK,GAJDW,GAAQX,EAAKV,eACbW,EAAMU,EAAMtD,OACZiC,KAEKlC,EAAI,EAAGA,EAAI6C,EAAK7C,IACrBkC,EAAWnE,KAAKpC,KAAKmH,aAAaS,EAAMvD,IAQ5C,OANK4C,GAAKb,UAIG,GAAIlD,GAAUqD,EAAW,GAAIU,EAAKX,UAAWC,EAAWzE,MAAM,IAH9D,GAAIoB,GAAU+D,EAAKhG,MAAOgG,EAAKpE,SAAUoE,EAAK9E,MAAO8E,EAAKnE,WAAYmE,EAAKlE,eAOrFG,KC9lBP2E,GAAWC,UAAW,mBAKtBrG,EAA0B,WAC1B,QAASA,MA04DT,MAj4DAA,GAASsG,SAAW,SAAU5F,EAAO6F,GACjC,MAAqB,kBAAV7F,GACAA,EAAMK,KAAKwF,OAEf7F,GAOXV,EAASwC,SAAW,SAAUgE,EAAOC,GACjC,MAAOD,GAAMnG,OAASmG,EAAMnG,OAAOoG,EAAO5D,UAAY4D,GAO1DzG,EAAS0G,WAAa,SAAUF,EAAOlD,GACnC,MAAOkD,GAAMnG,MAAM,EAAGiD,EAAMT,UAAYS,GAO5CtD,EAAS0C,OAAS,SAAUJ,GAExB,MADAA,GAAQA,EAAQtC,EAASuB,YAAYe,GAAS,YAChC,cAAVA,EACO/D,KAAKoI,YAETpI,KAAKqI,cAQhB5G,EAAS2G,YAAc,SAAUE,EAAGC,GAChC,MAAIvE,qBAAkBsE,IAAMtE,oBAAkBuE,IAClC,EAEF,OAANA,OAAoBC,KAAND,GACN,EAEK,gBAAND,GACAA,EAAEG,cAAcF,GAEjB,OAAND,OAAoBE,KAANF,EACP,EAEJA,EAAIC,GAQf9G,EAAS4G,aAAe,SAAUC,EAAGC,GACjC,MAAIvE,qBAAkBsE,IAAMtE,oBAAkBuE,IAClC,EAEF,OAANA,OAAoBC,KAAND,EACP,EAEM,gBAAND,IACsB,EAAtBA,EAAEG,cAAcF,GAEjB,OAAND,OAAoBE,KAANF,GACN,EAELC,EAAID,GAEf7G,EAASiH,cAAgB,SAAUC,EAAKpG,GAEpC,IAAK,GADDqG,MACKvE,EAAI,EAAGA,EAAI9B,EAAO+B,OAAQD,IAC/BuE,EAAS5I,KAAK6I,SAAStG,EAAO8B,GAAIrE,KAAKyH,UAAUlF,EAAO8B,GAAIsE,GAAMC,EAEtE,OAAOA,IAOXnH,EAAS2D,OAAS,SAAU0D,EAAWvG,GAEnC,IAAK,GADDwG,MACK1E,EAAI,EAAGA,EAAIyE,EAAUxE,OAAQD,IAClC0E,EAAQ3G,KAAKpC,KAAK0I,cAAcI,EAAUzE,GAAI9B,GAElD,OAAOwG,IAWXtH,EAASgD,MAAQ,SAAUqE,EAAW7H,EAAO+H,EAAYC,EAAOC,EAASxE,EAAQyE,GAC7EF,EAAQA,GAAS,CACjB,IAAIG,GAAWN,CAEf,IAAIM,EAAStB,YAAcD,EAAW,UAAG,CAerC,IAAK,GADDwB,GAASrJ,KACJuE,EAAI,EAAGA,EAAI6E,EAAS9E,OAAQC,KAdvB,SAAUA,GACpB,GAAKP,oBAAkBkF,GAQnBE,EAAS7E,GAAG+E,MAAQD,EAAO5E,MAAM2E,EAAS7E,GAAG+E,MAAOrI,EAAO+H,EAAYI,EAASH,MAAQ,EAAG,KAAMvE,EAAQyE,GACzGC,EAAS7E,GAAGgF,MAAQH,EAAS7E,GAAG+E,MAAMhF,WATT,CAC7B,GAAIkF,IAAQ,EACR1F,EAAOoF,EAAQrD,OAAO,SAAU1C,GAAK,MAAOA,GAAE9C,MAAQ+I,EAAS7E,GAAGlE,KACtEmJ,GAAON,EAAQhD,QAAQpC,EAAK,IAC5BsF,EAAS7E,GAAG+E,MAAQD,EAAO5E,MAAM2E,EAAS7E,GAAG+E,MAAOrI,EAAO+H,EAAYI,EAASH,MAAQ,EAAGC,EAAQM,GAAMF,MAAO5E,EAAQyE,GACxHC,EAAS7E,GAAGgF,MAAQL,EAAQM,GAAMD,QAS9BhF,EAGZ,OADA6E,GAASK,aAAe,EACjBL,EAEX,GAAIM,MACAC,IACJA,GAAa7B,UAAYD,EAAW,UACpC8B,EAAaV,MAAQA,EACrBU,EAAaF,YAAc,EAC3BE,EAAaC,QAAUR,CA0BvB,KAAK,GADDS,GAAS7J,KACJqE,EAAI,EAAGA,EAAI+E,EAAS9E,OAAQD,KAzBvB,SAAUA,GACpB,GAAIyF,GAAMD,EAAOE,OAAOX,EAAU/E,EAAGpD,EAIrC,IAHK+C,oBAAkBU,KACnBoF,EAAMpF,EAAOoF,EAAK7I,KAEjByI,EAAQI,KACTJ,EAAQI,IACJzJ,IAAKyJ,EACLP,MAAO,EACPD,SACAN,cACA/H,MAAOA,GAEX0I,EAAavH,KAAKsH,EAAQI,KACrB9F,oBAAkBkF,IAAU,CAC7B,GAAIc,GAAUd,EAAQrD,OAAO,SAAU1C,GAAK,MAAOA,GAAE9C,MAAQqJ,EAAQI,GAAKzJ,KAC1EqJ,GAAQI,GAAKP,MAAQS,EAAQ,GAAGT,MAGxCG,EAAQI,GAAKP,MAASvF,oBAAkBkF,GAAgCQ,EAAQI,GAAKP,OAAS,EAA3CG,EAAQI,GAAKP,QAC3DJ,GAAeA,GAAcH,EAAW1E,SACzCoF,EAAQI,GAAKR,MAAMlH,KAAKgH,EAAS/E,KAK7BA,EAEZ,IAAI2E,GAAcA,EAAW1E,OAqBzB,IAASD,EAAI,EAAGA,EAAIsF,EAAarF,OAAQD,KApB3B,SAAUA,GAIpB,IAAK,GAHD8B,MACA9D,MAAK,GACL4H,EAAOjB,EACFzE,EAAI,EAAGA,EAAIyE,EAAW1E,OAAQC,IAEnC,GADAlC,EAAKZ,EAASuH,WAAWA,EAAWzE,GAAGoB,MAClC3B,oBAAkBkF,GAOf7G,IACA8D,EAAI8D,EAAK1F,GAAGtD,MAAQ,MAAQgJ,EAAK1F,GAAGoB,MAAQtD,EAAGsH,EAAatF,GAAGiF,MAAOW,EAAK1F,GAAGtD,YARrD,CAC7B,GAAI6C,GAAOoF,EAAQrD,OAAO,SAAU1C,GAAK,MAAOA,GAAE9C,MAAQsJ,EAAatF,GAAGhE,KACtEgC,KACA8D,EAAI8D,EAAK1F,GAAGtD,MAAQ,MAAQgJ,EAAK1F,GAAGoB,MAAQtD,EAAGyB,EAAK,GAAGwF,MAAOW,EAAK1F,GAAGtD,QASlF0I,EAAatF,GAAG2E,WAAa7C,GAGrB9B,EAGhB,IAAI8E,GAAcQ,EAAarF,QAAU0E,EAAW1E,OAChD,IAASD,EAAI,EAAGA,EAAIsF,EAAarF,OAAQD,IACrCsF,EAAatF,GAAGiF,QAGxB,OAAOF,GAAS9E,QAAUqF,GAAgBP,GAY9C3H,EAASyI,eAAiB,SAAU5J,EAAMP,EAAMoK,EAAQC,EAAQC,GAC5D,GAAIhG,GACAiG,IAQJ,KANIF,EAAOG,SACPH,EAASA,EAAOG,QAEhBH,EAAOtC,WACP9H,KAAK0B,WAAW,0DAEf2C,EAAI,EAAGA,EAAI+F,EAAO9F,OAAQD,KAEpBiG,EADHE,EAAWxK,KAAKyH,UAAUnH,EAAM8J,EAAO/F,OAClBiG,EAAIE,QACxBpI,KAAKgI,EAAO/F,GAErB,KAAKA,EAAI,EAAGA,EAAI8F,EAAO7F,OAAQD,IAAK,CAChC,GAAImG,GAAWxK,KAAKyH,UAAU4C,GAAQ/J,EAAM6J,EAAO9F,GACnD8F,GAAO9F,GAAGtE,GAAQuK,EAAIE,KAU9B/I,EAASgJ,aAAe,SAAU9B,EAAKpG,EAAQmI,GAI3C,OAHelC,KAAXkC,IACAA,EAAS,QAEElC,KAAXjG,GAAmC,OAAXA,EACxB,MAAOvC,MAAKyK,aAAa9B,KAAS+B,EAItC,KAAK,GAFDC,GAAUhC,EAELhC,EAAK,EAAGiE,EADNC,OAAOC,KAAKnC,GACShC,EAAKiE,EAAOtG,OAAQqC,IAAM,CACtD,GAAIoE,GAAOH,EAAOjE,EACW,iBAAlBgE,GAAQI,IAAwBJ,EAAQI,YAAiBvK,OAIhE+B,EAAOH,KAAKsI,EAASK,GAHrB/K,KAAKyK,aAAaE,EAAQI,GAAOxI,EAAQmI,EAASK,EAAO,KAMjE,MAAOxI,IAQXd,EAASgG,UAAY,SAAUuD,EAAWjL,GACtC,IAAKiL,EACD,MAAOjL,EAEX,IAAKA,EAAL,CAGA,IAAgC,IAA5BiL,EAAU9E,QAAQ,KAClB,MAAOnG,GAAKiL,EAIhB,KAAK,GAFD7I,GAAQpC,EACRkL,EAASD,EAAUE,MAAM,KACpB7G,EAAI,EAAGA,EAAI4G,EAAO3G,QACV,MAATnC,EAD2BkC,IAI/BlC,EAAQA,EAAM8I,EAAO5G,GAEzB,OAAOlC,KAUXV,EAASoH,SAAW,SAAUmC,EAAW7I,EAAOwG,GAC5C,GAGItE,GAEAhE,EALAyK,EAAOE,EAAUG,WAAWD,MAAM,KAClCnG,EAAQ4D,MACRyC,EAAUrG,EAEVT,EAASwG,EAAKxG,MAElB,KAAKD,EAAI,EAAGA,EAAIC,EAAQD,IACpBhE,EAAMyK,EAAKzG,GACPA,EAAI,IAAMC,EACV8G,EAAQ/K,OAAiBmI,KAAVrG,MAAsBqG,GAAYrG,EAE5C6B,oBAAkBoH,EAAQ/K,MAC/B+K,EAAQ/K,OAEZ+K,EAAUA,EAAQ/K,EAEtB,OAAO0E,IAQXtD,EAAS4J,KAAO,SAAUC,EAAIrK,EAAOsC,GACjC,GAAI+H,EAAGhH,QAAU,EACb,MAAOgH,EAEX,IAAIC,GAASC,UAAUF,EAAGhH,OAAS,GAAG6G,WAAY,IAC9CM,EAAOH,EAAGxJ,MAAM,EAAGyJ,GACnBG,EAAQJ,EAAGxJ,MAAMyJ,EAGrB,OAFAE,GAAOzL,KAAKqL,KAAKI,EAAMxK,EAAOsC,GAC9BmI,EAAQ1L,KAAKqL,KAAKK,EAAOzK,EAAOsC,GACzBvD,KAAK2L,MAAMF,EAAMC,EAAOzK,EAAOsC,IAE1C9B,EAASmK,iBAAmB,SAAUzJ,GAClC,MAAqB,gBAAVA,GACAA,EAEEA,EAAM+I,MAAM,IACHW,IAAI,SAAU/H,GAAQ,MAAOA,KAAQrC,GAASqK,WAAarK,EAASqK,WAAWhI,GAAQA,IAC7FiI,KAAK,KAEzBtK,EAASkK,MAAQ,SAAUF,EAAMC,EAAO9I,EAAWW,GAG/C,IAFA,GACIyI,GADAzB,KAEGkB,EAAKnH,OAAS,GAAKoH,EAAMpH,OAAS,GAG7B0H,EAFJP,EAAKnH,OAAS,GAAKoH,EAAMpH,OAAS,EAC9Bf,EACUA,EAASvD,KAAK+J,OAAO0B,EAAM,EAAG7I,GAAY5C,KAAK+J,OAAO2B,EAAO,EAAG9I,GAAY6I,EAAK,GAAIC,EAAM,KAAO,EAAID,EAAOC,EAG7GD,EAAK,GAAG7I,GAAa6I,EAAK,GAAG7I,GAAa6I,EAAOC,EAIrDD,EAAKnH,OAAS,EAAImH,EAAOC,EAEvCnB,EAAOnI,KAAK4J,EAAQC,QAExB,OAAO1B,IAEX9I,EAASsI,OAAS,SAAUmC,EAAOC,EAAOlL,GACtC,MAAOA,GAAQjB,KAAKyH,UAAUxG,EAAOiL,EAAMC,IAAUD,EAAMC,IAE/D1K,EAASuB,YAAc,SAAU8G,GAC7B,MAAOA,GAAqB,gBAARA,GAAmBA,EAAI9G,cAAgB8G,EAAIqB,WAAsB,IAARrB,IAAqB,IAARA,EAAiBA,EAAIqB,WAAa,IAUhI1J,EAAS2K,oBAAsB,SAAUC,EAASC,EAAQC,EAAQC,GAC9D,GAAIF,IAAUD,GAAS,CACnB,GAAIlG,GAAMkG,EAAQC,GAAQC,EAAQC,EAC7BxI,qBAAkBmC,KACnBoG,EAASpG,GAGjB,MAAOoG,IAEX9K,EAASgL,aAAe,SAAUC,EAAKC,EAAIrH,GACvC,GAAIsH,KAOJ,OANAnL,GAAS2K,oBAAoBM,EAAK,aAC9BC,GAAIA,EACJrH,MAAOA,EACPzE,OAAQyE,EAAMzE,OACdgM,UAAWD,IAERA,GAMXnL,EAASqL,cAAgB,SAAUnE,GAC/B,QAAUA,GAASA,EAAIoE,cAAgBlC,QAK3CpJ,EAASuL,OAAS,WACd,GAAIC,GAAM,IAEV,KACIA,EAAM,GAAIC,QAAc,eAE5B,MAAO/J,IAGP,QAAS8J,GAAQ,mBAAqBA,IAM1CxL,EAAS0L,QAAU,SAAUzC,GACzB,GACI0C,EACJ,QAAQ1C,GAAU,IAAM,uCAAuCxG,QAAQ,KAAM,SAAU4F,EAAKzF,GACxF,GAAI,UAAY6I,SAAU,mBAAqBG,QAAQ,CACnD,GAAIC,GAAM,GAAIC,YAAW,EACzBL,QAAOG,OAAOG,gBAAgBF,GAC9BF,EAAOE,EAAI,GAAK,GAAK,MAGrBF,GAAuB,GAAhBK,KAAKC,SAAgB,CAEhC,OAXO,mBAWW,KAANrJ,EAAkB,EAAP+I,EAAa,EAAMA,MAQlD3L,EAASkM,OAAS,SAAU7D,GACxB,WAAetB,KAARsB,GAA6B,OAARA,GAUhCrI,EAASmM,oBAAsB,SAAU1B,EAAOjL,EAAOsC,GACnD,GAAIsK,GACA7B,EACA3L,EACAgE,EAAI,EACJyJ,EAA2D,gBAArCrM,GAASsI,OAAOmC,EAAO,EAAGjL,EACpD,IAAIiL,EAAM5H,OACN,KAAON,oBAAkB6J,IAAWxJ,EAAI6H,EAAM5H,QAC1CuJ,EAASpM,EAASsI,OAAOmC,EAAO7H,EAAGpD,GACnCZ,EAAM6L,EAAM7H,IAGpB,MAAOA,EAAI6H,EAAM5H,OAAQD,IACrB2H,EAAUvK,EAASsI,OAAOmC,EAAO7H,EAAGpD,GAChC+C,oBAAkBgI,KAGlB8B,IACAD,GAAUA,EACV7B,GAAWA,GAEXzI,EAASsK,EAAQ7B,GAAW,IAC5B6B,EAAS7B,EACT3L,EAAM6L,EAAM7H,IAGpB,OAAOhE,IAWXoB,EAASa,SAAW,SAAU2E,EAAMrE,EAAWmL,GAC3CA,GAAyB/J,oBAAkB+J,IAAkCA,CAC7E,IACIjE,GADAS,KAEAyD,IAQJ,OAPA/G,GAAKgH,QAAQ,SAAUC,EAAM/B,IACzBrC,EAA+B,gBAAjB7C,GAAKkF,GAAuB1K,EAASsI,OAAO9C,EAAMkF,EAAOvJ,GAAaqE,EAAKkF,KAC5E6B,KACTzD,EAAOnI,KAAM2L,EAA+B9G,EAAKkF,GAAXrC,GACtCkE,EAAIlE,GAAO,KAGZS,GAMX9I,EAAS0M,qBAAuB,KAKhC1M,EAAS2M,kBAAmB,EAK5B3M,EAASC,WAAa,SAAU2M,GAC5B,IACI,KAAM,IAAIC,OAAMD,GAEpB,MAAOlL,GACH,KAAMA,GAAEoL,QAAU,KAAOpL,EAAEqL,QAGnC/M,EAASuH,YAMLyF,IAAK,SAAUnD,EAAIrK,GAIf,IAAK,GAFD6I,GADAS,EAAS,EAETuD,EAAwD,gBAAlCrM,GAASsI,OAAOuB,EAAI,EAAGrK,GACxCoD,EAAI,EAAGA,EAAIiH,EAAGhH,OAAQD,IAC3ByF,EAAMrI,EAASsI,OAAOuB,EAAIjH,EAAGpD,GACxByN,MAAM5E,IAAgB,OAARA,IACXgE,IACAhE,GAAOA,GAEXS,GAAUT,EAGlB,OAAOS,IAOXoE,QAAS,SAAUrD,EAAIrK,GACnB,MAAOQ,GAASuH,WAAWyF,IAAInD,EAAIrK,GAASqK,EAAGhH,QAOnDsK,IAAK,SAAUtD,EAAIrK,GACf,GAAIsC,EAKJ,OAJqB,kBAAVtC,KACPsC,EAAWtC,EACXA,EAAQ,MAELQ,EAASgG,UAAUxG,EAAOQ,EAASmM,oBAAoBtC,EAAIrK,EAAOsC,GAAY9B,EAAS2G,eAQlGyG,IAAK,SAAUvD,EAAIrK,GACf,GAAIsC,EAKJ,OAJqB,kBAAVtC,KACPsC,EAAWtC,EACXA,EAAQ,MAELQ,EAASgG,UAAUxG,EAAOQ,EAASmM,oBAAoBtC,EAAIrK,EAAOsC,GAAY9B,EAAS4G,gBAOlGyG,UAAW,SAAUxD,EAAIrK,GACrB,MAAO,IAAI8N,GAAYzD,GAAI3J,cAAa,GAAI7B,IAAQ6C,MAAM1B,EAAO,SAAS,GAAM,IAAOqD,QAO3F0K,WAAY,SAAU1D,EAAIrK,GACtB,MAAO,IAAI8N,GAAYzD,GAAI3J,cAAa,GAAI7B,IAAQ6C,MAAM1B,EAAO,SAAS,GAAO,IAAOqD,QAQ5FiF,MAAO,SAAU+B,EAAIrK,GACjB,MAAOqK,GAAGhH,SAMlB7C,EAASwN,iBACLC,IAAK,WACLC,IAAK,cACLC,KAAM,kBACNC,KAAM,qBACNC,KAAM,QACNC,KAAM,WACNC,KAAM,WACNC,KAAM,WACNC,KAAM,cAMVjO,EAASkO,cACLT,IAAK,OACLC,IAAK,OACLC,KAAM,OACNC,KAAM,OACNC,KAAM,OACNC,KAAM,OACNK,SAAY,OACZC,gBAAmB,OACnBC,YAAe,OACfC,mBAAsB,OACtBC,MAAS,OACTC,SAAY,QAMhBxO,EAASyO,eACLT,KAAM,WACNC,KAAM,aACNF,KAAM,cACNW,SAAY,WACZC,WAAc,aACdC,SAAY,eAMhB5O,EAAS6O,iBACLb,KAAM,WACNC,KAAM,aACNF,KAAM,WACNW,SAAY,WACZC,WAAc,aACdC,SAAY,YAEhB5O,EAASqK,YACLyE,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,KACVC,IAAU,KACVC,IAAU,KACVC,IAAU,KACVC,IAAU,KACVC,IAAU,KACVC,IAAU,KACVC,IAAU,KACVC,IAAU,KACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,KACVC,IAAU,KACVC,IAAU,KACVC,IAAU,KACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,KACVC,IAAU,KACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,KACVC,IAAU,KACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,KACVC,IAAU,KACVC,IAAU,KACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,KACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,KACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,KACVC,IAAU,KACVC,IAAU,KACVC,IAAU,KACVC,IAAU,KACVC,IAAU,KACVC,IAAU,KACVC,IAAU,KACVC,IAAU,KACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,KACVC,IAAU,KACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,KACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,KACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,KACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,KACVC,IAAU,KACVC,IAAU,KACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,KACVC,IAAU,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"}